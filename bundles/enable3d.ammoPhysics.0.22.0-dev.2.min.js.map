{"version":3,"sources":["webpack://ENABLE3D/webpack/universalModuleDefinition","webpack://ENABLE3D/./node_modules/@yandeu/events/cjs/index.js","webpack://ENABLE3D/./node_modules/@yandeu/events/cjs/version.js","webpack://ENABLE3D/../common/node_modules/@yandeu/events/cjs/index.js","webpack://ENABLE3D/../common/node_modules/@yandeu/events/cjs/version.js","webpack://ENABLE3D/external \"ConvexGeometry\"","webpack://ENABLE3D/external \"THREE\"","webpack://ENABLE3D/webpack/bootstrap","webpack://ENABLE3D/webpack/runtime/define property getters","webpack://ENABLE3D/webpack/runtime/hasOwnProperty shorthand","webpack://ENABLE3D/webpack/runtime/make namespace object","webpack://ENABLE3D/../common/dist/logger.js","webpack://ENABLE3D/../common/dist/extendedObject3D.js","webpack://ENABLE3D/../common/dist/extendedMesh.js","webpack://ENABLE3D/../common/dist/extendedGroup.js","webpack://ENABLE3D/./src/constraints.ts","webpack://ENABLE3D/./src/three-to-ammo.js","webpack://ENABLE3D/../common/dist/defaultMaterial.js","webpack://ENABLE3D/../common/dist/factories.js","webpack://ENABLE3D/./src/collisionEvents.ts","webpack://ENABLE3D/./src/convexObjectBreaker.ts","webpack://ENABLE3D/../common/dist/wasmLoader.js","webpack://ENABLE3D/../common/dist/physicsLoader.js","webpack://ENABLE3D/../common/dist/applyMixins.js","webpack://ENABLE3D/./src/raycaster/raycaster.ts","webpack://ENABLE3D/./src/raycaster/closestRayResultCallback.ts","webpack://ENABLE3D/./src/raycaster/allHitsRayResultCallback.ts","webpack://ENABLE3D/./src/lib/Clock.ts","webpack://ENABLE3D/./src/physics.ts","webpack://ENABLE3D/./src/shapes.ts","webpack://ENABLE3D/./src/debugDrawer.ts","webpack://ENABLE3D/./src/torusShape.ts","webpack://ENABLE3D/../common/dist/physicsBody.js"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__428__","__WEBPACK_EXTERNAL_MODULE__152__","__spreadArray","this","to","from","i","il","length","j","Object","defineProperty","value","Events","version_1","EE","fn","context","once","addListener","emitter","event","TypeError","listener","_events","has","get","set","push","_eventsCount","clearEvent","Map","delete","VERSION","enumerable","configurable","prototype","eventNames","Array","keys","listeners","handlers","l","ee","listenerCount","emit","_a","_b","args","_i","arguments","removeListener","undefined","call","apply","length_1","on","events","removeAllListeners","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","obj","prop","hasOwnProperty","r","Symbol","toStringTag","msg","console","error","ExtendedObject3D","Object3D","super","isExtendedObject3D","isGroup","vector3","Vector3","hasBody","fragmentDepth","breakable","fractureImpulse","_currentAnimation","_animationActions","name","id","theta","worldTheta","phi","worldPhi","getWorldDirection","Math","atan2","x","z","acos","y","animationMixer","_animationMixer","AnimationMixer","current","add","animation","_animsAdd","_animsGet","play","transitionDuration","loop","_animsPlay","mixer","warn","anims","clipAction","action","next","reset","crossFadeFrom","clampWhenFinished","setLoop","LoopOnce","ExtendedMesh","Mesh","geometry","material","isExtendedMesh","ExtendedGroup","Group","isExtendedGroup","isMesh","Constraints","worldTransform","physicsWorld","tmpBtVector3","Ammo","btVector3","v","lock","bodyA","bodyB","disableCollisionsBetweenLinkedBodies","fixed","pointToPoint","config","hinge","slider","spring","coneTwist","frameA","frameB","dof","offset","center","transformB","btTransform","setIdentity","v1","getWorldTransform","getOrigin","v2","dx","dy","dz","setOrigin","transformA","getCenterOfMassTransform","inverse","op_mul","zero","angularLowerLimit","angularUpperLimit","transform","getTransform","ammo","setRotation","getRotation","constraint","btFixedConstraint","addConstraint","pivotA","pivotB","pivotV3","targetPivotV3","btPoint2PointConstraint","axisA","axisB","axisV3","targetAxisV3","btHingeConstraint","linearLowerLimit","lll","linearUpperLimit","lul","all","aul","rotationA","setEulerZYX","rotationB","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","stiffness","damping","angularLock","enableSpring","off","btGeneric6DofSpringConstraint","setValue","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","log","toAmmoV3","PI","setStiffness","setDamping","rbAFrame","rbBFrame","btConeTwistConstraint","setAngularOnly","btGeneric6DofConstraint","destroy","TYPE","FIT","createHullShape","vertex","matrix","Matrix4","vertices","matrices","matrixWorld","options","type","_setOptions","fit","bounds","_computeBounds","btVertex","originalHull","btConvexHullShape","setMargin","margin","addVectors","max","min","multiplyScalar","vertexCount","maxVertices","hullMaxVertices","p","components","fromArray","isLastVertex","random","applyMatrix4","sub","addPoint","collisionShape","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","_finishCollisionShape","_computeScale","createHACDShapes","vector","indexes","scale","triCount","hacd","HACD","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","points","_malloc","triangles","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","indices","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","pi","px","py","pz","createVHACDShapes","vhacd","VHACD","params","Parameters","set_m_resolution","resolution","set_m_depth","depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","createTriMeshShape","va","vb","vc","bta","btb","btc","triMesh","btTriangleMesh","index","ai","bi","ci","addTriangle","localScale","setScaling","concave","btBvhTriangleMeshShape","btConvexTriangleMeshShape","resources","iterateGeometries","cb","parseInt","REVISION","copy","invert","getInverse","setFromMatrixScale","traverse","mesh","includeInvisible","el","object3D","visible","identity","updateWorldMatrix","multiplyMatrices","isBufferGeometry","attributes","position","array","elements","Box3","minX","minY","minZ","maxX","maxY","maxZ","_iterateVertices","_defaultMaterial","MeshLambertMaterial","color","__rest","s","e","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Factories","scene","isHeadless","defaultMaterial","plane","planeConfig","materialConfig","makePlane","box","boxConfig","makeBox","sphere","sphereConfig","makeSphere","cylinder","cylinderConfig","makeCylinder","cone","coneConfig","makeCone","torus","torusConfig","makeTorus","extrude","extrudeConfig","makeExtrude","addMesh","existing","object","addExisting","addPlane","addBox","ground","groundConfig","addGround","addSphere","addCylinder","addCone","addTorus","addExtrude","addMaterial","isArray","Line","Points","castShadow","receiveShadow","shape","autoCenter","rest","bevelEnabled","ExtrudeBufferGeometry","assign","createMesh","PlaneBufferGeometry","width","height","widthSegments","heightSegments","side","DoubleSide","SphereBufferGeometry","radius","phiStart","phiLength","thetaStart","thetaLength","BoxBufferGeometry","depthSegments","rotateX","CylinderBufferGeometry","radiusTop","radiusBottom","radiusSegments","openEnded","ConeBufferGeometry","TorusBufferGeometry","tube","radialSegments","tubularSegments","arc","MeshBasicMaterial","basic","MeshNormalMaterial","normal","MeshStandardMaterial","standard","lambert","MeshPhongMaterial","phong","physical","MeshPhysicalMaterial","MeshToonMaterial","toon","LineBasicMaterial","line","PointsMaterial","custom","CollisionEvents","object1","object2","eventCallback","body","checkCollisions","data","bodies","newConvexGeometry","window","THREE","ConvexGeometry","ConvexObjectBreaker","minSizeForBreak","smallDelta","tempLine1","Line3","tempPlane1","Plane","tempPlane2","tempPlane_Cut","tempCM1","tempCM2","tempVector3","tempVector3_2","tempVector3_3","tempVector3_P0","tempVector3_P1","tempVector3_P2","tempVector3_N0","tempVector3_N1","tempVector3_AB","tempVector3_CB","tempResultObjects","segments","constructor","prepareBreakableObject","mass","velocity","angularVelocity","userData","ammoPhysicsData","clone","subdivideByImpact","pointOfImpact","maxRadialIterations","maxRandomIterations","debris","setFromCoplanarPoints","maxTotalIterations","scope","subdivideRadial","subObject","startAngle","endAngle","numIterations","angle","constant","applyAxisAngle","cutByPlane","obj1","obj2","output","coords","normals","numPoints","numFaces","getIndex","getVertexIndex","faceIdx","vert","idx","points1","points2","delta","numPointPairs","p0","p1","n0","n1","a1","b1","c1","a2","b2","c2","dot","localPlane","updateMatrix","transformPlaneToLocalSpace","segment","i0","i1","mark0","distanceToPoint","mark1","start","end","intersection","intersectLine","segmentedObject1","segmentedObject2","newMass","radius1","numPoints1","divideScalar","radius2","numPoints2","numObjects","quaternion","transformFreeVector","m","transformFreeVectorInverse","transformTiedVectorInverse","resultPlane","referencePoint","coplanarPoint","wasmSupported","WebAssembly","instantiate","Module","Uint8Array","of","Instance","message","path","doneCallback","url","tag","document","createElement","onload","onerror","Error","async","src","head","appendChild","loadScriptAsync","PhysicsLoader","callback","__loadPhysics","then","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","Raycaster","physics","_btRayFrom","_btRayTo","_btRayCallback","hasHit","ClosestRayResultCallback","AllHitsRayResultCallback","rayTest","ClosestRaycaster","AllHitsRaycaster","h","get_m_hitPointWorld","get_m_hitNormalWorld","castObject","get_m_collisionObject","btRigidBody","threeObject","size","hh","at","getHitPointsWorld","threeObjects","objects","get_m_collisionObjects","rb","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","getElapsedTime","getDelta","diff","newTime","AmmoPhysics","rigidBodies","earlierDetectedCollisions","complexShapes","gravity","tmpEuler","Euler","tmpQuaternion","Quaternion","tmpVector3","tmpVector3a","tmpMatrix4","tmpMatrix4a","tmpBtQuaternion","btQuaternion","emptyV3","impactPoint","impactNormal","b","includes","isSoftBody","removeSoftBody","removeRigidBody","destructor","splice","setupPhysicsWorld","convexBreaker","objectsToRemove","numObjectsToRemove","collisionEvents","collisionFlags","translateX","constraints","debugDrawer","world","debugDrawMode","drawOnTop","maxBufferSize","BufferGeometry","Float32Array","colors","setAttribute","BufferAttribute","setUsage","StaticDrawUsage","vertexColors","depthTest","LineSegments","renderOrder","frustumCulled","enabled","DebugDrawer","drawLine","bind","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","setDebugDrawer","remove","needsUpdate","debugDrawWorld","setDrawRange","heap","HEAPF32","g","fromX","fromY","fromZ","setXYZ","toX","toY","toZ","pointOnB","normalOnB","distance","_lifeTime","warningString","Pointer_stringify","warnedOnce","_location","_textString","debugMode","update","softBodies","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","btSoftBodyRigidBodyCollisionConfiguration","softBodySolver","btDefaultSoftBodySolver","btSoftRigidDynamicsWorld","setGravity","parent","setTimeout","updatePhysics","detectCollisions","deltaTime","stepSimulation","maxSubSteps","fixedTimeStep","objThree","ms","getMotionState","didUpdate","_emitUpdateEvents","eventEmitter","isKinematicObject","needUpdate","getWorldQuaternion","getWorldPosition","w","setWorldTransform","skipUpdate","isStaticObject","q","ignoreScale","getCollisionShape","getLocalScaling","compose","multiply","decompose","detectedCollisions","getDispatcher","numManifolds","getNumManifolds","contactManifold","getManifoldByIndexInternal","numContacts","getNumContacts","rb0","getBody0","rb1","getBody1","threeObject0","threeObject1","checkCollisions0","checkCollisions1","breakable0","breakable1","fractureImpulse0","fractureImpulse1","checkBreakable","contact","maxImpulse","contactPoint","getContactPoint","getDistance","impulse","getAppliedImpulse","get_m_positionWorldOnB","get_m_normalWorldOnB","names","sort","combinedName","find","collision","MAX_FRAGMENT_DEPTH","physicsBody","vel","getLinearVelocity","angVel","getAngularVelocity","fragment","createDebrisFromBreakableObject","removeDebris","split","obj0","enable","disable","setup","collider","addCollider","addConstraints","raycaster","defaultParams","test","parameters","quat","axis","btHalfExtents","isGeometry","fromGeometry","vertexArray","matrixArray","indexArray","extractData","btBoxShape","btSphereShape","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btConeShape","btConeShapeX","btConeShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","SIMD_PI","subdivisions","gap","sqrt","cos","cylinderShape","compoundShape","btCompoundShape","forward","rotation","rotate","addChildShape","createTorusShape","mergeCollisionShapesToCompoundShape","collisionShapes","_tmp","pos","applyPosQuatScaleMargin","getWorldScale","toString","slice","compound","collisionGroup","collisionMask","addChildren","map","createCollisionShape","localTransform","rigidBody","collisionShapeToRigidBody","addRigidBodyToWorld","prepareThreeObjectForCollisionShape","cs","children","child","addRigidBody","ptr","values","errors","_needUpdate","tmpBtVector3_1","need","updateCallback","setupEventEmitter","onUpdateEvent","collisionCallback","onCollision","setFromEuler","ammoQuat","q1","normalize","setLinearVelocity","setAngularVelocity","applyCentralImpulse","applyCentralForce","applyCentralLocalForce","relativePosition","applyImpulse","applyLocalTorque","applyTorque","applyTorqueImpulse","setCollisionFlags","getCollisionFlags","setRestitution","setFriction","linear","angular","setLinearFactor","setAngularFactor","threshold","setCcdMotionThreshold","setCcdSweptSphereRadius","setLocalScaling","disableDeactivation","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","setActivationState"],"mappings":"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","file":"enable3d.ammoPhysics.0.22.0-dev.2.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\", \"ConvexGeometry\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ENABLE3D\"] = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse\n\t\troot[\"ENABLE3D\"] = factory(root[\"THREE\"], root[\"ConvexGeometry\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__428__, __WEBPACK_EXTERNAL_MODULE__152__) {\nreturn ","\"use strict\";\r\n/**\r\n * @package      npmjs.com/package/@yandeu/events (events.min.js)\r\n *\r\n * @author       Arnout Kazemier (https://github.com/3rd-Eden)\r\n * @copyright    Copyright (c) 2014 Arnout Kazemier\r\n * @license      {@link https://github.com/primus/eventemitter3/blob/master/LICENSE|MIT}\r\n *\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/yandeu/events\r\n * @license      {@link https://github.com/yandeu/events/blob/master/LICENSE|MIT}\r\n */\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Events = void 0;\r\nvar version_1 = require(\"./version\");\r\nvar EE = /** @class */ (function () {\r\n    function EE(fn, context, once) {\r\n        if (once === void 0) { once = false; }\r\n        this.fn = fn;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n    return EE;\r\n}());\r\nvar addListener = function (emitter, event, fn, context, once) {\r\n    if (typeof fn !== 'function') {\r\n        throw new TypeError('The listener must be a function');\r\n    }\r\n    var listener = new EE(fn, context || emitter, once);\r\n    if (!emitter._events.has(event))\r\n        emitter._events.set(event, listener), emitter._eventsCount++;\r\n    else if (!emitter._events.get(event).fn)\r\n        emitter._events.get(event).push(listener);\r\n    else\r\n        emitter._events.set(event, [emitter._events.get(event), listener]);\r\n    return emitter;\r\n};\r\nvar clearEvent = function (emitter, event) {\r\n    if (--emitter._eventsCount === 0)\r\n        emitter._events = new Map();\r\n    else\r\n        emitter._events.delete(event);\r\n};\r\nvar Events = /** @class */ (function () {\r\n    function Events() {\r\n        this._events = new Map();\r\n        this._eventsCount = 0;\r\n    }\r\n    Object.defineProperty(Events, \"VERSION\", {\r\n        get: function () {\r\n            return version_1.VERSION;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Events.prototype.eventNames = function () {\r\n        return Array.from(this._events.keys());\r\n    };\r\n    Events.prototype.listeners = function (event) {\r\n        var handlers = this._events.get(event);\r\n        if (!handlers)\r\n            return [];\r\n        if (handlers.fn)\r\n            return [handlers.fn];\r\n        for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n            ee[i] = handlers[i].fn;\r\n        }\r\n        return ee;\r\n    };\r\n    Events.prototype.listenerCount = function (event) {\r\n        var listeners = this._events.get(event);\r\n        if (!listeners)\r\n            return 0;\r\n        if (listeners.fn)\r\n            return 1;\r\n        return listeners.length;\r\n    };\r\n    Events.prototype.emit = function (event) {\r\n        var _a, _b;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (!this._events.has(event))\r\n            return false;\r\n        var listeners = this._events.get(event);\r\n        var i;\r\n        if (listeners.fn) {\r\n            if (listeners.once)\r\n                this.removeListener(event, listeners.fn, undefined, true);\r\n            return (_a = listeners.fn).call.apply(_a, __spreadArray([listeners.context], args)), true;\r\n        }\r\n        else {\r\n            var length_1 = listeners.length;\r\n            for (i = 0; i < length_1; i++) {\r\n                if (listeners[i].once)\r\n                    this.removeListener(event, listeners[i].fn, undefined, true);\r\n                (_b = listeners[i].fn).call.apply(_b, __spreadArray([listeners[i].context], args));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Events.prototype.on = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, false);\r\n    };\r\n    Events.prototype.once = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, true);\r\n    };\r\n    Events.prototype.removeListener = function (event, fn, context, once) {\r\n        if (!this._events.has(event))\r\n            return this;\r\n        if (!fn) {\r\n            clearEvent(this, event);\r\n            return this;\r\n        }\r\n        var listeners = this._events.get(event);\r\n        if (listeners.fn) {\r\n            if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\r\n                clearEvent(this, event);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n                if (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) {\r\n                    events.push(listeners[i]);\r\n                }\r\n            }\r\n            // Reset the array, or remove it completely if we have no more listeners.\r\n            if (events.length)\r\n                this._events.set(event, events.length === 1 ? events[0] : events);\r\n            else\r\n                clearEvent(this, event);\r\n        }\r\n        return this;\r\n    };\r\n    Events.prototype.removeAllListeners = function (event) {\r\n        if (event) {\r\n            if (this._events.delete(event))\r\n                clearEvent(this, event);\r\n        }\r\n        else {\r\n            this._events = new Map();\r\n            this._eventsCount = 0;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Events.prototype, \"off\", {\r\n        // alias\r\n        get: function () {\r\n            return this.removeListener;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Events.prototype, \"addListener\", {\r\n        // alias\r\n        get: function () {\r\n            return this.on;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Events;\r\n}());\r\nexports.Events = Events;\r\n/** TESTING SECTION */\r\n// type Colors = 'red' | 'blue' | 'yellow'\r\n// interface EventMap {\r\n//   signal: () => void\r\n//   error: (err: string) => void\r\n//   something: (a: number, b: { colors?: Colors[] }, c: [number, number, string]) => void\r\n// }\r\n// const test = new Events<EventMap>()\r\n// const listener: EventListener<EventMap, 'something'> = (a, b, c) => {\r\n//   console.log(a, b.colors, c)\r\n// }\r\n// test.on('something', listener)\r\n// setTimeout(() => {\r\n//   test.removeListener('something', listener)\r\n// }, 5000)\r\n// test.once('error', err => {\r\n//   console.log('error:', err)\r\n// })\r\n// console.log(test.eventNames())\r\n// test.emit('error', 'ok')\r\n// test.emit('error', 'failed')\r\n// test.emit('something', 1234, { colors: ['blue'] }, [3, 3, 'k'])\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VERSION = void 0;\r\n// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\nexports.VERSION = \"0.0.5\";\r\n//# sourceMappingURL=version.js.map","\"use strict\";\r\n/**\r\n * @package      npmjs.com/package/@yandeu/events (events.min.js)\r\n *\r\n * @author       Arnout Kazemier (https://github.com/3rd-Eden)\r\n * @copyright    Copyright (c) 2014 Arnout Kazemier\r\n * @license      {@link https://github.com/primus/eventemitter3/blob/master/LICENSE|MIT}\r\n *\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/yandeu/events\r\n * @license      {@link https://github.com/yandeu/events/blob/master/LICENSE|MIT}\r\n */\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Events = void 0;\r\nvar version_1 = require(\"./version\");\r\nvar EE = /** @class */ (function () {\r\n    function EE(fn, context, once) {\r\n        if (once === void 0) { once = false; }\r\n        this.fn = fn;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n    return EE;\r\n}());\r\nvar addListener = function (emitter, event, fn, context, once) {\r\n    if (typeof fn !== 'function') {\r\n        throw new TypeError('The listener must be a function');\r\n    }\r\n    var listener = new EE(fn, context || emitter, once);\r\n    if (!emitter._events.has(event))\r\n        emitter._events.set(event, listener), emitter._eventsCount++;\r\n    else if (!emitter._events.get(event).fn)\r\n        emitter._events.get(event).push(listener);\r\n    else\r\n        emitter._events.set(event, [emitter._events.get(event), listener]);\r\n    return emitter;\r\n};\r\nvar clearEvent = function (emitter, event) {\r\n    if (--emitter._eventsCount === 0)\r\n        emitter._events = new Map();\r\n    else\r\n        emitter._events.delete(event);\r\n};\r\nvar Events = /** @class */ (function () {\r\n    function Events() {\r\n        this._events = new Map();\r\n        this._eventsCount = 0;\r\n    }\r\n    Object.defineProperty(Events, \"VERSION\", {\r\n        get: function () {\r\n            return version_1.VERSION;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Events.prototype.eventNames = function () {\r\n        return Array.from(this._events.keys());\r\n    };\r\n    Events.prototype.listeners = function (event) {\r\n        var handlers = this._events.get(event);\r\n        if (!handlers)\r\n            return [];\r\n        if (handlers.fn)\r\n            return [handlers.fn];\r\n        for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n            ee[i] = handlers[i].fn;\r\n        }\r\n        return ee;\r\n    };\r\n    Events.prototype.listenerCount = function (event) {\r\n        var listeners = this._events.get(event);\r\n        if (!listeners)\r\n            return 0;\r\n        if (listeners.fn)\r\n            return 1;\r\n        return listeners.length;\r\n    };\r\n    Events.prototype.emit = function (event) {\r\n        var _a, _b;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (!this._events.has(event))\r\n            return false;\r\n        var listeners = this._events.get(event);\r\n        var i;\r\n        if (listeners.fn) {\r\n            if (listeners.once)\r\n                this.removeListener(event, listeners.fn, undefined, true);\r\n            return (_a = listeners.fn).call.apply(_a, __spreadArray([listeners.context], args)), true;\r\n        }\r\n        else {\r\n            var length_1 = listeners.length;\r\n            for (i = 0; i < length_1; i++) {\r\n                if (listeners[i].once)\r\n                    this.removeListener(event, listeners[i].fn, undefined, true);\r\n                (_b = listeners[i].fn).call.apply(_b, __spreadArray([listeners[i].context], args));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Events.prototype.on = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, false);\r\n    };\r\n    Events.prototype.once = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, true);\r\n    };\r\n    Events.prototype.removeListener = function (event, fn, context, once) {\r\n        if (!this._events.has(event))\r\n            return this;\r\n        if (!fn) {\r\n            clearEvent(this, event);\r\n            return this;\r\n        }\r\n        var listeners = this._events.get(event);\r\n        if (listeners.fn) {\r\n            if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\r\n                clearEvent(this, event);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n                if (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) {\r\n                    events.push(listeners[i]);\r\n                }\r\n            }\r\n            // Reset the array, or remove it completely if we have no more listeners.\r\n            if (events.length)\r\n                this._events.set(event, events.length === 1 ? events[0] : events);\r\n            else\r\n                clearEvent(this, event);\r\n        }\r\n        return this;\r\n    };\r\n    Events.prototype.removeAllListeners = function (event) {\r\n        if (event) {\r\n            if (this._events.delete(event))\r\n                clearEvent(this, event);\r\n        }\r\n        else {\r\n            this._events = new Map();\r\n            this._eventsCount = 0;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Events.prototype, \"off\", {\r\n        // alias\r\n        get: function () {\r\n            return this.removeListener;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Events.prototype, \"addListener\", {\r\n        // alias\r\n        get: function () {\r\n            return this.on;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Events;\r\n}());\r\nexports.Events = Events;\r\n/** TESTING SECTION */\r\n// type Colors = 'red' | 'blue' | 'yellow'\r\n// interface EventMap {\r\n//   signal: () => void\r\n//   error: (err: string) => void\r\n//   something: (a: number, b: { colors?: Colors[] }, c: [number, number, string]) => void\r\n// }\r\n// const test = new Events<EventMap>()\r\n// const listener: EventListener<EventMap, 'something'> = (a, b, c) => {\r\n//   console.log(a, b.colors, c)\r\n// }\r\n// test.on('something', listener)\r\n// setTimeout(() => {\r\n//   test.removeListener('something', listener)\r\n// }, 5000)\r\n// test.once('error', err => {\r\n//   console.log('error:', err)\r\n// })\r\n// console.log(test.eventNames())\r\n// test.emit('error', 'ok')\r\n// test.emit('error', 'failed')\r\n// test.emit('something', 1234, { colors: ['blue'] }, [3, 3, 'k'])\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VERSION = void 0;\r\n// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\nexports.VERSION = \"0.0.5\";\r\n//# sourceMappingURL=version.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE__152__;","module.exports = __WEBPACK_EXTERNAL_MODULE__428__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const logger = (msg) => {\n    console.error(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\n};\nexport default logger;\n//# sourceMappingURL=logger.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\nimport { AnimationMixer, LoopOnce, Object3D, Vector3 } from 'three';\nexport class ExtendedObject3D extends Object3D {\n    constructor() {\n        super();\n        this.isExtendedObject3D = true;\n        this.isGroup = false;\n        this.vector3 = new Vector3();\n        this.hasBody = false;\n        // convex object breaking\n        this.fragmentDepth = 0;\n        this.breakable = false;\n        this.fractureImpulse = 1;\n        this._currentAnimation = '';\n        this._animationActions = new Map();\n        this.name = `object-${this.id}`;\n    }\n    /** Returns all values relative to the world. */\n    get world() {\n        return {\n            theta: this.worldTheta,\n            phi: this.worldPhi\n        };\n    }\n    /** Get the theta relative to the world. */\n    get worldTheta() {\n        this.getWorldDirection(this.vector3);\n        return Math.atan2(this.vector3.x, this.vector3.z);\n    }\n    /** Get the phi relative to the world. */\n    get worldPhi() {\n        this.getWorldDirection(this.vector3);\n        return Math.acos(this.vector3.y);\n    }\n    set animationMixer(animationMixer) {\n        this._animationMixer = animationMixer;\n    }\n    get animationMixer() {\n        if (!this._animationMixer)\n            this._animationMixer = new AnimationMixer(this);\n        return this._animationMixer;\n    }\n    /** Control your animations. */\n    get anims() {\n        return {\n            /** Get the name of the current animation. */\n            current: this._currentAnimation,\n            /** Add animation name and the AnimationClip. */\n            add: (name, animation) => this._animsAdd(name, animation),\n            /** Get AnimationAction by animation name. */\n            get: (name) => this._animsGet(name),\n            /**\n             * Play an animation.\n             * @param name Animation name.\n             * @param transitionDuration Transition duration in ms.\n             * @param loop Should the animation loop?\n             */\n            play: (name, transitionDuration = 500, loop = true) => this._animsPlay(name, transitionDuration, loop),\n            /** Get the AnimationMixer */\n            mixer: this.animationMixer\n        };\n    }\n    /** @deprecated Please use anims instead! */\n    get animation() {\n        console.warn('[enable3d] Please use \"anims\" instead of \"animation\"');\n        return this.anims;\n    }\n    _animsAdd(name, animation) {\n        this._animationActions.set(name, this.animationMixer.clipAction(animation));\n    }\n    _animsGet(name) {\n        const action = this._animationActions.get(name);\n        if (!action)\n            console.warn(`[enable3d] Animation(${name}) not found!`);\n        return action;\n    }\n    _animsPlay(name, transitionDuration = 500, loop = true) {\n        const next = this._animationActions.get(name);\n        const current = this._animationActions.get(this._currentAnimation);\n        if (next) {\n            next.reset();\n            if (current) {\n                next.crossFadeFrom(current, transitionDuration / 1000, true);\n                next.clampWhenFinished = true;\n            }\n            if (!loop)\n                next.setLoop(LoopOnce, 0);\n            next.play();\n        }\n        this._currentAnimation = name;\n    }\n    /** @deprecated Use animation.play(name) instead! */\n    setAction(name) {\n        console.warn(`[enable3d] setAction(${name}) is deprecated. Use animation.play(${name}) instead!`);\n    }\n}\nexport default ExtendedObject3D;\n//# sourceMappingURL=extendedObject3D.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\nimport { Mesh, Vector3 } from 'three';\nexport class ExtendedMesh extends Mesh {\n    constructor(geometry, material) {\n        super(geometry, material);\n        this.isExtendedMesh = true;\n        this.isGroup = false;\n        this.vector3 = new Vector3();\n        this.hasBody = false;\n        // convex object breaking\n        this.fragmentDepth = 0;\n        this.breakable = false;\n        this.fractureImpulse = 1;\n        this.name = `object-${this.id}`;\n    }\n    /** Returns all values relative to the world. */\n    get world() {\n        return {\n            theta: this.worldTheta,\n            phi: this.worldPhi\n        };\n    }\n    /** Get the theta relative to the world. */\n    get worldTheta() {\n        this.getWorldDirection(this.vector3);\n        return Math.atan2(this.vector3.x, this.vector3.z);\n    }\n    /** Get the phi relative to the world. */\n    get worldPhi() {\n        this.getWorldDirection(this.vector3);\n        return Math.acos(this.vector3.y);\n    }\n}\n//# sourceMappingURL=extendedMesh.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\nimport { Group } from 'three';\nexport class ExtendedGroup extends Group {\n    constructor() {\n        super();\n        this.isExtendedGroup = true;\n        this.isMesh = false;\n        this.hasBody = false;\n        // convex object breaking\n        this.fragmentDepth = 0;\n        this.breakable = false;\n        this.fractureImpulse = 1;\n        this.name = `object-${this.id}`;\n    }\n}\n//# sourceMappingURL=extendedGroup.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\n// Inspired by https://github.com/donmccurdy/aframe-physics-system/blob/master/src/components/ammo-constraint.js\n\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\nimport { XYZ } from '@enable3d/common/dist/types'\n\nexport default class Constraints {\n  public tmpBtVector3 = new Ammo.btVector3()\n\n  constructor(public worldTransform: Ammo.btTransform, public physicsWorld: Ammo.btDiscreteDynamicsWorld) {}\n\n  private toAmmoV3(v?: XYZ, d: number = 0) {\n    return new Ammo.btVector3(\n      typeof v?.x !== 'undefined' ? v.x : d,\n      typeof v?.y !== 'undefined' ? v.y : d,\n      typeof v?.z !== 'undefined' ? v.z : d\n    )\n  }\n\n  public get addConstraints() {\n    return {\n      lock: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\n        this.lock(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\n      fixed: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\n        this.fixed(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\n      pointToPoint: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          pivotA?: XYZ\n          pivotB?: XYZ\n        },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.pointToPoint(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      hinge: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          pivotA?: XYZ\n          pivotB?: XYZ\n          axisA?: XYZ\n          axisB?: XYZ\n        },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.hinge(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      slider: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          frameA?: XYZ\n          frameB?: XYZ\n          linearLowerLimit?: number\n          linearUpperLimit?: number\n          angularLowerLimit?: number\n          angularUpperLimit?: number\n        } = {},\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.slider(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      spring: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          stiffness?: number\n          damping?: number\n          angularLock?: boolean\n          linearLowerLimit?: XYZ\n          linearUpperLimit?: XYZ\n          angularLowerLimit?: XYZ\n          angularUpperLimit?: XYZ\n          center?: boolean\n          offset?: XYZ\n          enableSpring?: boolean\n        } = {},\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.spring(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      coneTwist: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          frameA: XYZ\n          frameB: XYZ\n        } = { frameA: {}, frameB: {} },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.coneTwist(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      dof: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config?: {\n          linearLowerLimit?: XYZ\n          linearUpperLimit?: XYZ\n          angularLowerLimit?: XYZ\n          angularUpperLimit?: XYZ\n          center?: boolean\n          offset?: XYZ\n        },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.dof(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies)\n    }\n  }\n\n  private getTransform(\n    bodyA: Ammo.btRigidBody,\n    bodyB: Ammo.btRigidBody,\n    offset: { x: number; y: number; z: number } = { x: 0, y: 0, z: 0 },\n    center: boolean = false\n  ) {\n    // @ts-ignore\n    offset = { x: 0, y: 0, z: 0, ...offset }\n\n    const centerVector = (v1: Ammo.btVector3, v2: Ammo.btVector3) => {\n      var dx = (v1.x() - v2.x()) / 2 + offset.x\n      var dy = (v1.y() - v2.y()) / 2 + offset.y\n      var dz = (v1.z() - v2.z()) / 2 + offset.z\n      return new Ammo.btVector3(dx, dy, dz)\n    }\n\n    const transformB = new Ammo.btTransform()\n    transformB.setIdentity()\n\n    if (!center) {\n      // offset\n      transformB.setOrigin(new Ammo.btVector3(offset.x, offset.y, offset.z))\n\n      const transformA = bodyA.getCenterOfMassTransform().inverse().op_mul(bodyB.getWorldTransform()).op_mul(transformB)\n\n      return { transformA: transformA, transformB: transformB }\n    } else {\n      const center = centerVector(bodyA.getWorldTransform().getOrigin(), bodyB.getWorldTransform().getOrigin())\n\n      const transformB = new Ammo.btTransform()\n      transformB.setIdentity()\n      transformB.setOrigin(center)\n\n      const transformA = bodyA.getCenterOfMassTransform().inverse().op_mul(bodyB.getWorldTransform())\n\n      transformA.op_mul(transformB)\n\n      return { transformA: transformA, transformB: transformB }\n    }\n  }\n\n  private lock(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\n    const zero = { x: 0, y: 0, z: 0 }\n    return this.dof(\n      bodyA,\n      bodyB,\n      { angularLowerLimit: zero, angularUpperLimit: zero },\n      disableCollisionsBetweenLinkedBodies\n    )\n  }\n\n  private fixed(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\n    transform.transformA.setRotation(bodyA.ammo.getWorldTransform().getRotation())\n    transform.transformB.setRotation(bodyB.ammo.getWorldTransform().getRotation())\n    const constraint = new Ammo.btFixedConstraint(bodyA.ammo, bodyB.ammo, transform.transformA, transform.transformB)\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  private pointToPoint(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      pivotA?: XYZ\n      pivotB?: XYZ\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { pivotA, pivotB } = config\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\n    const constraint = new Ammo.btPoint2PointConstraint(bodyA.ammo, bodyB.ammo, pivotV3, targetPivotV3)\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  private hinge(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      pivotA?: XYZ\n      pivotB?: XYZ\n      axisA?: XYZ\n      axisB?: XYZ\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { pivotA, pivotB, axisA, axisB } = config\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\n    const axisV3 = new Ammo.btVector3(axisA?.x || 0, axisA?.y || 0, axisA?.z || 0)\n    const targetAxisV3 = new Ammo.btVector3(axisB?.x || 0, axisB?.y || 0, axisB?.z || 0)\n    const constraint = new Ammo.btHingeConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      pivotV3,\n      targetPivotV3,\n      axisV3,\n      targetAxisV3,\n      true\n    )\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  // https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=9&t=12690&p=42152&hilit=btSliderConstraint#p42152\n  private slider(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      frameA?: XYZ\n      frameB?: XYZ\n      linearLowerLimit?: number\n      linearUpperLimit?: number\n      angularLowerLimit?: number\n      angularUpperLimit?: number\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\n\n    const {\n      frameA = {},\n      frameB = {},\n      linearLowerLimit: lll = 0,\n      linearUpperLimit: lul = 0,\n      angularLowerLimit: all = 0,\n      angularUpperLimit: aul = 0\n    } = config\n\n    const rotationA = transform.transformA.getRotation()\n    rotationA.setEulerZYX(frameA.x || 0, frameA.y || 0, frameA.z || 0)\n    transform.transformA.setRotation(rotationA)\n\n    const rotationB = transform.transformB.getRotation()\n    rotationB.setEulerZYX(frameB.x || 0, frameB.y || 0, frameB.z || 0)\n    transform.transformB.setRotation(rotationB)\n\n    const constraint = new Ammo.btSliderConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      transform.transformA,\n      transform.transformB,\n      true\n    )\n\n    constraint.setLowerLinLimit(lll)\n    constraint.setUpperLinLimit(lul)\n    constraint.setLowerAngLimit(all)\n    constraint.setUpperAngLimit(aul)\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  private spring(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      stiffness?: number\n      damping?: number\n      angularLock?: boolean\n      linearLowerLimit?: XYZ\n      linearUpperLimit?: XYZ\n      angularLowerLimit?: XYZ\n      angularUpperLimit?: XYZ\n      center?: boolean\n      offset?: XYZ\n      enableSpring?: boolean\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const {\n      stiffness = 50,\n      damping = 0.01,\n      angularLock = false,\n      linearLowerLimit: lll = {},\n      linearUpperLimit: lul = {},\n      angularLowerLimit: all = {},\n      angularUpperLimit: aul = {},\n      offset = {},\n      center = false,\n      enableSpring = true\n    } = config\n\n    const off = { x: 0, y: 0, z: 0, ...offset }\n\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      transform.transformA,\n      transform.transformB,\n      true\n    )\n\n    this.tmpBtVector3.setValue(lll.x || 0, lll.y || 0, lll.z || 0)\n    constraint.setLinearLowerLimit(this.tmpBtVector3)\n\n    this.tmpBtVector3.setValue(lul.x || 0, lul.y || 0, lul.z || 0)\n    constraint.setLinearUpperLimit(this.tmpBtVector3)\n\n    if (angularLock) {\n      this.tmpBtVector3.setValue(0, 0, 0)\n      constraint.setAngularLowerLimit(this.tmpBtVector3)\n      constraint.setAngularUpperLimit(this.tmpBtVector3)\n    } else {\n      console.log(all, aul)\n      constraint.setAngularLowerLimit(this.toAmmoV3(all, -Math.PI))\n      constraint.setAngularUpperLimit(this.toAmmoV3(aul, Math.PI))\n    }\n\n    for (let i = 0; i < 3; i++) {\n      constraint.enableSpring(i, enableSpring)\n      constraint.setStiffness(i, stiffness)\n      constraint.setDamping(i, damping)\n    }\n\n    // I have no idea what setEquilibriumPoint does :/\n    // constraint.setEquilibriumPoint()\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n\n    return constraint\n  }\n\n  private coneTwist(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: { frameA: XYZ; frameB: XYZ },\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { frameA, frameB } = config\n\n    const rbAFrame = new Ammo.btTransform()\n    rbAFrame.setIdentity()\n    rbAFrame.getOrigin().setValue(frameA?.x || 0, frameA?.y || 0, frameA?.z || 0)\n\n    const rbBFrame = new Ammo.btTransform()\n    rbBFrame.setIdentity()\n    rbBFrame.getOrigin().setValue(frameB?.x || 0, frameB?.y || 0, frameB?.z || 0)\n\n    const t = this.getTransform(bodyA.ammo, bodyB.ammo)\n\n    const constraint = new Ammo.btConeTwistConstraint(bodyB.ammo, bodyA.ammo, rbAFrame, rbBFrame)\n\n    // does not work at all :/\n    // constraint.setLimit(-Math.PI / 50, Math.PI / 50)\n\n    constraint.setAngularOnly(true)\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n\n    return constraint\n  }\n\n  private dof(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      linearLowerLimit?: XYZ\n      linearUpperLimit?: XYZ\n      angularLowerLimit?: XYZ\n      angularUpperLimit?: XYZ\n      center?: boolean\n      offset?: XYZ\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { offset, center = false } = config\n    const off = { x: 0, y: 0, z: 0, ...offset }\n\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\n\n    const constraint = new Ammo.btGeneric6DofConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      transform.transformA,\n      transform.transformB,\n      true\n    )\n\n    const { linearLowerLimit, linearUpperLimit, angularLowerLimit, angularUpperLimit } = config\n\n    const lll = this.toAmmoV3(linearLowerLimit)\n    const lul = this.toAmmoV3(linearUpperLimit)\n    const all = this.toAmmoV3(angularLowerLimit, -Math.PI)\n    const aul = this.toAmmoV3(angularUpperLimit, Math.PI)\n\n    constraint.setLinearLowerLimit(lll)\n    constraint.setLinearUpperLimit(lul)\n    constraint.setAngularLowerLimit(all)\n    constraint.setAngularUpperLimit(aul)\n\n    Ammo.destroy(lll)\n    Ammo.destroy(lul)\n    Ammo.destroy(all)\n    Ammo.destroy(aul)\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n\n    return constraint\n  }\n}\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @description  This is a modified version of the original code from Kevin Lee\n * (Includes latest three-to-ammo commit from August 6, 2020)\n */\n\n/**\n * @author       Kevin Lee (https://github.com/InfiniteLee)\n * @copyright    Copyright (c) 2020 Kevin Lee; Project Url: https://github.com/InfiniteLee/three-to-ammo\n * @license      {@link https://github.com/InfiniteLee/three-to-ammo/blob/master/LICENSE|MPL-2.0}\n */\n\nimport { Vector3, Matrix4, Quaternion, Box3, REVISION } from 'three'\n;('use strict')\n/* global Ammo */\n\nexport const TYPE = {\n  BOX: 'box',\n  CYLINDER: 'cylinder',\n  SPHERE: 'sphere',\n  CAPSULE: 'capsule',\n  CONE: 'cone',\n  HULL: 'hull',\n  HACD: 'hacd', //Hierarchical Approximate Convex Decomposition\n  VHACD: 'vhacd', //Volumetric Hierarchical Approximate Convex Decomposition\n  MESH: 'mesh',\n  HEIGHTFIELD: 'heightfield'\n}\n\nexport const FIT = {\n  ALL: 'all', //A single shape is automatically sized to bound all meshes within the entity.\n  MANUAL: 'manual' //A single shape is sized manually. Requires halfExtents or sphereRadius.\n}\n\nexport const HEIGHTFIELD_DATA_TYPE = {\n  short: 'short',\n  float: 'float'\n}\n\nexport const createCollisionShapes = function (vertices, matrices, indexes, matrixWorld, options = {}) {\n  switch (options.type) {\n    case TYPE.BOX:\n      return [createBoxShape(vertices, matrices, matrixWorld, options)]\n    case TYPE.CYLINDER:\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)]\n    case TYPE.CAPSULE:\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)]\n    case TYPE.CONE:\n      return [createConeShape(vertices, matrices, matrixWorld, options)]\n    case TYPE.SPHERE:\n      return [createSphereShape(vertices, matrices, matrixWorld, options)]\n    case TYPE.HULL:\n      return [createHullShape(vertices, matrices, matrixWorld, options)]\n    case TYPE.HACD:\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options)\n    case TYPE.VHACD:\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options)\n    case TYPE.MESH:\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)]\n    case TYPE.HEIGHTFIELD:\n      return [createHeightfieldTerrainShape(options)]\n    default:\n      console.warn(options.type + ' is not currently supported')\n      return []\n  }\n}\n\n//TODO: support gimpact (dynamic trimesh) and heightmap\n\nexport const createBoxShape = function (vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.BOX\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents)\n  Ammo.destroy(btHalfExtents)\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\n  return collisionShape\n}\n\nexport const createCylinderShape = function (vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CYLINDER\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case 'y':\n        return new Ammo.btCylinderShape(btHalfExtents)\n      case 'x':\n        return new Ammo.btCylinderShapeX(btHalfExtents)\n      case 'z':\n        return new Ammo.btCylinderShapeZ(btHalfExtents)\n    }\n    return null\n  })()\n  Ammo.destroy(btHalfExtents)\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\n  return collisionShape\n}\n\nexport const createCapsuleShape = function (vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CAPSULE\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const { x, y, z } = options.halfExtents\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case 'y':\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2)\n      case 'x':\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2)\n      case 'z':\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2)\n    }\n    return null\n  })()\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\n  return collisionShape\n}\n\nexport const createConeShape = function (vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CONE\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    )\n  }\n\n  const { x, y, z } = options.halfExtents\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case 'y':\n        return new Ammo.btConeShape(Math.max(x, z), y * 2)\n      case 'x':\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2)\n      case 'z':\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2)\n    }\n    return null\n  })()\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\n  return collisionShape\n}\n\nexport const createSphereShape = function (vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.SPHERE\n  _setOptions(options)\n\n  let radius\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\n    radius = options.sphereRadius\n  } else {\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices))\n  }\n\n  const collisionShape = new Ammo.btSphereShape(radius)\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\n\n  return collisionShape\n}\n\nexport const createHullShape = (function () {\n  const vertex = new Vector3()\n  const center = new Vector3()\n  const matrix = new Matrix4()\n  return function (vertices, matrices, matrixWorld, options = {}) {\n    options.type = TYPE.HULL\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: hull')\n      return null\n    }\n\n    const bounds = _computeBounds(vertices, matrices)\n\n    const btVertex = new Ammo.btVector3()\n    const originalHull = new Ammo.btConvexHullShape()\n    originalHull.setMargin(options.margin)\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\n\n    let vertexCount = 0\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3\n    }\n\n    const maxVertices = options.hullMaxVertices || 100000\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\n    if (vertexCount > maxVertices) {\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`)\n    }\n    const p = Math.min(1, maxVertices / vertexCount)\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i]\n      matrix.fromArray(matrices[i])\n      for (let j = 0; j < components.length; j += 3) {\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3\n        if (Math.random() <= p || isLastVertex) {\n          // always include the last vertex\n          vertex\n            .set(components[j], components[j + 1], components[j + 2])\n            .applyMatrix4(matrix)\n            .sub(center)\n          btVertex.setValue(vertex.x, vertex.y, vertex.z)\n          originalHull.addPoint(btVertex, isLastVertex) // recalc AABB only on last geometry\n        }\n      }\n    }\n\n    let collisionShape = originalHull\n    if (originalHull.getNumVertices() >= 100) {\n      //Bullet documentation says don't use convexHulls with 100 verts or more\n      const shapeHull = new Ammo.btShapeHull(originalHull)\n      shapeHull.buildHull(options.margin)\n      Ammo.destroy(originalHull)\n      collisionShape = new Ammo.btConvexHullShape(\n        Ammo.getPointer(shapeHull.getVertexPointer()),\n        shapeHull.numVertices()\n      )\n      Ammo.destroy(shapeHull) // btConvexHullShape makes a copy\n    }\n\n    Ammo.destroy(btVertex)\n\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\n    return collisionShape\n  }\n})()\n\nexport const createHACDShapes = (function () {\n  const vector = new Vector3()\n  const center = new Vector3()\n  const matrix = new Matrix4()\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.HACD\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: hacd')\n      return []\n    }\n\n    if (!Ammo.hasOwnProperty('HACD')) {\n      console.warn(\n        'HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\n      )\n      return []\n    }\n\n    const bounds = _computeBounds(vertices, matrices)\n    const scale = _computeScale(matrixWorld, options)\n\n    let vertexCount = 0\n    let triCount = 0\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\n\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3\n      if (indexes && indexes[i]) {\n        triCount += indexes[i].length / 3\n      } else {\n        triCount += vertices[i].length / 9\n      }\n    }\n\n    const hacd = new Ammo.HACD()\n    if (options.hasOwnProperty('compacityWeight')) hacd.SetCompacityWeight(options.compacityWeight)\n    if (options.hasOwnProperty('volumeWeight')) hacd.SetVolumeWeight(options.volumeWeight)\n    if (options.hasOwnProperty('nClusters')) hacd.SetNClusters(options.nClusters)\n    if (options.hasOwnProperty('nVerticesPerCH')) hacd.SetNVerticesPerCH(options.nVerticesPerCH)\n    if (options.hasOwnProperty('concavity')) hacd.SetConcavity(options.concavity)\n\n    const points = Ammo._malloc(vertexCount * 3 * 8)\n    const triangles = Ammo._malloc(triCount * 3 * 4)\n    hacd.SetPoints(points)\n    hacd.SetTriangles(triangles)\n    hacd.SetNPoints(vertexCount)\n    hacd.SetNTriangles(triCount)\n\n    let pptr = points / 8,\n      tptr = triangles / 4\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i]\n      matrix.fromArray(matrices[i])\n      for (let j = 0; j < components.length; j += 3) {\n        vector\n          .set(components[j + 0], components[j + 1], components[j + 2])\n          .applyMatrix4(matrix)\n          .sub(center)\n        Ammo.HEAPF64[pptr + 0] = vector.x\n        Ammo.HEAPF64[pptr + 1] = vector.y\n        Ammo.HEAPF64[pptr + 2] = vector.z\n        pptr += 3\n      }\n      if (indexes[i]) {\n        const indices = indexes[i]\n        for (let j = 0; j < indices.length; j++) {\n          Ammo.HEAP32[tptr] = indices[j]\n          tptr++\n        }\n      } else {\n        for (let j = 0; j < components.length / 3; j++) {\n          Ammo.HEAP32[tptr] = j\n          tptr++\n        }\n      }\n    }\n\n    hacd.Compute()\n    Ammo._free(points)\n    Ammo._free(triangles)\n    const nClusters = hacd.GetNClusters()\n\n    const shapes = []\n    for (let i = 0; i < nClusters; i++) {\n      const hull = new Ammo.btConvexHullShape()\n      hull.setMargin(options.margin)\n      const nPoints = hacd.GetNPointsCH(i)\n      const nTriangles = hacd.GetNTrianglesCH(i)\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8)\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4)\n      hacd.GetCH(i, hullPoints, hullTriangles)\n\n      const pptr = hullPoints / 8\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3()\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0]\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1]\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2]\n        btVertex.setValue(px, py, pz)\n        hull.addPoint(btVertex, pi === nPoints - 1)\n        Ammo.destroy(btVertex)\n      }\n\n      _finishCollisionShape(hull, options, scale)\n      shapes.push(hull)\n    }\n\n    return shapes\n  }\n})()\n\nexport const createVHACDShapes = (function () {\n  const vector = new Vector3()\n  const center = new Vector3()\n  const matrix = new Matrix4()\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.VHACD\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: vhacd')\n      return []\n    }\n\n    if (!Ammo.hasOwnProperty('VHACD')) {\n      console.warn(\n        'VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\n      )\n      return []\n    }\n\n    const bounds = _computeBounds(vertices, matrices)\n    const scale = _computeScale(matrixWorld, options)\n\n    let vertexCount = 0\n    let triCount = 0\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\n\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3\n      if (indexes && indexes[i]) {\n        triCount += indexes[i].length / 3\n      } else {\n        triCount += vertices[i].length / 9\n      }\n    }\n\n    const vhacd = new Ammo.VHACD()\n    const params = new Ammo.Parameters()\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\n    if (options.hasOwnProperty('resolution')) params.set_m_resolution(options.resolution)\n    if (options.hasOwnProperty('depth')) params.set_m_depth(options.depth)\n    if (options.hasOwnProperty('concavity')) params.set_m_concavity(options.concavity)\n    if (options.hasOwnProperty('planeDownsampling')) params.set_m_planeDownsampling(options.planeDownsampling)\n    if (options.hasOwnProperty('convexhullDownsampling'))\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling)\n    if (options.hasOwnProperty('alpha')) params.set_m_alpha(options.alpha)\n    if (options.hasOwnProperty('beta')) params.set_m_beta(options.beta)\n    if (options.hasOwnProperty('gamma')) params.set_m_gamma(options.gamma)\n    if (options.hasOwnProperty('pca')) params.set_m_pca(options.pca)\n    if (options.hasOwnProperty('mode')) params.set_m_mode(options.mode)\n    if (options.hasOwnProperty('maxNumVerticesPerCH')) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH)\n    if (options.hasOwnProperty('minVolumePerCH')) params.set_m_minVolumePerCH(options.minVolumePerCH)\n    if (options.hasOwnProperty('convexhullApproximation'))\n      params.set_m_convexhullApproximation(options.convexhullApproximation)\n    if (options.hasOwnProperty('oclAcceleration')) params.set_m_oclAcceleration(options.oclAcceleration)\n\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3)\n    const triangles = Ammo._malloc(triCount * 3 * 4)\n\n    let pptr = points / 8,\n      tptr = triangles / 4\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i]\n      matrix.fromArray(matrices[i])\n      for (let j = 0; j < components.length; j += 3) {\n        vector\n          .set(components[j + 0], components[j + 1], components[j + 2])\n          .applyMatrix4(matrix)\n          .sub(center)\n        Ammo.HEAPF64[pptr + 0] = vector.x\n        Ammo.HEAPF64[pptr + 1] = vector.y\n        Ammo.HEAPF64[pptr + 2] = vector.z\n        pptr += 3\n      }\n      if (indexes[i]) {\n        const indices = indexes[i]\n        for (let j = 0; j < indices.length; j++) {\n          Ammo.HEAP32[tptr] = indices[j]\n          tptr++\n        }\n      } else {\n        for (let j = 0; j < components.length / 3; j++) {\n          Ammo.HEAP32[tptr] = j\n          tptr++\n        }\n      }\n    }\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params)\n    Ammo._free(points)\n    Ammo._free(triangles)\n    const nHulls = vhacd.GetNConvexHulls()\n\n    const shapes = []\n    const ch = new Ammo.ConvexHull()\n    for (let i = 0; i < nHulls; i++) {\n      vhacd.GetConvexHull(i, ch)\n      const nPoints = ch.get_m_nPoints()\n      const hullPoints = ch.get_m_points()\n\n      const hull = new Ammo.btConvexHullShape()\n      hull.setMargin(options.margin)\n\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3()\n        const px = ch.get_m_points(pi * 3 + 0)\n        const py = ch.get_m_points(pi * 3 + 1)\n        const pz = ch.get_m_points(pi * 3 + 2)\n        btVertex.setValue(px, py, pz)\n        hull.addPoint(btVertex, pi === nPoints - 1)\n        Ammo.destroy(btVertex)\n      }\n\n      _finishCollisionShape(hull, options, scale)\n      shapes.push(hull)\n    }\n    Ammo.destroy(ch)\n    Ammo.destroy(vhacd)\n\n    return shapes\n  }\n})()\n\nexport const createTriMeshShape = (function () {\n  const va = new Vector3()\n  const vb = new Vector3()\n  const vc = new Vector3()\n  const matrix = new Matrix4()\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.MESH\n    _setOptions(options)\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn('cannot use fit: manual with type: mesh')\n      return null\n    }\n\n    const scale = _computeScale(matrixWorld, options)\n\n    const bta = new Ammo.btVector3()\n    const btb = new Ammo.btVector3()\n    const btc = new Ammo.btVector3()\n    const triMesh = new Ammo.btTriangleMesh(true, false)\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i]\n      const index = indexes[i] ? indexes[i] : null\n      matrix.fromArray(matrices[i])\n      if (index) {\n        for (let j = 0; j < index.length; j += 3) {\n          const ai = index[j] * 3\n          const bi = index[j + 1] * 3\n          const ci = index[j + 2] * 3\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix)\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix)\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix)\n          bta.setValue(va.x, va.y, va.z)\n          btb.setValue(vb.x, vb.y, vb.z)\n          btc.setValue(vc.x, vc.y, vc.z)\n          triMesh.addTriangle(bta, btb, btc, false)\n        }\n      } else {\n        for (let j = 0; j < components.length; j += 9) {\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix)\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix)\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix)\n          bta.setValue(va.x, va.y, va.z)\n          btb.setValue(vb.x, vb.y, vb.z)\n          btc.setValue(vc.x, vc.y, vc.z)\n          triMesh.addTriangle(bta, btb, btc, false)\n        }\n      }\n    }\n\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\n    triMesh.setScaling(localScale)\n    Ammo.destroy(localScale)\n\n    // MOD (yandeu): Use btConvexTriangleMeshShape for concave shapes\n    let collisionShape\n    if (options.concave) collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\n    else collisionShape = new Ammo.btConvexTriangleMeshShape(triMesh, true)\n\n    // const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\n\n    collisionShape.resources = [triMesh]\n\n    Ammo.destroy(bta)\n    Ammo.destroy(btb)\n    Ammo.destroy(btc)\n\n    _finishCollisionShape(collisionShape, options)\n    return collisionShape\n  }\n})()\n\nexport const createHeightfieldTerrainShape = function (options = {}) {\n  _setOptions(options)\n\n  if (options.fit === FIT.ALL) {\n    console.warn('cannot use fit: all with type: heightfield')\n    return null\n  }\n  const heightfieldDistance = options.heightfieldDistance || 1\n  const heightfieldData = options.heightfieldData || []\n  const heightScale = options.heightScale || 0\n  const upAxis = options.hasOwnProperty('upAxis') ? options.upAxis : 1 // x = 0; y = 1; z = 2\n  const hdt = (() => {\n    switch (options.heightDataType) {\n      case 'short':\n        return Ammo.PHY_SHORT\n      case 'float':\n        return Ammo.PHY_FLOAT\n      default:\n        return Ammo.PHY_FLOAT\n    }\n  })()\n  const flipQuadEdges = options.hasOwnProperty('flipQuadEdges') ? options.flipQuadEdges : true\n\n  const heightStickLength = heightfieldData.length\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0\n\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4)\n  const ptr = data / 4\n\n  let minHeight = Number.POSITIVE_INFINITY\n  let maxHeight = Number.NEGATIVE_INFINITY\n  let index = 0\n  for (let l = 0; l < heightStickLength; l++) {\n    for (let w = 0; w < heightStickWidth; w++) {\n      const height = heightfieldData[l][w]\n      Ammo.HEAPF32[ptr + index] = height\n      index++\n      minHeight = Math.min(minHeight, height)\n      maxHeight = Math.max(maxHeight, height)\n    }\n  }\n\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\n    heightStickWidth,\n    heightStickLength,\n    data,\n    heightScale,\n    minHeight,\n    maxHeight,\n    upAxis,\n    hdt,\n    flipQuadEdges\n  )\n\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance)\n  collisionShape.setLocalScaling(scale)\n  Ammo.destroy(scale)\n\n  collisionShape.heightfieldData = data\n\n  _finishCollisionShape(collisionShape, options)\n  return collisionShape\n}\n\nfunction _setOptions(options) {\n  // MOD (yandeu): All of this will be done in physics.ts\n  // we only keep type and margin\n  options.type = options.type || TYPE.HULL\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\n  return\n\n  options.fit = options.hasOwnProperty('fit') ? options.fit : FIT.ALL\n  options.type = options.type || TYPE.HULL\n  options.minHalfExtent = options.hasOwnProperty('minHalfExtent') ? options.minHalfExtent : 0\n  options.maxHalfExtent = options.hasOwnProperty('maxHalfExtent') ? options.maxHalfExtent : Number.POSITIVE_INFINITY\n  options.cylinderAxis = options.cylinderAxis || 'y'\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\n  options.includeInvisible = options.hasOwnProperty('includeInvisible') ? options.includeInvisible : false\n\n  if (!options.offset) {\n    options.offset = new Vector3()\n  }\n\n  if (!options.orientation) {\n    options.orientation = new Quaternion()\n  }\n}\n\nconst _finishCollisionShape = function (collisionShape, options, scale) {\n  // MOD (yandeu): All of this will be done in physics.ts\n  return\n\n  collisionShape.type = options.type\n  collisionShape.setMargin(options.margin)\n  collisionShape.destroy = () => {\n    for (let res of collisionShape.resources || []) {\n      Ammo.destroy(res)\n    }\n    if (collisionShape.heightfieldData) {\n      Ammo._free(collisionShape.heightfieldData)\n    }\n    Ammo.destroy(collisionShape)\n  }\n\n  const localTransform = new Ammo.btTransform()\n  const rotation = new Ammo.btQuaternion()\n  localTransform.setIdentity()\n\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z)\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w)\n\n  localTransform.setRotation(rotation)\n  Ammo.destroy(rotation)\n\n  if (scale) {\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\n    collisionShape.setLocalScaling(localScale)\n    Ammo.destroy(localScale)\n  }\n\n  collisionShape.localTransform = localTransform\n}\n\nexport const iterateGeometries = (function () {\n  const inverse = new Matrix4()\n  return function (root, options, cb) {\n    // MOD (yandeu): Update to three.js r123\n    // compatibility fix for three.js >= r123 (Dezember 2020)\n    if (parseInt(REVISION) >= 123) inverse.copy(root.matrixWorld).invert()\n    else inverse.getInverse(root.matrixWorld)\n\n    const scale = new Vector3()\n    scale.setFromMatrixScale(root.matrixWorld)\n    root.traverse(mesh => {\n      const transform = new Matrix4()\n      if (\n        mesh.isMesh &&\n        // MOD (yandeu): No need to check if name is 'Sky'\n        // mesh.name !== 'Sky' &&\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\n      ) {\n        if (mesh === root) {\n          transform.identity()\n        } else {\n          mesh.updateWorldMatrix(true)\n          transform.multiplyMatrices(inverse, mesh.matrixWorld)\n        }\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\n        // things by the identity matrix\n        cb(\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\n          transform.elements,\n          mesh.geometry.index ? mesh.geometry.index.array : null\n        )\n      }\n    })\n  }\n})()\n\nconst _computeScale = (function () {\n  const matrix = new Matrix4()\n  return function (matrixWorld, options = {}) {\n    const scale = new Vector3(1, 1, 1)\n    if (options.fit === FIT.ALL) {\n      matrix.fromArray(matrixWorld)\n      scale.setFromMatrixScale(matrix)\n    }\n    return scale\n  }\n})()\n\nconst _computeRadius = (function () {\n  const center = new Vector3()\n  return function (vertices, matrices, bounds) {\n    let maxRadiusSq = 0\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center)\n\n    _iterateVertices(vertices, matrices, v => {\n      const dx = cx - v.x\n      const dy = cy - v.y\n      const dz = cz - v.z\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz)\n    })\n    return Math.sqrt(maxRadiusSq)\n  }\n})()\n\nconst _computeHalfExtents = function (bounds, minHalfExtent, maxHalfExtent) {\n  const halfExtents = new Vector3()\n  return halfExtents.subVectors(bounds.max, bounds.min).multiplyScalar(0.5).clampScalar(minHalfExtent, maxHalfExtent)\n}\n\nconst _computeLocalOffset = function (matrix, bounds, target) {\n  target.addVectors(bounds.max, bounds.min).multiplyScalar(0.5).applyMatrix4(matrix)\n  return target\n}\n\n// returns the bounding box for the geometries underneath `root`.\nconst _computeBounds = function (vertices, matrices) {\n  const bounds = new Box3()\n  let minX = +Infinity\n  let minY = +Infinity\n  let minZ = +Infinity\n  let maxX = -Infinity\n  let maxY = -Infinity\n  let maxZ = -Infinity\n  bounds.min.set(0, 0, 0)\n  bounds.max.set(0, 0, 0)\n\n  _iterateVertices(vertices, matrices, v => {\n    if (v.x < minX) minX = v.x\n    if (v.y < minY) minY = v.y\n    if (v.z < minZ) minZ = v.z\n    if (v.x > maxX) maxX = v.x\n    if (v.y > maxY) maxY = v.y\n    if (v.z > maxZ) maxZ = v.z\n  })\n\n  bounds.min.set(minX, minY, minZ)\n  bounds.max.set(maxX, maxY, maxZ)\n  return bounds\n}\n\nconst _iterateVertices = (function () {\n  const vertex = new Vector3()\n  const matrix = new Matrix4()\n  return function (vertices, matrices, cb) {\n    for (let i = 0; i < vertices.length; i++) {\n      matrix.fromArray(matrices[i])\n      for (let j = 0; j < vertices[i].length; j += 3) {\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix)\n        cb(vertex)\n      }\n    }\n  }\n})()\n","import { MeshLambertMaterial } from 'three';\nclass DefaultMaterial {\n    constructor() {\n        this._defaultMaterial = new MeshLambertMaterial({ color: 0xcccccc });\n    }\n    get() {\n        return this._defaultMaterial;\n    }\n}\nexport default DefaultMaterial;\n//# sourceMappingURL=defaultMaterial.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { BoxBufferGeometry, ConeBufferGeometry, CylinderBufferGeometry, DoubleSide, ExtrudeBufferGeometry, Line, LineBasicMaterial, MeshBasicMaterial, MeshLambertMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, PlaneBufferGeometry, Points, PointsMaterial, SphereBufferGeometry, MathUtils as THREE_Math, TorusBufferGeometry } from 'three';\nimport { ExtendedMesh } from './extendedMesh';\nimport logger from './logger';\nimport DefaultMaterial from './defaultMaterial';\nexport default class Factories {\n    constructor(scene) {\n        this.scene = scene;\n        this.isHeadless = scene === 'headless' ? true : false;\n        this.defaultMaterial = new DefaultMaterial();\n    }\n    get make() {\n        return {\n            plane: (planeConfig = {}, materialConfig = {}) => this.makePlane(planeConfig, materialConfig),\n            box: (boxConfig = {}, materialConfig = {}) => this.makeBox(boxConfig, materialConfig),\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.makeSphere(sphereConfig, materialConfig),\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.makeCylinder(cylinderConfig, materialConfig),\n            cone: (coneConfig = {}, materialConfig = {}) => this.makeCone(coneConfig, materialConfig),\n            torus: (torusConfig = {}, materialConfig = {}) => this.makeTorus(torusConfig, materialConfig),\n            extrude: (extrudeConfig, materialConfig = {}) => this.makeExtrude(extrudeConfig, materialConfig)\n        };\n    }\n    get add() {\n        return {\n            // effectComposer: () => this.addEffectComposer(),\n            mesh: (mesh) => this.addMesh(mesh),\n            // group: (...children) => this.addGroup(children),\n            existing: (object) => this.addExisting(object),\n            //  Geometry\n            plane: (planeConfig = {}, materialConfig = {}) => this.addPlane(planeConfig, materialConfig),\n            box: (boxConfig = {}, materialConfig = {}) => this.addBox(boxConfig, materialConfig),\n            ground: (groundConfig, materialConfig = {}) => this.addGround(groundConfig, materialConfig),\n            //...\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.addSphere(sphereConfig, materialConfig),\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.addCylinder(cylinderConfig, materialConfig),\n            cone: (coneConfig = {}, materialConfig = {}) => this.addCone(coneConfig, materialConfig),\n            torus: (torusConfig = {}, materialConfig = {}) => this.addTorus(torusConfig, materialConfig),\n            extrude: (extrudeConfig, materialConfig = {}) => this.addExtrude(extrudeConfig, materialConfig),\n            //...\n            material: (materialConfig = {}) => this.addMaterial(materialConfig)\n        };\n    }\n    addExisting(...object) {\n        if (this.scene === 'headless')\n            return;\n        this.scene.add(...object);\n    }\n    addMesh(mesh) {\n        if (Array.isArray(mesh)) {\n            for (let i = 0; i < mesh.length; i++) {\n                this.addExisting(mesh[i]);\n            }\n        }\n        else {\n            this.addExisting(mesh);\n        }\n        return this;\n    }\n    createMesh(geometry, material, position) {\n        const { x = 0, y = 0, z = 0 } = position;\n        let obj;\n        switch (!Array.isArray(material) && material.type) {\n            case 'LineBasicMaterial':\n                obj = new Line(geometry, material);\n                break;\n            case 'PointsMaterial':\n                obj = new Points(geometry, material);\n                break;\n            default:\n                obj = new ExtendedMesh(geometry, material);\n                break;\n        }\n        obj.position.set(x, y, z);\n        obj.castShadow = obj.receiveShadow = true;\n        return obj;\n    }\n    makeExtrude(extrudeConfig, materialConfig) {\n        const { x, y, z, name, shape, autoCenter = true, breakable = false } = extrudeConfig, rest = __rest(extrudeConfig\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\n        , [\"x\", \"y\", \"z\", \"name\", \"shape\", \"autoCenter\", \"breakable\"]);\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\n        const { depth = 1, bevelEnabled = false } = rest;\n        const geometry = new ExtrudeBufferGeometry(shape, Object.assign({ depth, bevelEnabled }, rest));\n        const material = this.addMaterial(materialConfig);\n        const mesh = this.createMesh(geometry, material, { x, y, z });\n        // auto adjust the center for custom shapes\n        if (autoCenter)\n            mesh.geometry.center();\n        mesh.name = name || `body_id_${mesh.id}`;\n        mesh.shape = 'extrude';\n        return mesh;\n    }\n    addExtrude(extrudeConfig, materialConfig = {}) {\n        const obj = this.makeExtrude(extrudeConfig, materialConfig);\n        this.addExisting(obj);\n        return obj;\n    }\n    makePlane(planeConfig, materialConfig) {\n        const { x, y, z, name, breakable = false } = planeConfig, rest = __rest(planeConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\n        const geometry = new PlaneBufferGeometry(rest.width || 1, rest.height || 1, rest.widthSegments || 1, rest.heightSegments || 1);\n        const material = this.addMaterial(materialConfig);\n        material.side = DoubleSide;\n        const mesh = this.createMesh(geometry, material, { x, y, z });\n        mesh.name = name || `body_id_${mesh.id}`;\n        mesh.shape = 'plane';\n        return mesh;\n    }\n    addPlane(planeConfig, materialConfig) {\n        const obj = this.makePlane(planeConfig, materialConfig);\n        this.addExisting(obj);\n        return obj;\n    }\n    makeSphere(sphereConfig, materialConfig) {\n        const { x, y, z, name, breakable = false } = sphereConfig, rest = __rest(sphereConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\n        const geometry = new SphereBufferGeometry(rest.radius || 1, rest.widthSegments || 16, rest.heightSegments || 12, rest.phiStart || undefined, rest.phiLength || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\n        const material = this.addMaterial(materialConfig);\n        const mesh = this.createMesh(geometry, material, { x, y, z });\n        mesh.name = name || `body_id_${mesh.id}`;\n        mesh.shape = 'sphere';\n        return mesh;\n    }\n    addSphere(sphereConfig = {}, materialConfig = {}) {\n        const obj = this.makeSphere(sphereConfig, materialConfig);\n        this.addExisting(obj);\n        return obj;\n    }\n    makeBox(boxConfig, materialConfig) {\n        const { x, y, z, name, breakable = false } = boxConfig, rest = __rest(boxConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\n        const geometry = new BoxBufferGeometry(rest.width || 1, rest.height || 1, rest.depth || 1, rest.widthSegments || undefined, rest.heightSegments || undefined, rest.depthSegments || undefined);\n        const material = this.addMaterial(materialConfig);\n        const mesh = this.createMesh(geometry, material, { x, y, z });\n        mesh.name = name || `body_id_${mesh.id}`;\n        mesh.shape = 'box';\n        return mesh;\n    }\n    addBox(boxConfig = {}, materialConfig = {}) {\n        const obj = this.makeBox(boxConfig, materialConfig);\n        this.addExisting(obj);\n        return obj;\n    }\n    addGround(groundConfig, materialConfig = {}) {\n        const obj = this.makeBox(groundConfig, materialConfig);\n        obj.rotateX(THREE_Math.degToRad(90));\n        this.addExisting(obj);\n        return obj;\n    }\n    makeCylinder(cylinderConfig = {}, materialConfig = {}) {\n        const { x, y, z, name, breakable = false } = cylinderConfig, rest = __rest(cylinderConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\n        const geometry = new CylinderBufferGeometry(rest.radiusTop || 1, rest.radiusBottom || 1, rest.height || 1, rest.radiusSegments || undefined, rest.heightSegments || undefined, rest.openEnded || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\n        const material = this.addMaterial(materialConfig);\n        const mesh = this.createMesh(geometry, material, { x, y, z });\n        mesh.name = name || `body_id_${mesh.id}`;\n        mesh.shape = 'cylinder';\n        return mesh;\n    }\n    addCylinder(cylinderConfig = {}, materialConfig = {}) {\n        const obj = this.makeCylinder(cylinderConfig, materialConfig);\n        this.addExisting(obj);\n        return obj;\n    }\n    makeCone(coneConfig = {}, materialConfig = {}) {\n        const { x, y, z, name, breakable = false } = coneConfig, rest = __rest(coneConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\n        const geometry = new ConeBufferGeometry(rest.radius || 1, rest.height || 1, rest.radiusSegments || 8, rest.heightSegments || 1, rest.openEnded || false, rest.thetaStart || 0, rest.thetaLength || 2 * Math.PI);\n        const material = this.addMaterial(materialConfig);\n        const mesh = this.createMesh(geometry, material, { x, y, z });\n        mesh.name = name || `body_id_${mesh.id}`;\n        mesh.shape = 'cone';\n        return mesh;\n    }\n    addCone(coneConfig = {}, materialConfig = {}) {\n        const obj = this.makeCone(coneConfig, materialConfig);\n        this.addExisting(obj);\n        return obj;\n    }\n    // https://threejs.org/docs/index.html#api/en/geometries/TorusBufferGeometry\n    makeTorus(torusConfig = {}, materialConfig = {}) {\n        const { x, y, z, name, breakable = false } = torusConfig, rest = __rest(torusConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\n        const geometry = new TorusBufferGeometry(rest.radius || undefined, rest.tube || undefined, rest.radialSegments || undefined, rest.tubularSegments || undefined, rest.arc || undefined);\n        const material = this.addMaterial(materialConfig);\n        const mesh = this.createMesh(geometry, material, { x, y, z });\n        mesh.name = name || `body_id_${mesh.id}`;\n        mesh.shape = 'torus';\n        return mesh;\n    }\n    addTorus(torusConfig = {}, materialConfig = {}) {\n        const obj = this.makeTorus(torusConfig, materialConfig);\n        this.addExisting(obj);\n        return obj;\n    }\n    addMaterial(materialConfig = {}) {\n        const type = Object.keys(materialConfig)[0];\n        let material;\n        // if (type) {\n        //   const { map } = materialConfig[type]\n        //   if (typeof map === 'string') materialConfig[type].map = this.loadTexture(map)\n        // }\n        // always share the same material in headless mode to save memory\n        if (this.scene === 'headless')\n            return this.defaultMaterial.get();\n        switch (type) {\n            case 'basic':\n                material = new MeshBasicMaterial(materialConfig.basic);\n                break;\n            case 'normal':\n                material = new MeshNormalMaterial(materialConfig.normal);\n                break;\n            case 'standard':\n                material = new MeshStandardMaterial(materialConfig.standard);\n                break;\n            case 'lambert':\n                material = new MeshLambertMaterial(materialConfig.lambert);\n                break;\n            case 'phong':\n                material = new MeshPhongMaterial(materialConfig.phong);\n                break;\n            case 'physical':\n                if (typeof materialConfig.physical !== 'undefined') {\n                    material = new MeshPhysicalMaterial(materialConfig.physical);\n                }\n                else {\n                    logger('You need to pass parameters to the physical material. (Fallback to default material)');\n                    material = this.defaultMaterial.get();\n                }\n                break;\n            case 'toon':\n                material = new MeshToonMaterial(materialConfig.toon);\n                break;\n            case 'line':\n                material = new LineBasicMaterial(materialConfig.line);\n                break;\n            case 'points':\n                material = new PointsMaterial(materialConfig.points);\n                break;\n            case 'custom':\n                material = materialConfig.custom || this.defaultMaterial.get();\n                break;\n            default:\n                material = this.defaultMaterial.get();\n                break;\n        }\n        return material;\n    }\n}\n//# sourceMappingURL=factories.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { Events } from '@yandeu/events'\nimport { CollisionEvent, ExtendedObject3D } from '@enable3d/common/dist/types'\nimport { Types } from './physics'\n\nexport class CollisionEvents extends Events {\n  public worldTransform: Ammo.btTransform\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\n\n  public addCollider(\n    object1: ExtendedObject3D,\n    object2: ExtendedObject3D,\n    eventCallback: (event: CollisionEvent) => void\n  ) {\n    if (!object1.body || !object2.body) return\n\n    object1.body.checkCollisions = true\n    object2.body.checkCollisions = true\n\n    this.on('collision', (data: { bodies: ExtendedObject3D[]; event: CollisionEvent }) => {\n      const { bodies, event } = data\n      if (bodies[0]?.name && bodies[1]?.name && object1?.name && object2?.name) {\n        if (bodies[0].name === object1.name && bodies[1].name === object2.name) eventCallback(event)\n        else if (bodies[1].name === object1.name && bodies[0].name === object2.name) eventCallback(event)\n      }\n    })\n  }\n}\n","/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * Copied from three.js examples and added a fix\n */\n\n/**\n * @author yomboprime https://github.com/yomboprime\n *\n * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.\n *\n * Usage:\n *\n * Use the function prepareBreakableObject to prepare a Mesh object to be broken.\n *\n * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)\n *\n * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.\n *\n * Requisites for the object:\n *\n *  - Mesh object must have a BufferGeometry (not Geometry) and a Material\n *\n *  - Vertex normals must be planar (not smoothed)\n *\n *  - The geometry must be convex (this is not checked in the library). You can create convex\n *  geometries with ConvexBufferGeometry. The BoxBufferGeometry, SphereBufferGeometry and other convex primitives\n *  can also be used.\n *\n * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)\n * Use with caution and read the code when using with other libs.\n *\n * @param {double} minSizeForBreak Min size a debris can have to break.\n * @param {double} smallDelta Max distance to consider that a point belongs to a plane.\n *\n */\n\nimport { Line3, Mesh, Plane, Vector3 } from 'three'\nimport { ConvexGeometry } from './externals'\nimport logger from '@enable3d/common/dist/logger'\n\nconst newConvexGeometry = (points: Vector3[]) => {\n  // @ts-ignore\n  const _newConvexGeometry = window.THREE && window.THREE.ConvexGeometry ? window.THREE.ConvexGeometry : ConvexGeometry\n  return new _newConvexGeometry(points)\n}\n\nconst ConvexObjectBreaker = function (minSizeForBreak?: number, smallDelta?: number) {\n  // @ts-ignore\n  this.minSizeForBreak = minSizeForBreak || 1.4\n  // @ts-ignore\n  this.smallDelta = smallDelta || 0.0001\n\n  // @ts-ignore\n  this.tempLine1 = new Line3()\n  // @ts-ignore\n  this.tempPlane1 = new Plane()\n  // @ts-ignore\n  this.tempPlane2 = new Plane()\n  // @ts-ignore\n  this.tempPlane_Cut = new Plane()\n  // @ts-ignore\n  this.tempCM1 = new Vector3()\n  // @ts-ignore\n  this.tempCM2 = new Vector3()\n  // @ts-ignore\n  this.tempVector3 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_2 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_3 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_P0 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_P1 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_P2 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_N0 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_N1 = new Vector3()\n  // @ts-ignore\n  this.tempVector3_AB = new Vector3()\n  // @ts-ignore\n  this.tempVector3_CB = new Vector3()\n  // @ts-ignore\n  this.tempResultObjects = { object1: null, object2: null }\n\n  // @ts-ignore\n  this.segments = []\n  var n = 30 * 30\n  // @ts-ignore\n  for (var i = 0; i < n; i++) this.segments[i] = false\n}\n\nConvexObjectBreaker.prototype = {\n  constructor: ConvexObjectBreaker,\n\n  prepareBreakableObject: function (object: any, mass: any, velocity: any, angularVelocity: any, breakable: any) {\n    // object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.\n    // Its material property is propagated to its children (sub-pieces)\n    // mass must be > 0\n\n    if (!object.geometry.isBufferGeometry) {\n      console.error('THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.')\n    }\n\n    object.userData.ammoPhysicsData = {} // initialise our new data container - would be best to move this to ExtendedObject and not rely on userData at all for best compatibility\n    var ammoPhysicsData = object.userData.ammoPhysicsData // get reference to it\n    ammoPhysicsData.mass = mass\n    ammoPhysicsData.velocity = velocity.clone()\n    ammoPhysicsData.angularVelocity = angularVelocity.clone()\n    ammoPhysicsData.breakable = breakable\n  },\n\n  /*\n   * @param {int} maxRadialIterations Iterations for radial cuts.\n   * @param {int} maxRandomIterations Max random iterations for not-radial cuts\n   *\n   * Returns the array of pieces\n   */\n  subdivideByImpact: function (\n    object: any,\n    pointOfImpact: any,\n    normal: any,\n    maxRadialIterations: any,\n    maxRandomIterations: any\n  ) {\n    var debris: any = []\n\n    var tempPlane1 = this.tempPlane1\n    var tempPlane2 = this.tempPlane2\n\n    this.tempVector3.addVectors(pointOfImpact, normal)\n    tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3)\n\n    var maxTotalIterations = maxRandomIterations + maxRadialIterations\n\n    var scope = this\n\n    function subdivideRadial(subObject: any, startAngle: any, endAngle: any, numIterations: any) {\n      if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\n        debris.push(subObject)\n\n        return\n      }\n\n      var angle = Math.PI\n\n      if (numIterations === 0) {\n        tempPlane2.normal.copy(tempPlane1.normal)\n        tempPlane2.constant = tempPlane1.constant\n      } else {\n        if (numIterations <= maxRadialIterations) {\n          angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle\n\n          // Rotate tempPlane2 at impact point around normal axis and the angle\n          scope.tempVector3_2.copy(object.position).sub(pointOfImpact).applyAxisAngle(normal, angle).add(pointOfImpact)\n          tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2)\n        } else {\n          angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI\n\n          // Rotate tempPlane2 at object position around normal axis and the angle\n          scope.tempVector3_2\n            .copy(pointOfImpact)\n            .sub(subObject.position)\n            .applyAxisAngle(normal, angle)\n            .add(subObject.position)\n          scope.tempVector3_3.copy(normal).add(subObject.position)\n          tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2)\n        }\n      }\n\n      // Perform the cut\n      scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects)\n\n      var obj1 = scope.tempResultObjects.object1\n      var obj2 = scope.tempResultObjects.object2\n\n      if (obj1) {\n        subdivideRadial(obj1, startAngle, angle, numIterations + 1)\n      }\n\n      if (obj2) {\n        subdivideRadial(obj2, angle, endAngle, numIterations + 1)\n      }\n    }\n\n    subdivideRadial(object, 0, 2 * Math.PI, 0)\n\n    return debris\n  },\n\n  cutByPlane: function (object: any, plane: any, output: any) {\n    // Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.\n    // object2 can be null if the plane doesn't cut the object.\n    // object1 can be null only in case of internal error\n    // Returned value is number of pieces, 0 for error.\n\n    var geometry = object.geometry\n    var coords = geometry.attributes.position.array\n    var normals = geometry.attributes.normal.array\n\n    var numPoints = coords.length / 3\n    var numFaces = numPoints / 3\n\n    var indices = geometry.getIndex()\n\n    if (indices) {\n      indices = indices.array\n      numFaces = indices.length / 3\n    }\n\n    function getVertexIndex(faceIdx: any, vert: any) {\n      // vert = 0, 1 or 2.\n\n      var idx = faceIdx * 3 + vert\n\n      return indices ? indices[idx] : idx\n    }\n\n    var points1 = []\n    var points2 = []\n\n    var delta = this.smallDelta\n\n    // Reset segments mark\n    var numPointPairs = numPoints * numPoints\n    for (var i = 0; i < numPointPairs; i++) this.segments[i] = false\n\n    var p0 = this.tempVector3_P0\n    var p1 = this.tempVector3_P1\n    var n0 = this.tempVector3_N0\n    var n1 = this.tempVector3_N1\n\n    // Iterate through the faces to mark edges shared by coplanar faces\n    for (var i = 0; i < numFaces - 1; i++) {\n      var a1 = getVertexIndex(i, 0)\n      var b1 = getVertexIndex(i, 1)\n      var c1 = getVertexIndex(i, 2)\n\n      // Assuming all 3 vertices have the same normal\n      n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2)\n\n      for (var j = i + 1; j < numFaces; j++) {\n        var a2 = getVertexIndex(j, 0)\n        var b2 = getVertexIndex(j, 1)\n        var c2 = getVertexIndex(j, 2)\n\n        // Assuming all 3 vertices have the same normal\n        n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2)\n\n        var coplanar = 1 - n0.dot(n1) < delta\n\n        if (coplanar) {\n          if (a1 === a2 || a1 === b2 || a1 === c2) {\n            if (b1 === a2 || b1 === b2 || b1 === c2) {\n              this.segments[a1 * numPoints + b1] = true\n              this.segments[b1 * numPoints + a1] = true\n            } else {\n              this.segments[c1 * numPoints + a1] = true\n              this.segments[a1 * numPoints + c1] = true\n            }\n          } else if (b1 === a2 || b1 === b2 || b1 === c2) {\n            this.segments[c1 * numPoints + b1] = true\n            this.segments[b1 * numPoints + c1] = true\n          }\n        }\n      }\n    }\n\n    // Transform the plane to object local space\n    var localPlane = this.tempPlane_Cut\n    object.updateMatrix()\n    ConvexObjectBreaker.transformPlaneToLocalSpace(plane, object.matrix, localPlane)\n\n    // Iterate through the faces adding points to both pieces\n    for (var i = 0; i < numFaces; i++) {\n      var va = getVertexIndex(i, 0)\n      var vb = getVertexIndex(i, 1)\n      var vc = getVertexIndex(i, 2)\n\n      for (var segment = 0; segment < 3; segment++) {\n        var i0 = segment === 0 ? va : segment === 1 ? vb : vc\n        var i1 = segment === 0 ? vb : segment === 1 ? vc : va\n\n        var segmentState = this.segments[i0 * numPoints + i1]\n\n        if (segmentState) continue // The segment already has been processed in another face\n\n        // Mark segment as processed (also inverted segment)\n        this.segments[i0 * numPoints + i1] = true\n        this.segments[i1 * numPoints + i0] = true\n\n        p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2])\n        p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2])\n\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\n        var mark0 = 0\n\n        var d = localPlane.distanceToPoint(p0)\n\n        if (d > delta) {\n          mark0 = 2\n          points2.push(p0.clone())\n        } else if (d < -delta) {\n          mark0 = 1\n          points1.push(p0.clone())\n        } else {\n          mark0 = 3\n          points1.push(p0.clone())\n          points2.push(p0.clone())\n        }\n\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\n        var mark1 = 0\n\n        var d = localPlane.distanceToPoint(p1)\n\n        if (d > delta) {\n          mark1 = 2\n          points2.push(p1.clone())\n        } else if (d < -delta) {\n          mark1 = 1\n          points1.push(p1.clone())\n        } else {\n          mark1 = 3\n          points1.push(p1.clone())\n          points2.push(p1.clone())\n        }\n\n        if ((mark0 === 1 && mark1 === 2) || (mark0 === 2 && mark1 === 1)) {\n          // Intersection of segment with the plane\n\n          this.tempLine1.start.copy(p0)\n          this.tempLine1.end.copy(p1)\n\n          var intersection = new Vector3()\n          intersection = localPlane.intersectLine(this.tempLine1, intersection)\n\n          if (intersection === undefined) {\n            // Shouldn't happen\n            console.error('Internal error: segment does not intersect plane.')\n            output.segmentedObject1 = null\n            output.segmentedObject2 = null\n            return 0\n          }\n\n          points1.push(intersection)\n          points2.push(intersection.clone())\n        }\n      }\n    }\n\n    // Calculate debris mass (very fast and imprecise):\n    var newMass = object.userData.ammoPhysicsData.mass * 0.5\n\n    // Calculate debris Center of Mass (again fast and imprecise)\n    this.tempCM1.set(0, 0, 0)\n    var radius1 = 0\n    var numPoints1 = points1.length\n\n    if (numPoints1 > 0) {\n      for (var i = 0; i < numPoints1; i++) this.tempCM1.add(points1[i])\n\n      this.tempCM1.divideScalar(numPoints1)\n      for (var i = 0; i < numPoints1; i++) {\n        var p = points1[i]\n        p.sub(this.tempCM1)\n        radius1 = Math.max(radius1, p.x, p.y, p.z)\n      }\n      this.tempCM1.add(object.position)\n    }\n\n    this.tempCM2.set(0, 0, 0)\n    var radius2 = 0\n    var numPoints2 = points2.length\n    if (numPoints2 > 0) {\n      for (var i = 0; i < numPoints2; i++) this.tempCM2.add(points2[i])\n\n      this.tempCM2.divideScalar(numPoints2)\n      for (var i = 0; i < numPoints2; i++) {\n        var p = points2[i]\n        p.sub(this.tempCM2)\n        radius2 = Math.max(radius2, p.x, p.y, p.z)\n      }\n      this.tempCM2.add(object.position)\n    }\n\n    var object1 = null\n    var object2 = null\n\n    var numObjects = 0\n\n    /**\n     * MOD: Wrapped in try catch block to avoid errors\n     */\n    if (numPoints1 > 4) {\n      try {\n        object1 = new Mesh(newConvexGeometry(points1), object.material)\n        object1.position.copy(this.tempCM1)\n        object1.quaternion.copy(object.quaternion)\n        object1.userData = object.userData\n\n        this.prepareBreakableObject(\n          object1,\n          newMass,\n          object.userData.ammoPhysicsData.velocity,\n          object.userData.ammoPhysicsData.angularVelocity,\n          2 * radius1 > this.minSizeForBreak\n        )\n\n        numObjects++\n      } catch (error) {\n        logger('Error in ConvexObjectBreaker.ts')\n        logger(error)\n      }\n    }\n\n    if (numPoints2 > 4) {\n      try {\n        object2 = new Mesh(newConvexGeometry(points2), object.material)\n        object2.position.copy(this.tempCM2)\n        object2.quaternion.copy(object.quaternion)\n        object2.userData = object.userData\n\n        this.prepareBreakableObject(\n          object2,\n          newMass,\n          object.userData.ammoPhysicsData.velocity,\n          object.userData.ammoPhysicsData.angularVelocity,\n          2 * radius2 > this.minSizeForBreak\n        )\n\n        numObjects++\n      } catch (error) {\n        logger('Error in ConvexObjectBreaker.ts')\n        logger(error)\n      }\n    }\n\n    output.object1 = object1\n    output.object2 = object2\n\n    return numObjects\n  }\n}\n\nConvexObjectBreaker.transformFreeVector = function (v: any, m: any) {\n  // input:\n  // vector interpreted as a free vector\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\n\n  var x = v.x,\n    y = v.y,\n    z = v.z\n  var e = m.elements\n\n  v.x = e[0] * x + e[4] * y + e[8] * z\n  v.y = e[1] * x + e[5] * y + e[9] * z\n  v.z = e[2] * x + e[6] * y + e[10] * z\n\n  return v\n}\n\nConvexObjectBreaker.transformFreeVectorInverse = function (v: any, m: any) {\n  // input:\n  // vector interpreted as a free vector\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\n\n  var x = v.x,\n    y = v.y,\n    z = v.z\n  var e = m.elements\n\n  v.x = e[0] * x + e[1] * y + e[2] * z\n  v.y = e[4] * x + e[5] * y + e[6] * z\n  v.z = e[8] * x + e[9] * y + e[10] * z\n\n  return v\n}\n\nConvexObjectBreaker.transformTiedVectorInverse = function (v: any, m: any) {\n  // input:\n  // vector interpreted as a tied (ordinary) vector\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\n\n  var x = v.x,\n    y = v.y,\n    z = v.z\n  var e = m.elements\n\n  v.x = e[0] * x + e[1] * y + e[2] * z - e[12]\n  v.y = e[4] * x + e[5] * y + e[6] * z - e[13]\n  v.z = e[8] * x + e[9] * y + e[10] * z - e[14]\n\n  return v\n}\n\nConvexObjectBreaker.transformPlaneToLocalSpace = (function () {\n  var v1 = new Vector3()\n\n  return function transformPlaneToLocalSpace(plane: any, m: any, resultPlane: any) {\n    resultPlane.normal.copy(plane.normal)\n    resultPlane.constant = plane.constant\n\n    var referencePoint = ConvexObjectBreaker.transformTiedVectorInverse(plane.coplanarPoint(v1), m)\n\n    ConvexObjectBreaker.transformFreeVectorInverse(resultPlane.normal, m)\n\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\n    resultPlane.constant = -referencePoint.dot(resultPlane.normal)\n  }\n})()\n\nexport { ConvexObjectBreaker }\n","// Inspired by https://github.com/playcanvas/engine/blob/master/examples/wasm-loader.js\nconst wasmSupported = (() => {\n    try {\n        if (typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function') {\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\n            if (module instanceof WebAssembly.Module)\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n        }\n    }\n    catch (e) {\n        console.error(e.message);\n    }\n    return false;\n})();\nconst loadScriptAsync = (url, doneCallback) => {\n    var tag = document.createElement('script');\n    tag.onload = () => {\n        doneCallback();\n    };\n    tag.onerror = () => {\n        throw new Error(`failed to load ${url}`);\n    };\n    tag.async = true;\n    tag.src = url;\n    document.head.appendChild(tag);\n};\nconst loadAmmoModule = (path, doneCallback) => {\n    // console.log(wasmSupported ? 'WebAssembly is supported' : 'WebAssembly is not supported')\n    if (wasmSupported)\n        loadScriptAsync(`${path}/ammo.wasm.js`, () => doneCallback());\n    else\n        loadScriptAsync(`${path}/ammo.js`, () => doneCallback());\n};\nexport default loadAmmoModule;\n//# sourceMappingURL=wasmLoader.js.map","import loadAmmoModule from './wasmLoader';\nconst PhysicsLoader = (path, callback) => {\n    if (typeof window !== 'undefined')\n        window.__loadPhysics = true;\n    loadAmmoModule(path, () => {\n        Ammo().then(() => {\n            callback();\n        });\n    });\n};\nexport { PhysicsLoader };\n//# sourceMappingURL=physicsLoader.js.map","// https://www.typescriptlang.org/docs/handbook/mixins.html\nconst applyMixins = (derivedCtor, baseCtors) => {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            // @ts-ignore\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n        });\n    });\n};\nexport default applyMixins;\n//# sourceMappingURL=applyMixins.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport applyMixins from '@enable3d/common/dist/applyMixins'\nimport ClosestRayResultCallback from './closestRayResultCallback'\nimport AllHitsRayResultCallback from './allHitsRayResultCallback'\nimport { AmmoPhysics } from '../physics'\n\nclass Raycaster {\n  public readonly type: string\n  protected _btRayFrom: Ammo.btVector3\n  protected _btRayTo: Ammo.btVector3\n  protected _btRayCallback: Ammo.RayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n\n  setRayFromWorld(x = 0, y = 0, z = 0) {\n    this._btRayFrom.setValue(x, y, z)\n  }\n\n  setRayToWorld(x = 0, y = 0, z = 0) {\n    this._btRayTo.setValue(x, y, z)\n  }\n\n  hasHit() {\n    return this._btRayCallback.hasHit()\n  }\n\n  rayTest() {\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\n\n    this._btRayCallback =\n      this.type === 'closest'\n        ? new Ammo.ClosestRayResultCallback(this._btRayFrom, this._btRayTo)\n        : new Ammo.AllHitsRayResultCallback(this._btRayFrom, this._btRayTo)\n\n    this.physics.physicsWorld.rayTest(this._btRayFrom, this._btRayTo, this._btRayCallback)\n  }\n\n  destroy() {\n    if (typeof this._btRayFrom !== 'undefined') Ammo.destroy(this._btRayFrom)\n    if (typeof this._btRayTo !== 'undefined') Ammo.destroy(this._btRayTo)\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\n  }\n}\n\ninterface ClosestRaycaster extends Raycaster, ClosestRayResultCallback {}\ninterface AllHitsRaycaster extends Raycaster, AllHitsRayResultCallback {}\n\nclass ClosestRaycaster implements Raycaster, ClosestRayResultCallback {\n  public readonly type = 'closest'\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n}\n\nclass AllHitsRaycaster implements Raycaster, AllHitsRayResultCallback {\n  public readonly type = 'allHits'\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n}\n\napplyMixins(ClosestRaycaster, [Raycaster, ClosestRayResultCallback])\napplyMixins(AllHitsRaycaster, [Raycaster, AllHitsRayResultCallback])\n\nexport { ClosestRaycaster, AllHitsRaycaster }\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { AmmoPhysics } from '../physics'\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\n\nexport default class ClosestRayResultCallback {\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n\n  getHitPointWorld(): { x: number; y: number; z: number } {\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3\n\n    const point = { x: h.x(), y: h.y(), z: h.z() }\n\n    return point\n  }\n\n  getHitNormalWorld() {\n    const h = this._btRayCallback.get_m_hitNormalWorld()\n\n    const normal = { x: h.x(), y: h.y(), z: h.z() }\n\n    return normal\n  }\n\n  getCollisionObject(): ExtendedObject3D {\n    // @ts-ignore\n    const rb = Ammo.castObject(this._btRayCallback.get_m_collisionObject(), Ammo.btRigidBody)\n    // @ts-ignore\n    return rb.threeObject\n  }\n}\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { AmmoPhysics } from '../physics'\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\n\nexport default class AllHitsRayResultCallback {\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n\n  getHitPointsWorld() {\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3Array\n\n    const points = []\n    for (let i = h.size() - 1; i >= 0; i--) {\n      const hh = h.at(i)\n      points.push({ x: hh.x(), y: hh.y(), z: hh.z() })\n    }\n\n    return points\n  }\n\n  // TODO: Remove this in future versions!\n  getHitPointWorld() {\n    console.warn('[enable3d] Use getHitPointsWorld() instead of getHitPointWorld() for the AllHitsRayCaster!')\n    return this.getHitPointsWorld()\n  }\n\n  getHitNormalsWorld() {\n    const h = this._btRayCallback.get_m_hitNormalWorld()\n\n    const normals = []\n    for (let i = h.size() - 1; i >= 0; i--) {\n      const hh = h.at(i)\n      normals.push({ x: hh.x(), y: hh.y(), z: hh.z() })\n    }\n\n    return normals\n  }\n\n  getCollisionObjects() {\n    const threeObjects: ExtendedObject3D[] = []\n    const objects = this._btRayCallback.get_m_collisionObjects()\n\n    for (let i = objects.size() - 1; i >= 0; i--) {\n      // @ts-ignore\n      const rb = Ammo.castObject(objects.at(i), Ammo.btRigidBody)\n      // @ts-ignore\n      threeObjects.push(rb.threeObject)\n    }\n    return threeObjects\n  }\n}\n","/**\n * @author yandeu\n * @description Ported to TypeScript\n */\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n/**\n * This is the Clock class THREE provides.\n */\nclass Clock {\n  autoStart: boolean\n  startTime: number\n  oldTime: number\n  elapsedTime: number\n  running: boolean\n\n  constructor(autoStart = true) {\n    this.autoStart = autoStart !== undefined ? autoStart : true\n    this.startTime = 0\n    this.oldTime = 0\n    this.elapsedTime = 0\n    this.running = false\n  }\n\n  start() {\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now() // see #10732\n\n    this.oldTime = this.startTime\n    this.elapsedTime = 0\n    this.running = true\n  }\n\n  stop() {\n    this.getElapsedTime()\n    this.running = false\n    this.autoStart = false\n  }\n\n  getElapsedTime() {\n    this.getDelta()\n    return this.elapsedTime\n  }\n\n  getDelta() {\n    let diff = 0\n\n    if (this.autoStart && !this.running) {\n      this.start()\n      return 0\n    }\n\n    if (this.running) {\n      const newTime = (typeof performance === 'undefined' ? Date : performance).now()\n\n      diff = (newTime - this.oldTime) / 1000\n      this.oldTime = newTime\n\n      this.elapsedTime += diff\n    }\n\n    return diff\n  }\n}\n\nexport { Clock }\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport logger from '@enable3d/common/dist/logger'\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\n\nimport { ExtendedObject3D } from '@enable3d/common/dist/extendedObject3D'\nexport { ExtendedObject3D }\n\nimport { ExtendedMesh } from '@enable3d/common/dist/extendedMesh'\nexport { ExtendedMesh }\n\nimport { ExtendedGroup } from '@enable3d/common/dist/extendedGroup'\nexport { ExtendedGroup }\n\nimport Shapes from './shapes'\nimport Constraints from './constraints'\nimport { Events } from '@yandeu/events'\nimport { Geometry } from './externals'\nimport { BufferGeometry, Euler, Matrix4, Quaternion, REVISION, Scene, Vector3 } from 'three'\nimport {\n  createHACDShapes,\n  createHullShape,\n  createTriMeshShape,\n  createVHACDShapes,\n  iterateGeometries\n} from './three-to-ammo'\nimport { createTorusShape } from './torusShape'\nimport Factories from '@enable3d/common/dist/factories'\nimport { CollisionEvents } from './collisionEvents'\n\nimport DebugDrawer from './debugDrawer'\nimport { ConvexObjectBreaker } from './convexObjectBreaker'\n\nimport { PhysicsLoader } from '@enable3d/common/dist/physicsLoader'\nimport DefaultMaterial from '@enable3d/common/dist/defaultMaterial'\nexport { PhysicsLoader }\n\nimport * as Types from '@enable3d/common/dist/types'\nimport { AllHitsRaycaster, ClosestRaycaster } from './raycaster/raycaster'\nexport { ClosestRaycaster, AllHitsRaycaster }\nexport { Types }\n\n// Export THREE.Clock\nexport { Clock } from './lib/Clock'\n\nclass AmmoPhysics extends Events {\n  public worldTransform: Ammo.btTransform\n  public factory: Factories\n  public isHeadless: boolean\n\n  public rigidBodies: ExtendedObject3D[] = []\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\n  protected gravity: { x: number; y: number; z: number }\n\n  protected tmpEuler: Euler\n  protected tmpQuaternion: Quaternion\n  protected tmpVector3: Vector3\n  protected tmpVector3a: Vector3\n  protected tmpMatrix4: Matrix4\n  protected tmpMatrix4a: Matrix4\n  protected tmpBtVector3: Ammo.btVector3\n  protected tmpBtQuaternion: Ammo.btQuaternion\n\n  public physicsWorld: Ammo.btSoftRigidDynamicsWorld\n  protected debugDrawer: DebugDrawer\n  private convexBreaker: any\n  protected addRigidBody: (threeObject: ExtendedObject3D, physicsShape: any, mass: any, pos: any, quat: any) => void\n  private objectsToRemove: any[]\n  private numObjectsToRemove: number\n\n  protected emptyV3: Vector3\n  protected impactPoint: Vector3\n  protected impactNormal: Vector3\n\n  protected defaultMaterial: DefaultMaterial\n\n  private shapes: Shapes\n  private constraints: Constraints\n  public collisionEvents: CollisionEvents\n\n  private readonly complexShapes = ['plane', 'hull', 'hacd', 'vhacd', 'convexMesh', 'concaveMesh']\n\n  constructor(public scene: Scene | 'headless', public config: Types.ThreeGraphicsConfig = {}) {\n    super()\n\n    this.gravity = config.gravity || { x: 0, y: -9.81, z: 0 }\n    this.isHeadless = scene === 'headless' ? true : false\n\n    this.tmpEuler = new Euler()\n    this.tmpQuaternion = new Quaternion()\n    this.tmpVector3 = new Vector3()\n    this.tmpVector3a = new Vector3()\n    this.tmpMatrix4 = new Matrix4()\n    this.tmpMatrix4a = new Matrix4()\n    this.tmpBtVector3 = new Ammo.btVector3()\n    this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1)\n    this.emptyV3 = new Vector3()\n    this.impactPoint = new Vector3()\n    this.impactNormal = new Vector3()\n\n    if (scene !== 'headless') {\n      this.defaultMaterial = new DefaultMaterial()\n\n      // const info = `Ammo.js physics provided by enable3d`\n      // console.log(\n      //   `%c %c %c %c %c ${info} %c https://enable3d.io/`,\n      //   'background: #ff0000',\n      //   'background: #ffff00',\n      //   'background: #00ff00',\n      //   'background: #00ffff',\n      //   'color: #fff; background: #000000;',\n      //   'background: none'\n      // )\n    }\n\n    this.start()\n  }\n\n  /** @deprecated Use worldTransform instead of tmpTrans. */\n  get tmpTrans() {\n    console.warn('Use worldTransform instead of tmpTrans.')\n    return this.worldTransform\n  }\n\n  /** @deprecated Use worldTransform instead of tmpTrans. */\n  set tmpTrans(transform: Ammo.btTransform) {\n    console.warn('Use worldTransform instead of tmpTrans.')\n    this.worldTransform = transform\n  }\n\n  /** Destroys a physics body. */\n  public destroy(body: PhysicsBody | ExtendedObject3D | ExtendedMesh) {\n    // @ts-ignore\n    const b: PhysicsBody = Object.keys(body).includes('body') ? body.body : body\n\n    if (typeof b?.ammo === 'undefined') return\n\n    // @ts-ignore\n    const name = b.ammo.name\n    // @ts-ignore\n    let obj: ExtendedObject3D | null = b.ammo.threeObject as ExtendedObject3D\n\n    if (name && obj) {\n      if (obj?.body?.ammo) {\n        // remove from physics world\n        !obj.body.isSoftBody\n          ? this.physicsWorld.removeRigidBody(obj.body.ammo)\n          : this.physicsWorld.removeSoftBody(obj.body.ammo as any)\n\n        // call destructor on body\n        obj.body.destructor()\n\n        // reset properties\n        // @ts-ignore\n        obj.body = undefined\n        obj.hasBody = false\n\n        // remove from this.objectAmmo\n        // @ts-ignore\n        delete b.ammo.threeObject\n        // remove from this.rigidBodies\n        for (let i = 0; i < this.rigidBodies.length; i++) {\n          if (this.rigidBodies[i].name === name) {\n            this.rigidBodies.splice(i, 1)\n            i--\n          }\n        }\n      }\n    }\n\n    if (this.scene === 'headless' && obj) obj = null\n  }\n\n  protected setup() {\n    // add worldTransform\n    this.worldTransform = new Ammo.btTransform()\n\n    // setup ammo physics\n    if (typeof this.config.setupPhysicsWorld === 'function') this.physicsWorld = this.config.setupPhysicsWorld() as any\n    else this.physicsWorld = this.setupPhysicsWorld()\n\n    if (this.scene !== 'headless') {\n      // Initialize convexBreaker\n      // @ts-ignore\n      this.convexBreaker = new ConvexObjectBreaker()\n\n      this.objectsToRemove = []\n      this.numObjectsToRemove = 0\n      for (let i = 0; i < 500; i++) {\n        this.objectsToRemove[i] = null\n      }\n    }\n\n    this.collisionEvents = new CollisionEvents()\n    this.factory = new Factories(this.scene)\n    this.shapes = new Shapes(this.factory, (object: ExtendedObject3D, config?: Types.AddExistingConfig) =>\n      this.addExisting(object, config)\n    )\n    this.constraints = new Constraints(this.worldTransform, this.physicsWorld)\n\n    if (this.scene !== 'headless') this.debugDrawer = new DebugDrawer(this.scene, this.physicsWorld, {})\n  }\n\n  public updateDebugger() {\n    if (this.scene === 'headless') return\n\n    if (this.debugDrawer && this.debugDrawer.enabled) this.debugDrawer.update()\n  }\n\n  protected setupPhysicsWorld() {\n    const g = this.gravity\n    const { softBodies = false } = this.config\n\n    let physicsWorld: any\n\n    if (!softBodies) {\n      const collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n        broadphase = new Ammo.btDbvtBroadphase(),\n        solver = new Ammo.btSequentialImpulseConstraintSolver()\n      physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration)\n    }\n\n    if (softBodies) {\n      const collisionConfiguration = new Ammo.btSoftBodyRigidBodyCollisionConfiguration(),\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n        broadphase = new Ammo.btDbvtBroadphase(),\n        solver = new Ammo.btSequentialImpulseConstraintSolver(),\n        softBodySolver = new Ammo.btDefaultSoftBodySolver()\n      physicsWorld = new Ammo.btSoftRigidDynamicsWorld(\n        dispatcher,\n        broadphase,\n        solver,\n        collisionConfiguration,\n        softBodySolver\n      )\n    }\n\n    physicsWorld.setGravity(new Ammo.btVector3(g.x, g.y, g.z))\n    return physicsWorld\n  }\n\n  private createDebrisFromBreakableObject(object: ExtendedObject3D, parent: ExtendedObject3D) {\n    if (this.scene === 'headless') return\n\n    object.material = parent.material\n    object.shape = 'hull'\n    object.fragmentDepth = parent.fragmentDepth + 1\n\n    // Add the object to the scene\n    this.scene.add(object)\n\n    // Add physics to the object\n    // @ts-ignore\n    this.addExisting(object)\n\n    object.body.fractureImpulse = parent.body.fractureImpulse\n    object.body.breakable = false\n    // make this fragment breakable in 2.5seconds\n    setTimeout(() => {\n      object.body.breakable = true\n    }, 2500)\n  }\n\n  private removeDebris(object: any) {\n    if (this.scene === 'headless') return\n\n    this.scene.remove(object)\n    this.destroy(object)\n  }\n\n  public update(delta: number) {\n    this.updatePhysics(delta)\n    this.detectCollisions()\n  }\n\n  private updatePhysics(delta: number) {\n    // step world\n    const deltaTime = delta / 1000\n\n    // must always satisfy the equation timeStep < maxSubSteps * fixedTimeStep\n    this.physicsWorld.stepSimulation(deltaTime, this.config.maxSubSteps || 4, this.config.fixedTimeStep || 1 / 60)\n\n    // update rigid bodies\n    for (let i = 0; i < this.rigidBodies.length; i++) {\n      const objThree = this.rigidBodies[i]\n      const objPhys = objThree.body.ammo\n      const ms = objPhys.getMotionState()\n\n      if (ms) {\n        ms.getWorldTransform(this.worldTransform)\n\n        // check if object did an update since last call\n        if (objThree.body.didUpdate) {\n          // @ts-ignore\n          if (objThree.body._emitUpdateEvents) objThree.body.eventEmitter.emit('update')\n          objThree.body.didUpdate = false\n        }\n\n        // update positions\n        if (objThree.body.ammo.isKinematicObject() && objThree.body.needUpdate) {\n          // get position and rotation\n          objThree.getWorldQuaternion(this.tmpQuaternion)\n          objThree.getWorldPosition(this.tmpVector3)\n          // adjust tmp variables\n          this.tmpBtVector3.setValue(this.tmpVector3.x, this.tmpVector3.y, this.tmpVector3.z)\n          this.tmpBtQuaternion.setValue(\n            this.tmpQuaternion.x,\n            this.tmpQuaternion.y,\n            this.tmpQuaternion.z,\n            this.tmpQuaternion.w\n          )\n          // set position and rotation\n          this.worldTransform.setOrigin(this.tmpBtVector3)\n          this.worldTransform.setRotation(this.tmpBtQuaternion)\n          // set transform\n          ms.setWorldTransform(this.worldTransform)\n          // reset needsUpdate\n          objThree.body.needUpdate = false\n        } else if (objThree.body.skipUpdate) {\n          // do nothing ...\n        } else if (!objThree.body.ammo.isStaticObject()) {\n          // get position and rotation\n          const p = this.worldTransform.getOrigin()\n          const q = this.worldTransform.getRotation()\n          // body offset\n          const o = objThree.body.offset\n          // set position and rotation\n          if (objThree.body.ignoreScale) {\n            this.tmpVector3a.set(objThree.scale.x, objThree.scale.y, objThree.scale.z)\n          } else {\n            const scale = objThree.body.ammo.getCollisionShape().getLocalScaling()\n            this.tmpVector3a.set(scale.x(), scale.y(), scale.z())\n          }\n          this.tmpVector3.set(p.x() + o.x, p.y() + o.y, p.z() + o.z)\n          this.tmpQuaternion.set(q.x(), q.y(), q.z(), q.w())\n          this.tmpMatrix4.compose(this.tmpVector3, this.tmpQuaternion, this.tmpVector3a)\n          if (objThree.parent) {\n            // compatibility fix for three.js >= r123 (Dezember 2020)\n            // @ts-ignore\n            if (parseInt(REVISION) >= 123) this.tmpMatrix4a.copy(objThree.parent.matrixWorld).invert()\n            else this.tmpMatrix4a.getInverse(objThree.parent.matrixWorld)\n          } else {\n            this.tmpMatrix4a.identity()\n          }\n          this.tmpMatrix4a.multiply(this.tmpMatrix4)\n          this.tmpMatrix4a.decompose(objThree.position, objThree.quaternion, objThree.scale)\n        }\n      }\n    }\n  }\n\n  private detectCollisions() {\n    const detectedCollisions: { combinedName: string; collision: boolean }[] = []\n\n    // reset these vectors\n    this.impactPoint.set(0, 0, 0)\n    this.impactNormal.set(0, 0, 0)\n\n    const dispatcher = this.physicsWorld.getDispatcher()\n    const numManifolds = dispatcher.getNumManifolds()\n\n    // check collisions\n    for (let i = 0; i < numManifolds; i++) {\n      const contactManifold = dispatcher.getManifoldByIndexInternal(i)\n      const numContacts = contactManifold.getNumContacts()\n\n      // @ts-ignore\n      const rb0 = Ammo.castObject(contactManifold.getBody0(), Ammo.btRigidBody)\n      // @ts-ignore\n      const rb1 = Ammo.castObject(contactManifold.getBody1(), Ammo.btRigidBody)\n\n      const threeObject0 = rb0.threeObject as ExtendedObject3D\n      const threeObject1 = rb1.threeObject as ExtendedObject3D\n\n      if (!threeObject0 || !threeObject1) {\n        continue\n      }\n\n      // do not check collision between 2 unnamed objects\n      // (fragments do not have a name, for example)\n      if (rb0.name === '' && rb1.name === '') continue\n\n      /**\n       * Get some information\n       */\n\n      const checkCollisions0 = threeObject0.body?.checkCollisions\n      const checkCollisions1 = threeObject1.body?.checkCollisions\n\n      const breakable0 = threeObject0.body.breakable\n      const breakable1 = threeObject1.body.breakable\n\n      const fractureImpulse0 = threeObject0.body.fractureImpulse\n      const fractureImpulse1 = threeObject1.body.fractureImpulse\n\n      const checkCollisions = checkCollisions0 || checkCollisions1\n      const checkBreakable = breakable0 || breakable1\n\n      if (!checkCollisions && !checkBreakable) continue\n\n      let contact = false\n      let maxImpulse = 0\n\n      let event: Types.CollisionEvent = 'start'\n\n      for (let j = 0; j < numContacts; j++) {\n        const contactPoint = contactManifold.getContactPoint(j)\n        const distance = contactPoint.getDistance()\n\n        // Distance definition: when the distance between objects is positive, they are separated. When the distance is negative, they are penetrating. Zero distance means exactly touching.\n        // https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5831\n        if (distance <= 0) {\n          contact = true\n          const impulse = contactPoint.getAppliedImpulse()\n          const impactPoint = contactPoint.get_m_positionWorldOnB()\n          const impactNormal = contactPoint.get_m_normalWorldOnB()\n\n          // handle collision events\n          if (checkCollisions0 || checkCollisions1) {\n            const names = [threeObject0.name, threeObject1.name].sort()\n            const combinedName = `${names[0]}__${names[1]}`\n\n            if (this.earlierDetectedCollisions.find(el => el.combinedName === combinedName)) event = 'collision'\n\n            if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\n              detectedCollisions.push({ combinedName, collision: true })\n              this.collisionEvents.emit('collision', { bodies: [threeObject0, threeObject1], event })\n            }\n          }\n\n          // get impactPoint and impactNormal of the hight impulse point (for breakable objects)\n          if (impulse >= maxImpulse) {\n            maxImpulse = impulse\n            // get what ween need for the convex breaking\n            if (breakable0 || breakable1) {\n              this.impactPoint.set(impactPoint.x(), impactPoint.y(), impactPoint.z())\n              this.impactNormal.set(impactNormal.x(), impactNormal.y(), impactNormal.z())\n            }\n          }\n\n          break\n        }\n      }\n\n      // if no point has contact, abort\n      if (!contact) continue\n\n      // if no objects are breakable, abort\n      if (!checkBreakable) continue\n\n      /**\n       * check for breakable objects (subdivision)\n       */\n      const MAX_FRAGMENT_DEPTH = 2\n\n      // since the library convexBreaker makes use of three's userData.ammoPhysicsData\n      // we have to clone the necessary params to threeObjectX.userData.ammoPhysicsData\n      // TODO improve this\n\n      this.emptyV3.set(0, 0, 0)\n      threeObject0.userData.ammoPhysicsData = {\n        mass: 1,\n        velocity: this.emptyV3,\n        angularVelocity: this.emptyV3,\n        breakable: breakable0,\n        physicsBody: rb0\n      }\n      threeObject1.userData.ammoPhysicsData = {\n        mass: 1,\n        velocity: this.emptyV3,\n        angularVelocity: this.emptyV3,\n        breakable: breakable1,\n        physicsBody: rb1\n      }\n\n      // threeObject0\n      if (breakable0 && maxImpulse > fractureImpulse0 && threeObject0.fragmentDepth < MAX_FRAGMENT_DEPTH) {\n        const debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\n\n        const numObjects = debris.length\n        for (let j = 0; j < numObjects; j++) {\n          const vel = rb0.getLinearVelocity()\n          const angVel = rb0.getAngularVelocity()\n          const fragment = debris[j] as ExtendedObject3D\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\n\n          this.createDebrisFromBreakableObject(fragment, threeObject0)\n        }\n\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject0\n      }\n\n      // threeObject1\n      if (breakable1 && maxImpulse > fractureImpulse1 && threeObject1.fragmentDepth < MAX_FRAGMENT_DEPTH) {\n        const debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\n\n        const numObjects = debris.length\n        for (let j = 0; j < numObjects; j++) {\n          const vel = rb1.getLinearVelocity()\n          const angVel = rb1.getAngularVelocity()\n          const fragment = debris[j] as ExtendedObject3D\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\n\n          this.createDebrisFromBreakableObject(fragment, threeObject1)\n        }\n\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject1\n      }\n    }\n\n    // remove objects\n    for (let i = 0; i < this.numObjectsToRemove; i++) {\n      this.removeDebris(this.objectsToRemove[i])\n    }\n    this.numObjectsToRemove = 0\n\n    // handle collision end events\n    this.earlierDetectedCollisions.forEach(el => {\n      const { combinedName } = el\n      if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\n        const split = combinedName.split('__')\n        const obj0 = this.rigidBodies.find(obj => obj.name === split[0])\n        const obj1 = this.rigidBodies.find(obj => obj.name === split[1])\n        const event = 'end'\n        if (obj0 && obj1) this.collisionEvents.emit('collision', { bodies: [obj0, obj1], event })\n      }\n    })\n    this.earlierDetectedCollisions = [...detectedCollisions]\n  }\n\n  public setGravity(x = 0, y = -9.8, z = 0) {\n    this.tmpBtVector3.setValue(x, y, z)\n    this.physicsWorld.setGravity(this.tmpBtVector3)\n  }\n\n  public get debug() {\n    if (this.isHeadless) return null\n\n    return {\n      enable: () => {\n        this.debugDrawer.enable()\n      },\n      mode: (debugMode: number = 1) => {\n        this.debugDrawer.setDebugMode(debugMode)\n      },\n      disable: () => {\n        this.debugDrawer.disable()\n      }\n    }\n  }\n\n  private start() {\n    if (typeof Ammo === 'undefined') {\n      logger('Are you sure you included ammo.js?')\n      return\n    }\n\n    if (typeof Ammo === 'function')\n      Ammo().then(() => {\n        this.setup()\n      })\n    else this.setup()\n  }\n\n  public get add() {\n    return {\n      collider: (\n        object1: ExtendedObject3D,\n        object2: ExtendedObject3D,\n        eventCallback: (event: Types.CollisionEvent) => void\n      ) => this.collisionEvents.addCollider(object1, object2, eventCallback),\n      constraints: this.constraints.addConstraints,\n      existing: (object: ExtendedObject3D, config?: Types.AddExistingConfig) => this.addExisting(object, config),\n      plane: (planeConfig: Types.PlaneConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addPlane(planeConfig, materialConfig),\n      sphere: (sphereConfig: Types.SphereConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addSphere(sphereConfig, materialConfig),\n      ground: (groundConfig: Types.GroundConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addGround(groundConfig, materialConfig),\n      box: (boxConfig: Types.BoxConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addBox(boxConfig, materialConfig),\n      cylinder: (cylinderConfig: Types.CylinderConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addCylinder(cylinderConfig, materialConfig),\n      cone: (coneConfig: Types.ConeConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addCone(coneConfig, materialConfig),\n      torus: (torusConfig: Types.TorusConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addTorus(torusConfig, materialConfig),\n      extrude: (extrudeConfig: Types.ExtrudeConfig, materialConfig: Types.MaterialConfig = {}) =>\n        this.shapes.addExtrude(extrudeConfig, materialConfig),\n      /**\n       * Creates a new Raycaster\n       * @param type Returns only the closes body by default. Can be 'closest' or 'allHits'.\n       */\n      raycaster: (type = 'closest') => {\n        if (type === 'closest') return new ClosestRaycaster(this) as ClosestRaycaster\n        else return new AllHitsRaycaster(this) as AllHitsRaycaster\n      }\n    }\n  }\n\n  private prepareThreeObjectForCollisionShape(object: ExtendedObject3D, config: Types.AddExistingConfig = {}) {\n    const { autoCenter = false } = config\n\n    // set default params\n    const defaultParams = {\n      width: 1,\n      height: 1,\n      depth: 1,\n      radius: 1,\n      radiusTop: 1, // for the cylinder\n      radiusBottom: 1, // for the cylinder\n      tube: 0.4, // for the torus\n      tubularSegments: 6 // for the torus\n    }\n\n    // determine the shape (fallback to hacd)\n    let shape: string = 'unknown'\n    // retrieve the shape from the geometry\n    const type = object.geometry?.type || 'unknown'\n    if (/box/i.test(type)) shape = 'box'\n    else if (/cone/i.test(type)) shape = 'cone'\n    else if (/cylinder/i.test(type)) shape = 'cylinder'\n    else if (/extrude/i.test(type)) shape = 'extrude'\n    else if (/plane/i.test(type)) shape = 'plane'\n    else if (/sphere/i.test(type)) shape = 'sphere'\n    else if (/torus/i.test(type)) shape = 'torus'\n\n    // @ts-ignore\n    let params = { ...defaultParams, ...object?.geometry?.parameters }\n\n    if (config.shape) {\n      params = { ...defaultParams, ...config }\n      shape = config.shape\n    } else if (object.shape) {\n      shape = object.shape\n    }\n\n    // Add all default params if undefined\n    Object.keys(params).forEach(key => {\n      // @ts-ignore\n      if (typeof params[key] === 'undefined' && defaultParams[key]) {\n        // @ts-ignore\n        params[key] = defaultParams[key]\n      }\n    })\n\n    // auto adjust the center for custom shapes\n    if (autoCenter) object.geometry.center()\n\n    // adjust the cylinder radius for its physcis body\n    if (shape === 'cylinder') params.radius = config.radius || params.radiusTop\n\n    // some aliases\n    if (shape === 'extrude') shape = 'hacd'\n    if (shape === 'mesh' || shape === 'convex') shape = 'convexMesh'\n    if (shape === 'concave') shape = 'concaveMesh'\n\n    // if we have not found a shape until here, we fallback to 'box'\n    if (shape === 'unknown') {\n      logger(`Shape for ${object?.name} not recognized! Will fallback to box.`)\n      shape = 'box'\n    }\n\n    return { shape, params, object }\n  }\n\n  public createCollisionShape(shape: string, params: any, object?: ExtendedObject3D): Ammo.btCollisionShape {\n    const quat = object?.quaternion ? object?.quaternion : new Quaternion(0, 0, 0, 1)\n    const { axis = 'y' } = params\n\n    const btHalfExtents = new Ammo.btVector3()\n\n    // transform geometry to bufferGeometry (because three-to-ammo works only with bufferGeometry)\n    // @ts-ignore\n    const geometry = object?.geometry as Geometry\n    if (object && geometry?.isGeometry) {\n      // @ts-ignore\n      object.geometry = new BufferGeometry().fromGeometry(geometry)\n    }\n\n    // prepare data to pass to three-to-ammo.js\n    const extractData = (object: any) => {\n      const matrixWorld = new Matrix4().elements\n      const vertices: any[] = []\n      const matrices: any[] = []\n      const indexes: any[] = []\n      iterateGeometries(object, {}, (vertexArray: any, matrixArray: any, indexArray: any) => {\n        vertices.push(vertexArray)\n        matrices.push(matrixArray)\n        indexes.push(indexArray)\n      })\n\n      return { vertices, matrices, indexes, matrixWorld }\n    }\n\n    let d = {} as any\n    // extract data for complex shapes generated with three-to-ammo.js\n    if (this.complexShapes.indexOf(shape) !== -1) d = extractData(object)\n\n    let collisionShape\n    switch (shape) {\n      case 'box':\n        btHalfExtents.setValue(params.width / 2, params.height / 2, params.depth / 2)\n        collisionShape = new Ammo.btBoxShape(btHalfExtents)\n        break\n      case 'sphere':\n        collisionShape = new Ammo.btSphereShape(params.radius)\n        break\n      case 'cylinder':\n        switch (axis) {\n          case 'y':\n            btHalfExtents.setValue(params.radius, params.height / 2, params.radius)\n            collisionShape = new Ammo.btCylinderShape(btHalfExtents)\n            break\n          case 'x':\n            btHalfExtents.setValue(params.height / 2, params.radius, params.radius)\n            collisionShape = new Ammo.btCylinderShapeX(btHalfExtents)\n            break\n          case 'z':\n            btHalfExtents.setValue(params.radius, params.radius, params.height / 2)\n            collisionShape = new Ammo.btCylinderShapeZ(btHalfExtents)\n            break\n        }\n        break\n      case 'cone':\n        switch (axis) {\n          case 'y':\n            collisionShape = new Ammo.btConeShape(params.radius, params.height)\n            break\n          case 'x':\n            collisionShape = new Ammo.btConeShapeX(params.radius, params.height)\n            break\n          case 'z':\n            collisionShape = new Ammo.btConeShapeZ(params.radius, params.height)\n            break\n        }\n        break\n      case 'capsule':\n        switch (axis) {\n          case 'y':\n            collisionShape = new Ammo.btCapsuleShape(params.radius, params.height)\n            break\n          case 'x':\n            collisionShape = new Ammo.btCapsuleShapeX(params.radius, params.height)\n            break\n          case 'z':\n            collisionShape = new Ammo.btCapsuleShapeZ(params.radius, params.height)\n            break\n        }\n        break\n      case 'torus':\n        collisionShape = createTorusShape(params, quat)\n        break\n      case 'plane':\n        // uses a triMeshShape for the plane\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\n          ...params,\n          concave: false\n        })\n        break\n      case 'hull':\n        collisionShape = createHullShape(d.vertices, d.matrices, d.matrixWorld, params)\n        break\n      case 'hacd':\n        collisionShape = createHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\n        break\n      case 'vhacd':\n        collisionShape = createVHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\n        break\n      case 'convexMesh':\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\n          ...params,\n          concave: false\n        })\n        break\n      case 'concaveMesh':\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\n          ...params,\n          concave: true\n        })\n        break\n    }\n\n    Ammo.destroy(btHalfExtents)\n\n    // if there is a x, y or z, take is as temporary offset parameter\n    const { x, y, z } = params\n    if (x || y || z) {\n      // @ts-ignore\n      collisionShape.offset = { x: x || 0, y: y || 0, z: z || 0 }\n    }\n\n    // in some cases, like hacd, it will be an array of shapes\n    // so we merge them\n    if (Array.isArray(collisionShape)) collisionShape = this.mergeCollisionShapesToCompoundShape(collisionShape)\n\n    return collisionShape as Ammo.btCollisionShape\n  }\n\n  public mergeCollisionShapesToCompoundShape(collisionShapes: Ammo.btCollisionShape[]): Ammo.btCompoundShape {\n    const compoundShape = new Ammo.btCompoundShape()\n    collisionShapes.forEach(shape => {\n      // @ts-ignore // _tmp is a custom parameter\n      const _tmp = shape._tmp\n\n      if (_tmp) {\n        const { pos, quat, scale, margin } = _tmp\n        const transform = this.applyPosQuatScaleMargin(shape, pos, quat, scale, margin)\n        compoundShape.addChildShape(transform, shape)\n      } else {\n        const transform = new Ammo.btTransform()\n        transform.setIdentity()\n        compoundShape.addChildShape(transform, shape)\n      }\n    })\n    return compoundShape\n  }\n\n  protected addExisting(object: ExtendedObject3D, config: Types.AddExistingConfig = {}): any {\n    const { hasBody } = object\n    if (hasBody) {\n      console.warn(`[Enable3d]: Object \"${object.name}\" already has a physical body!`)\n      return\n    }\n\n    const pos = new Vector3()\n    const quat = new Quaternion()\n    const scale = new Vector3()\n    object.getWorldPosition(pos)\n    object.getWorldQuaternion(quat)\n    object.getWorldScale(scale)\n\n    const isStaticObject = (config.collisionFlags || 0).toString(2).slice(-1) === '1'\n    const isKinematicObject = (config.collisionFlags || 0).toString(2).slice(-2, -1) === '1'\n\n    const {\n      shape = 'unknown',\n      compound = [],\n      mass = isStaticObject || isKinematicObject ? 0 : 1, // set default mass of 0 for static objects, and 1 for all other objects\n      collisionFlags = 0,\n      collisionGroup = 1,\n      collisionMask = -1,\n      offset = undefined,\n      breakable = false,\n      addChildren = true,\n      margin = 0.01,\n      ignoreScale = false,\n      fractureImpulse = 1\n    } = config\n\n    if (ignoreScale) scale.set(1, 1, 1)\n\n    if (compound.length >= 1) {\n      // if we want a custom compound shape, we simply do\n      const collisionShapes = compound.map((s: any) => this.createCollisionShape(s.shape, s))\n      const compoundShape = this.mergeCollisionShapesToCompoundShape(collisionShapes)\n      const localTransform = this.applyPosQuatScaleMargin(compoundShape, pos, quat, scale, margin)\n      const rigidBody = this.collisionShapeToRigidBody(compoundShape, localTransform, mass, isKinematicObject)\n      this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\n      object.body.breakable = breakable\n      object.body.fractureImpulse = fractureImpulse\n      object.body.ignoreScale = ignoreScale\n      return\n    }\n\n    const collisionShapes: Ammo.btCollisionShape[] = []\n\n    // if object is a THREE.Group, object does not have a mesh\n    if (shape !== 'unknown' || object.isMesh) {\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\n      collisionShapes.push(cs)\n    }\n\n    // check if the object has children\n    if (shape === 'unknown' && addChildren && object.children.length >= 1) {\n      object.children.forEach((child: any) => {\n        if (child.isMesh) {\n          const p = this.prepareThreeObjectForCollisionShape(child)\n          const cs = this.createCollisionShape(p.shape, p.params, p.object)\n\n          // @ts-ignore // the relative pos, quat and scale to its parent\n          cs._tmp = {\n            pos: child.position.clone(),\n            quat: child.quaternion.clone(),\n            scale: child.scale.clone(),\n            margin: margin\n          }\n\n          collisionShapes.push(cs)\n        }\n      })\n    }\n\n    // FALLBACK: if we do not have any collisionShapes yet, add a simple box as a fallback\n    if (collisionShapes.length === 0) {\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\n      collisionShapes.push(cs)\n    }\n\n    const collisionShape =\n      collisionShapes.length === 1 ? collisionShapes[0] : this.mergeCollisionShapesToCompoundShape(collisionShapes)\n\n    // add rigid body\n    // object.position.copy(pos)\n    // object.quaternion.copy(quat)\n\n    const localTransform = this.applyPosQuatScaleMargin(collisionShape, pos, quat, scale, margin)\n    const rigidBody = this.collisionShapeToRigidBody(collisionShape, localTransform, mass, isKinematicObject)\n\n    this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\n    object.body.breakable = breakable\n    object.body.fractureImpulse = fractureImpulse\n    object.body.ignoreScale = ignoreScale\n  }\n\n  public addRigidBodyToWorld(\n    object: ExtendedObject3D,\n    rigidBody: Ammo.btRigidBody,\n    collisionFlags: number,\n    collisionGroup: number,\n    collisionMask: number,\n    offset?: { x?: number; y?: number; z?: number }\n  ) {\n    this.rigidBodies.push(object)\n    this.physicsWorld.addRigidBody(rigidBody, collisionGroup, collisionMask)\n\n    const ptr = Object.values(rigidBody)[0]\n    // @ts-ignore\n    rigidBody.name = object.name\n    object.body = new PhysicsBody(this, rigidBody)\n    object.hasBody = true\n    // @ts-ignore\n    object.ptr = ptr\n    // @ts-ignore\n    rigidBody.threeObject = object\n\n    if (offset) object.body.offset = { x: 0, y: 0, z: 0, ...offset }\n\n    object.body.setCollisionFlags(collisionFlags)\n  }\n\n  public applyPosQuatScaleMargin(\n    collisionShape: Ammo.btCollisionShape,\n    pos: Vector3 = new Vector3(),\n    quat: Quaternion = new Quaternion(),\n    scale: Vector3 = new Vector3(),\n    margin: number = 0.01\n  ) {\n    collisionShape.setMargin(margin)\n\n    const rotation = new Ammo.btQuaternion(0, 0, 0, 1)\n    rotation.setValue(quat.x, quat.y, quat.z, quat.w)\n\n    const localTransform = new Ammo.btTransform()\n    localTransform.setIdentity()\n    localTransform.getOrigin().setValue(pos.x, pos.y, pos.z)\n    localTransform.setRotation(rotation)\n\n    Ammo.destroy(rotation)\n\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\n    collisionShape.setLocalScaling(localScale)\n    Ammo.destroy(localScale)\n\n    return localTransform\n  }\n\n  public collisionShapeToRigidBody(\n    collisionShape: Ammo.btCollisionShape,\n    localTransform: Ammo.btTransform,\n    mass: number,\n    disableDeactivation: boolean\n  ) {\n    const motionState = new Ammo.btDefaultMotionState(localTransform)\n    const localInertia = new Ammo.btVector3(0, 0, 0)\n    if (mass > 0) collisionShape.calculateLocalInertia(mass, localInertia)\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, collisionShape, localInertia)\n    const rigidBody = new Ammo.btRigidBody(rbInfo)\n    if (mass > 0 || disableDeactivation) rigidBody.setActivationState(4) // Disable deactivation\n    return rigidBody\n  }\n}\n\nexport { AmmoPhysics }\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport {\n  AddExistingConfig,\n  BoxConfig,\n  ConeConfig,\n  CylinderConfig,\n  ExtendedObject3D,\n  ExtrudeConfig,\n  GroundConfig,\n  MaterialConfig,\n  PlaneConfig,\n  SphereConfig,\n  TorusConfig\n} from '@enable3d/common/dist/types'\nimport Factories from '@enable3d/common/dist/factories'\n\nclass Shapes {\n  constructor(\n    private factory: Factories,\n    private addExisting: (object: ExtendedObject3D, config?: AddExistingConfig) => void\n  ) {}\n\n  public addPlane(planeConfig: PlaneConfig = {}, materialConfig: MaterialConfig = {}) {\n    const plane = this.factory.add.plane(planeConfig, materialConfig)\n    this.addExisting(plane, planeConfig)\n    return plane\n  }\n\n  public addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) {\n    const sphere = this.factory.add.sphere(sphereConfig, materialConfig)\n    this.addExisting(sphere, sphereConfig)\n    return sphere\n  }\n\n  public addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) {\n    const box = this.factory.add.box(boxConfig, materialConfig)\n    this.addExisting(box, boxConfig)\n    return box\n  }\n\n  public addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) {\n    const ground = this.factory.add.ground(groundConfig, materialConfig)\n    const config = { ...groundConfig, mass: 0, collisionFlags: 1 }\n    this.addExisting(ground, config)\n    return ground\n  }\n\n  public addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) {\n    const cylinder = this.factory.add.cylinder(cylinderConfig, materialConfig)\n    this.addExisting(cylinder, cylinderConfig)\n    return cylinder\n  }\n\n  public addCone(coneConfig: ConeConfig = {}, materialConfig: MaterialConfig = {}) {\n    const cone = this.factory.add.cone(coneConfig, materialConfig)\n    this.addExisting(cone, coneConfig)\n    return cone\n  }\n\n  public addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) {\n    const torus = this.factory.add.torus(torusConfig, materialConfig)\n    this.addExisting(torus, torusConfig)\n    return torus\n  }\n\n  public addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) {\n    const object = this.factory.add.extrude(extrudeConfig, materialConfig)\n    object.translateX(1)\n    this.addExisting(object)\n    return object\n  }\n}\n\nexport default Shapes\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @description  This is a modified version of the original code from Kevin Lee\n */\n\n/**\n * @author       Kevin Lee (https://github.com/InfiniteLee)\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/ammo-debug-drawer\n * @license      {@link https://github.com/InfiniteLee/ammo-debug-drawer/blob/master/LICENSE|MPL-2.0}\n */\n\nimport { BufferAttribute, BufferGeometry, LineBasicMaterial, LineSegments, Scene, StaticDrawUsage } from 'three'\n\nconst AmmoDebugConstants = {\n  NoDebug: 0,\n  DrawWireframe: 1,\n  DrawAabb: 2,\n  DrawFeaturesText: 4,\n  DrawContactPoints: 8,\n  NoDeactivation: 16,\n  NoHelpText: 32,\n  DrawText: 64,\n  ProfileTimings: 128,\n  EnableSatComparison: 256,\n  DisableBulletLCP: 512,\n  EnableCCD: 1024,\n  DrawConstraints: 1 << 11, //2048\n  DrawConstraintLimits: 1 << 12, //4096\n  FastWireframe: 1 << 13, //8192\n  DrawNormals: 1 << 14, //16384\n  DrawOnTop: 1 << 15, //32768\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\n}\n\n/**\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\n */\nclass DebugDrawer {\n  debugDrawMode: number\n  geometry: BufferGeometry\n  index: number\n  mesh: LineSegments\n  enabled: boolean\n  debugDrawer: Ammo.DebugDrawer\n  warnedOnce: boolean\n  constructor(public scene: Scene, public world: Ammo.btCollisionWorld, public options: any = {}) {\n    this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe\n    const drawOnTop = this.debugDrawMode & AmmoDebugConstants.DrawOnTop || false\n    const maxBufferSize = options.maxBufferSize || 1000000\n\n    this.geometry = new BufferGeometry()\n    const vertices = new Float32Array(maxBufferSize * 3)\n    const colors = new Float32Array(maxBufferSize * 3)\n\n    /*\n    I do not know the difference, just using the first one.\n    export const StaticDrawUsage: Usage;\n    export const DynamicDrawUsage: Usage;\n    export const StreamDrawUsage: Usage;\n    export const StaticReadUsage: Usage;\n    export const DynamicReadUsage: Usage;\n    export const StreamReadUsage: Usage;\n    export const StaticCopyUsage: Usage;\n    export const DynamicCopyUsage: Usage;\n    export const StreamCopyUsage: Usage;\n     */\n    this.geometry.setAttribute('position', new BufferAttribute(vertices, 3).setUsage(StaticDrawUsage))\n    this.geometry.setAttribute('color', new BufferAttribute(colors, 3).setUsage(StaticDrawUsage))\n\n    this.index = 0\n\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      depthTest: !drawOnTop\n    })\n\n    this.mesh = new LineSegments(this.geometry, material)\n    if (drawOnTop) this.mesh.renderOrder = 999\n    this.mesh.frustumCulled = false\n\n    this.enabled = false\n\n    this.debugDrawer = new Ammo.DebugDrawer()\n    this.debugDrawer.drawLine = this.drawLine.bind(this)\n    this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this)\n    this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this)\n    this.debugDrawer.draw3dText = this.draw3dText.bind(this)\n    this.debugDrawer.setDebugMode = this.setDebugMode.bind(this)\n    this.debugDrawer.getDebugMode = this.getDebugMode.bind(this)\n\n    this.world.setDebugDrawer(this.debugDrawer)\n  }\n\n  enable() {\n    this.enabled = true\n    this.scene.add(this.mesh)\n  }\n\n  disable() {\n    this.enabled = false\n    this.scene.remove(this.mesh)\n  }\n\n  update() {\n    if (!this.enabled) {\n      return\n    }\n\n    if (this.index != 0) {\n      // @ts-ignore\n      this.geometry.attributes.position.needsUpdate = true\n      // @ts-ignore\n      this.geometry.attributes.color.needsUpdate = true\n    }\n\n    this.index = 0\n    this.world.debugDrawWorld()\n    this.geometry.setDrawRange(0, this.index)\n  }\n\n  drawLine(from: any, to: any, color: any) {\n    // @ts-ignore\n    const heap = Ammo.HEAPF32\n    const r = heap[(color + 0) / 4]\n    const g = heap[(color + 4) / 4]\n    const b = heap[(color + 8) / 4]\n\n    const fromX = heap[(from + 0) / 4]\n    const fromY = heap[(from + 4) / 4]\n    const fromZ = heap[(from + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, fromX, fromY, fromZ)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n\n    const toX = heap[(to + 0) / 4]\n    const toY = heap[(to + 4) / 4]\n    const toZ = heap[(to + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, toX, toY, toZ)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n  }\n\n  //TODO: figure out how to make lifeTime work\n  drawContactPoint(pointOnB: any, normalOnB: any, distance: any, _lifeTime: any, color: any) {\n    // @ts-ignore\n    const heap = Ammo.HEAPF32\n    const r = heap[(color + 0) / 4]\n    const g = heap[(color + 4) / 4]\n    const b = heap[(color + 8) / 4]\n\n    const x = heap[(pointOnB + 0) / 4]\n    const y = heap[(pointOnB + 4) / 4]\n    const z = heap[(pointOnB + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, x, y, z)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n\n    const dx = heap[(normalOnB + 0) / 4] * distance\n    const dy = heap[(normalOnB + 4) / 4] * distance\n    const dz = heap[(normalOnB + 8) / 4] * distance\n    this.geometry.attributes.position.setXYZ(this.index, x + dx, y + dy, z + dz)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n  }\n\n  reportErrorWarning(warningString: string) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (Ammo.hasOwnProperty('Pointer_stringify')) {\n      // @ts-ignore\n      console.warn(Ammo.Pointer_stringify(warningString))\n    } else if (!this.warnedOnce) {\n      this.warnedOnce = true\n      console.warn(\"Cannot print warningString, please rebuild Ammo.js using 'debug' flag\")\n    }\n  }\n\n  draw3dText(_location: any, _textString: any) {\n    //TODO\n    console.warn('TODO: draw3dText')\n  }\n\n  setDebugMode(debugMode: any) {\n    this.debugDrawMode = debugMode\n  }\n\n  getDebugMode() {\n    return this.debugDrawMode\n  }\n}\n\nexport default DebugDrawer\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { Quaternion } from 'three'\n\n// https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7228\nexport const createTorusShape = (\n  config: { radius: number; tube: number; tubularSegments: number },\n  quat: Quaternion\n) => {\n  const { radius = 1, tube = 0.4, tubularSegments = 8 } = config\n\n  const SIMD_PI = Math.PI\n  const subdivisions = tubularSegments\n  const gap = Math.sqrt(2.0 * tube * tube - 2.0 * tube * tube * Math.cos((2.0 * SIMD_PI) / subdivisions))\n\n  const btHalfExtents = new Ammo.btVector3(tube, SIMD_PI / subdivisions + 0.5 * gap, tube)\n  const cylinderShape = new Ammo.btCylinderShape(btHalfExtents)\n  cylinderShape.setMargin(0.05)\n\n  const compoundShape = new Ammo.btCompoundShape()\n\n  const forward = new Ammo.btVector3(0, 0, 1)\n  const side = new Ammo.btVector3(0, radius, 0)\n  const rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w)\n\n  for (let x = 0; x < subdivisions; x++) {\n    const angle = (x * 2.0 * SIMD_PI) / subdivisions\n    const position = side.rotate(forward, angle)\n    const transform = new Ammo.btTransform()\n    rotation.setRotation(forward, angle + Math.PI / 2)\n    transform.setIdentity()\n    transform.setOrigin(position)\n    transform.setRotation(rotation)\n    compoundShape.addChildShape(transform, cylinderShape)\n  }\n\n  return compoundShape\n}\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\nimport { Events } from '@yandeu/events';\nimport { Euler, Quaternion } from 'three';\nclass PhysicsBody {\n    constructor(physics, ammo) {\n        this.physics = physics;\n        this.ammo = ammo;\n        this.ignoreScale = false;\n        this.isSoftBody = false;\n        this.offset = { x: 0, y: 0, z: 0 };\n        this.errors = [];\n        this.checkCollisions = false;\n        this.breakable = false;\n        this.fractureImpulse = 1;\n        this.didUpdate = false;\n        /** Skip syncing the mesh to the physics body. */\n        this.skipUpdate = false;\n        this._emitUpdateEvents = false;\n        this._needUpdate = false;\n        this.tmpEuler = new Euler();\n        this.tmpQuaternion = new Quaternion();\n        this.tmpBtVector3 = new Ammo.btVector3();\n        this.tmpBtVector3_1 = new Ammo.btVector3();\n        this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1);\n        this.eventEmitter = new Events();\n        // @ts-ignore\n        this.name = ammo.name;\n    }\n    /**\n     * Don't call this manually! Do physics.destroy() instead.\n     */\n    destructor() {\n        // remove events\n        if (this.eventEmitter)\n            this.eventEmitter.removeAllListeners();\n        // destroy tmp ammo values\n        Ammo.destroy(this.tmpBtVector3);\n        Ammo.destroy(this.tmpBtVector3_1);\n        Ammo.destroy(this.tmpBtQuaternion);\n        // destory collision shape\n        Ammo.destroy(this.ammo.getCollisionShape());\n        // destroy body\n        Ammo.destroy(this.ammo);\n    }\n    setupEventEmitter() {\n        if (typeof this.eventEmitter === 'undefined')\n            this.eventEmitter = new Events();\n    }\n    get needUpdate() {\n        return this._needUpdate;\n    }\n    set needUpdate(need) {\n        if (!need && this._needUpdate)\n            this.didUpdate = true;\n        this._needUpdate = need;\n    }\n    onUpdateEvent(updateCallback, once = false) {\n        this.setupEventEmitter();\n        this._emitUpdateEvents = true;\n        if (once)\n            this.eventEmitter.once('update', () => {\n                updateCallback();\n            });\n        else\n            this.eventEmitter.on('update', () => {\n                updateCallback();\n            });\n    }\n    get on() {\n        return {\n            update: (updateCallback) => this.onUpdateEvent(updateCallback),\n            collision: (collisionCallback) => this.onCollision(collisionCallback)\n        };\n    }\n    get once() {\n        return {\n            update: (updateCallback) => this.onUpdateEvent(updateCallback, true)\n        };\n    }\n    onCollision(collisionCallback) {\n        this.checkCollisions = true;\n        this.physics.collisionEvents.on('collision', (data) => {\n            const { bodies, event } = data;\n            if (bodies[0].name === this.name)\n                collisionCallback(bodies[1], event);\n            else if (bodies[1].name === this.name)\n                collisionCallback(bodies[0], event);\n        });\n    }\n    /** You have to call transform() before you can get or set the body's position or rotation. (for headless mode only) */\n    transform() {\n        const t = this.physics.worldTransform;\n        this.ammo.getMotionState().getWorldTransform(t);\n    }\n    /** You have to call refresh() after you set the position or rotation of the body. (for headless mode only) */\n    refresh() {\n        const t = this.physics.worldTransform;\n        this.ammo.getMotionState().setWorldTransform(t);\n    }\n    /** Set the rotation in radians. (for headless mode only) */\n    setRotation(x, y, z) {\n        const e = this.tmpEuler.set(x, y, z);\n        const q = this.tmpQuaternion.set(0, 0, 0, 1);\n        q.setFromEuler(e);\n        this.tmpBtQuaternion.setValue(0, 0, 0, 1);\n        const ammoQuat = this.tmpBtQuaternion;\n        ammoQuat.setValue(q.x, q.y, q.z, q.w);\n        const t = this.physics.worldTransform;\n        t.setRotation(ammoQuat);\n    }\n    /** Get the rotation in radians. (for headless mode only) */\n    get rotation() {\n        // https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n        let x, y, z;\n        const t = this.physics.worldTransform;\n        const ammoQuat = t.getRotation();\n        let q1 = this.tmpQuaternion.set(ammoQuat.x(), ammoQuat.y(), ammoQuat.z(), ammoQuat.w());\n        if (q1.w > 1)\n            q1 = q1.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalized\n        const angle = 2 * Math.acos(q1.w);\n        const s = Math.sqrt(1 - q1.w * q1.w); // assuming quaternion normalized then w is less than 1, so term always positive.\n        if (s < 0.001) {\n            // test to avoid divide by zero, s is always positive due to sqrt\n            // if s close to zero then direction of axis not important\n            x = q1.x; // if it is important that axis is normalized then replace with x=1; y=z=0;\n            y = q1.y;\n            z = q1.z;\n        }\n        else {\n            x = q1.x / s; // normalized axis\n            y = q1.y / s;\n            z = q1.z / s;\n        }\n        return { x: x * angle, y: y * angle, z: z * angle };\n    }\n    /** Get the quaternion. (for headless mode only) */\n    get quaternion() {\n        const t = this.physics.worldTransform;\n        const q = t.getRotation();\n        return { x: q.x(), y: q.y(), z: q.z(), w: q.w() };\n    }\n    /** Set position. (for headless mode only) */\n    setPosition(x, y, z) {\n        const t = this.physics.worldTransform;\n        t.getOrigin().setValue(x, y, z);\n    }\n    /** Get position. (for headless mode only) */\n    get position() {\n        const t = this.physics.worldTransform;\n        return { x: t.getOrigin().x(), y: t.getOrigin().y(), z: t.getOrigin().z() };\n    }\n    get velocity() {\n        return {\n            x: this.ammo.getLinearVelocity().x(),\n            y: this.ammo.getLinearVelocity().y(),\n            z: this.ammo.getLinearVelocity().z()\n        };\n    }\n    get angularVelocity() {\n        return {\n            x: this.ammo.getAngularVelocity().x(),\n            y: this.ammo.getAngularVelocity().y(),\n            z: this.ammo.getAngularVelocity().z()\n        };\n    }\n    setVelocity(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\n    }\n    setVelocityX(value) {\n        this.tmpBtVector3.setValue(value, this.velocity.y, this.velocity.z);\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\n    }\n    setVelocityY(value) {\n        this.tmpBtVector3.setValue(this.velocity.x, value, this.velocity.z);\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\n    }\n    setVelocityZ(value) {\n        this.tmpBtVector3.setValue(this.velocity.x, this.velocity.y, value);\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\n    }\n    setAngularVelocity(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\n    }\n    setAngularVelocityX(value) {\n        this.tmpBtVector3.setValue(value, this.angularVelocity.y, this.angularVelocity.z);\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\n    }\n    setAngularVelocityY(value) {\n        this.tmpBtVector3.setValue(this.angularVelocity.x, value, this.angularVelocity.z);\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\n    }\n    setAngularVelocityZ(value) {\n        this.tmpBtVector3.setValue(this.angularVelocity.x, this.angularVelocity.y, value);\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\n    }\n    // Apply Force methods\n    applyForce(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\n    }\n    applyForceX(value) {\n        this.tmpBtVector3.setValue(value, 0, 0);\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\n    }\n    applyForceY(value) {\n        this.tmpBtVector3.setValue(0, value, 0);\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\n    }\n    applyForceZ(value) {\n        this.tmpBtVector3.setValue(0, 0, value);\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\n    }\n    // Apply \"Something\" Methods\n    applyCentralForce(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.applyCentralForce(this.tmpBtVector3);\n    }\n    applyCentralImpulse(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\n    }\n    applyCentralLocalForce(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.applyCentralLocalForce(this.tmpBtVector3);\n    }\n    applyImpulse(impulse, relativePosition) {\n        this.tmpBtVector3.setValue(impulse.x || 0, impulse.y || 0, impulse.z || 0);\n        this.tmpBtVector3_1.setValue(relativePosition.x || 0, relativePosition.y || 0, relativePosition.z || 0);\n        this.ammo.applyImpulse(this.tmpBtVector3, this.tmpBtVector3_1);\n    }\n    applyLocalTorque(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.applyLocalTorque(this.tmpBtVector3);\n    }\n    applyTorque(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.applyTorque(this.tmpBtVector3);\n    }\n    applyTorqueImpulse(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.applyTorqueImpulse(this.tmpBtVector3);\n    }\n    /**\n     * Add the collision flags\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\n     */\n    // https://github.com/bulletphysics/bullet3/blob/aae8048722f2596f7e2bdd52d2a1dcb52a218f2b/src/BulletCollision/CollisionDispatch/btCollisionObject.h#L128\n    setCollisionFlags(value) {\n        this.ammo.setCollisionFlags(value);\n    }\n    /**\n     * Get the collision flags\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\n     */\n    getCollisionFlags() {\n        return this.ammo.getCollisionFlags();\n    }\n    /**\n     * Set the restitution (same as bounciness)\n     * @param value A number from 0 to 1.\n     */\n    setRestitution(value) {\n        this.ammo.setRestitution(value);\n    }\n    /**\n     * Set the bounciness (same as restitution)\n     * @param value A number from 0 to 1.\n     */\n    setBounciness(value) {\n        this.setRestitution(value);\n    }\n    /**\n     * Set the friction\n     * @param value A number from 0 to 1.\n     */\n    setFriction(value) {\n        this.ammo.setFriction(value);\n    }\n    /**\n     * Set the linear and angular damping\n     * @param linear A number from 0 to 1.\n     * @param angular A number from 0 to 1.\n     */\n    setDamping(linear, angular) {\n        this.ammo.setDamping(linear, angular);\n    }\n    /** Set per body gravity */\n    setGravity(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.setGravity(this.tmpBtVector3);\n    }\n    setLinearFactor(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.setLinearFactor(this.tmpBtVector3);\n    }\n    setAngularFactor(x, y, z) {\n        this.tmpBtVector3.setValue(x, y, z);\n        this.ammo.setAngularFactor(this.tmpBtVector3);\n    }\n    setCcdMotionThreshold(threshold) {\n        this.ammo.setCcdMotionThreshold(threshold);\n    }\n    setCcdSweptSphereRadius(radius) {\n        this.ammo.setCcdSweptSphereRadius(radius);\n    }\n}\nexport default PhysicsBody;\n//# sourceMappingURL=physicsBody.js.map"],"sourceRoot":""}