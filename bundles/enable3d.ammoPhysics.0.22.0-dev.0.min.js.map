{"version":3,"sources":["webpack://ENABLE3D/webpack/universalModuleDefinition","webpack://ENABLE3D/../node_modules/eventemitter3/index.js","webpack://ENABLE3D/./node_modules/eventemitter3/index.js","webpack://ENABLE3D/../common/dist/applyMixins.js","webpack://ENABLE3D/../common/dist/defaultMaterial.js","webpack://ENABLE3D/../common/dist/extendedGroup.js","webpack://ENABLE3D/../common/dist/extendedMesh.js","webpack://ENABLE3D/../common/dist/extendedObject3D.js","webpack://ENABLE3D/../common/dist/factories.js","webpack://ENABLE3D/../common/dist/logger.js","webpack://ENABLE3D/../common/dist/physicsBody.js","webpack://ENABLE3D/../common/dist/physicsLoader.js","webpack://ENABLE3D/../common/dist/types.js","webpack://ENABLE3D/../common/dist/wasmLoader.js","webpack://ENABLE3D/external \"THREE\"","webpack://ENABLE3D/webpack/bootstrap","webpack://ENABLE3D/webpack/runtime/compat get default export","webpack://ENABLE3D/webpack/runtime/define property getters","webpack://ENABLE3D/webpack/runtime/hasOwnProperty shorthand","webpack://ENABLE3D/webpack/runtime/make namespace object","webpack://ENABLE3D/./src/constraints.ts","webpack://ENABLE3D/./src/three-to-ammo.js","webpack://ENABLE3D/./src/collisionEvents.ts","webpack://ENABLE3D/./src/debugDrawer.ts","webpack://ENABLE3D/./src/convexObjectBreaker.ts","webpack://ENABLE3D/./src/raycaster/raycaster.ts","webpack://ENABLE3D/./src/raycaster/closestRayResultCallback.ts","webpack://ENABLE3D/./src/raycaster/allHitsRayResultCallback.ts","webpack://ENABLE3D/./src/lib/Clock.ts","webpack://ENABLE3D/./src/physics.ts","webpack://ENABLE3D/./src/shapes.ts","webpack://ENABLE3D/./src/torusShape.ts"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__428__","has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","value","index_1","default","_defaultMaterial","MeshLambertMaterial","color","ExtendedGroup","Group","super","isMesh","hasBody","id","ExtendedMesh","Mesh","geometry","material","vector3","Vector3","isGroup","theta","worldTheta","phi","worldPhi","getWorldDirection","Math","atan2","x","z","acos","y","ExtendedObject3D","Object3D","anims","_currentAnimation","_animationActions","Map","console","warn","animationPlay","current","add","key","animation","animationAdd","play","transitionDuration","loop","mixer","animationMixer","_animationMixer","AnimationMixer","set","clipAction","next","get","reset","crossFadeFrom","clampWhenFinished","setLoop","LoopOnce","__rest","s","e","t","p","indexOf","propertyIsEnumerable","extendedMesh_1","logger_1","defaultMaterial_1","scene","isHeadless","defaultMaterial","plane","planeConfig","materialConfig","makePlane","box","boxConfig","makeBox","sphere","sphereConfig","makeSphere","cylinder","cylinderConfig","makeCylinder","cone","coneConfig","makeCone","torus","torusConfig","makeTorus","extrude","extrudeConfig","makeExtrude","mesh","addMesh","existing","object","addExisting","addPlane","addBox","ground","groundConfig","addGround","addSphere","addCylinder","addCone","addTorus","addExtrude","addMaterial","isArray","position","obj","type","Line","Points","castShadow","receiveShadow","shape","autoCenter","breakable","rest","depth","bevelEnabled","ExtrudeBufferGeometry","assign","createMesh","center","PlaneBufferGeometry","width","height","widthSegments","heightSegments","side","DoubleSide","SphereBufferGeometry","radius","phiStart","phiLength","thetaStart","thetaLength","BoxBufferGeometry","depthSegments","rotateX","MathUtils","degToRad","CylinderBufferGeometry","radiusTop","radiusBottom","radiusSegments","openEnded","ConeBufferGeometry","PI","TorusBufferGeometry","tube","radialSegments","tubularSegments","arc","keys","MeshBasicMaterial","basic","MeshNormalMaterial","normal","MeshStandardMaterial","standard","lambert","MeshPhongMaterial","phong","physical","MeshPhysicalMaterial","MeshToonMaterial","toon","LineBasicMaterial","line","PointsMaterial","points","custom","msg","error","eventemitter3_1","physics","ammo","ignoreScale","isSoftBody","offset","errors","checkCollisions","didUpdate","skipUpdate","_emitUpdateEvents","_needUpdate","tmpEuler","Euler","tmpQuaternion","Quaternion","tmpBtVector3","Ammo","btVector3","tmpBtVector3_1","tmpBtQuaternion","btQuaternion","eventEmitter","destroy","getCollisionShape","need","updateCallback","setupEventEmitter","update","onUpdateEvent","collision","collisionCallback","onCollision","collisionEvents","data","bodies","worldTransform","getMotionState","getWorldTransform","setWorldTransform","q","setFromEuler","setValue","ammoQuat","w","setRotation","getRotation","q1","normalize","angle","sqrt","getOrigin","getLinearVelocity","getAngularVelocity","setLinearVelocity","velocity","setAngularVelocity","angularVelocity","applyCentralImpulse","applyCentralForce","applyCentralLocalForce","impulse","relativePosition","applyImpulse","applyLocalTorque","applyTorque","applyTorqueImpulse","setCollisionFlags","getCollisionFlags","setRestitution","setFriction","linear","angular","setDamping","setGravity","setLinearFactor","setAngularFactor","threshold","setCcdMotionThreshold","setCcdSweptSphereRadius","wasmLoader_1","path","callback","window","__loadPhysics","then","Material","AnimationAction","AnimationClip","extendedObject3D_1","enumerable","wasmSupported","WebAssembly","instantiate","Module","Uint8Array","of","Instance","doneCallback","url","tag","document","createElement","onload","onerror","Error","async","src","head","appendChild","loadScriptAsync","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","o","prop","r","Symbol","toStringTag","Constraints","physicsWorld","v","lock","bodyA","bodyB","disableCollisionsBetweenLinkedBodies","fixed","pointToPoint","config","hinge","slider","spring","coneTwist","frameA","frameB","dof","transformB","btTransform","setIdentity","v1","v2","dx","dy","dz","setOrigin","transformA","getCenterOfMassTransform","inverse","op_mul","zero","angularLowerLimit","angularUpperLimit","transform","getTransform","constraint","btFixedConstraint","addConstraint","pivotA","pivotB","pivotV3","targetPivotV3","btPoint2PointConstraint","axisA","axisB","axisV3","targetAxisV3","btHingeConstraint","linearLowerLimit","lll","linearUpperLimit","lul","all","aul","rotationA","setEulerZYX","rotationB","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","stiffness","damping","angularLock","enableSpring","btGeneric6DofSpringConstraint","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","log","toAmmoV3","setStiffness","rbAFrame","rbBFrame","btConeTwistConstraint","setAngularOnly","btGeneric6DofConstraint","TYPE","FIT","createHullShape","vertex","matrix","Matrix4","vertices","matrices","matrixWorld","options","_setOptions","fit","bounds","_computeBounds","btVertex","originalHull","btConvexHullShape","setMargin","margin","addVectors","max","min","multiplyScalar","vertexCount","maxVertices","hullMaxVertices","components","fromArray","isLastVertex","random","applyMatrix4","sub","addPoint","collisionShape","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","_finishCollisionShape","_computeScale","createHACDShapes","vector","indexes","scale","triCount","hacd","HACD","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","_malloc","triangles","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","indices","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","pi","px","py","pz","createVHACDShapes","vhacd","VHACD","params","Parameters","set_m_resolution","resolution","set_m_depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","createTriMeshShape","va","vb","vc","bta","btb","btc","triMesh","btTriangleMesh","index","ai","bi","ci","addTriangle","localScale","setScaling","concave","btBvhTriangleMeshShape","btConvexTriangleMeshShape","resources","iterateGeometries","cb","parseInt","REVISION","copy","invert","getInverse","setFromMatrixScale","traverse","includeInvisible","el","object3D","visible","identity","updateWorldMatrix","multiplyMatrices","isBufferGeometry","attributes","array","elements","Box3","minX","minY","minZ","maxX","maxY","maxZ","_iterateVertices","CollisionEvents","object1","object2","eventCallback","body","ConvexObjectBreaker","minSizeForBreak","smallDelta","tempLine1","Line3","tempPlane1","Plane","tempPlane2","tempPlane_Cut","tempCM1","tempCM2","tempVector3","tempVector3_2","tempVector3_3","tempVector3_P0","tempVector3_P1","tempVector3_P2","tempVector3_N0","tempVector3_N1","tempVector3_AB","tempVector3_CB","tempResultObjects","segments","constructor","prepareBreakableObject","mass","userData","ammoPhysicsData","clone","subdivideByImpact","pointOfImpact","maxRadialIterations","maxRandomIterations","debris","setFromCoplanarPoints","maxTotalIterations","scope","subdivideRadial","subObject","startAngle","endAngle","numIterations","constant","applyAxisAngle","cutByPlane","obj1","obj2","output","coords","normals","numPoints","numFaces","getIndex","getVertexIndex","faceIdx","vert","idx","points1","points2","delta","numPointPairs","p0","p1","n0","n1","b1","c1","b2","c2","dot","localPlane","updateMatrix","transformPlaneToLocalSpace","segment","i0","i1","mark0","distanceToPoint","mark1","start","end","intersection","intersectLine","segmentedObject1","segmentedObject2","newMass","radius1","numPoints1","divideScalar","radius2","numPoints2","numObjects","ConvexGeometry","quaternion","logger","transformFreeVector","m","transformFreeVectorInverse","transformTiedVectorInverse","resultPlane","referencePoint","coplanarPoint","Raycaster","_btRayFrom","_btRayTo","_btRayCallback","hasHit","ClosestRayResultCallback","AllHitsRayResultCallback","rayTest","ClosestRaycaster","AllHitsRaycaster","applyMixins","h","get_m_hitPointWorld","get_m_hitNormalWorld","castObject","get_m_collisionObject","btRigidBody","threeObject","size","hh","at","getHitPointsWorld","threeObjects","objects","get_m_collisionObjects","rb","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","getElapsedTime","getDelta","diff","newTime","AmmoPhysics","rigidBodies","earlierDetectedCollisions","complexShapes","gravity","tmpVector3","tmpVector3a","tmpMatrix4","tmpMatrix4a","emptyV3","impactPoint","impactNormal","b","includes","removeSoftBody","removeRigidBody","destructor","splice","setupPhysicsWorld","convexBreaker","objectsToRemove","numObjectsToRemove","collisionFlags","translateX","constraints","debugDrawer","world","debugDrawMode","drawOnTop","maxBufferSize","BufferGeometry","Float32Array","colors","setAttribute","BufferAttribute","setUsage","StaticDrawUsage","vertexColors","depthTest","LineSegments","renderOrder","frustumCulled","enabled","DebugDrawer","drawLine","bind","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","setDebugDrawer","remove","needsUpdate","debugDrawWorld","setDrawRange","from","to","heap","HEAPF32","g","fromX","fromY","fromZ","setXYZ","toX","toY","toZ","pointOnB","normalOnB","distance","_lifeTime","warningString","Pointer_stringify","warnedOnce","_location","_textString","debugMode","softBodies","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","btSoftBodyRigidBodyCollisionConfiguration","softBodySolver","btDefaultSoftBodySolver","btSoftRigidDynamicsWorld","parent","fragmentDepth","setTimeout","updatePhysics","detectCollisions","deltaTime","stepSimulation","maxSubSteps","fixedTimeStep","objThree","ms","isKinematicObject","needUpdate","getWorldQuaternion","getWorldPosition","isStaticObject","getLocalScaling","compose","multiply","decompose","detectedCollisions","getDispatcher","numManifolds","getNumManifolds","contactManifold","getManifoldByIndexInternal","numContacts","getNumContacts","rb0","getBody0","rb1","getBody1","threeObject0","threeObject1","checkCollisions0","checkCollisions1","breakable0","breakable1","checkBreakable","contact","maxImpulse","contactPoint","getContactPoint","getDistance","getAppliedImpulse","get_m_positionWorldOnB","get_m_normalWorldOnB","sort","combinedName","find","fractureImpulse","MAX_FRAGMENT_DEPTH","physicsBody","vel","angVel","fragment","createDebrisFromBreakableObject","removeDebris","split","obj0","enable","disable","setup","collider","addCollider","addConstraints","raycaster","defaultParams","test","parameters","quat","axis","btHalfExtents","isGeometry","fromGeometry","vertexArray","matrixArray","indexArray","extractData","btBoxShape","btSphereShape","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btConeShape","btConeShapeX","btConeShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","SIMD_PI","subdivisions","gap","cos","cylinderShape","compoundShape","btCompoundShape","forward","rotation","rotate","addChildShape","createTorusShape","mergeCollisionShapesToCompoundShape","collisionShapes","pos","getWorldScale","toString","compound","collisionGroup","collisionMask","addChildren","map","createCollisionShape","localTransform","finishCollisionShape","rigidBody","collisionShapeToRigidBody","addRigidBodyToWorld","prepareThreeObjectForCollisionShape","cs","children","child","addRigidBody","ptr","values","setLocalScaling","disableDeactivation","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","setActivationState"],"mappings":"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","file":"enable3d.ammoPhysics.0.22.0-dev.0.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ENABLE3D\"] = factory(require(\"THREE\"));\n\telse\n\t\troot[\"ENABLE3D\"] = factory(root[\"THREE\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__428__) {\nreturn ","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// https://www.typescriptlang.org/docs/handbook/mixins.html\r\nconst applyMixins = (derivedCtor, baseCtors) => {\r\n    baseCtors.forEach(baseCtor => {\r\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\r\n            // @ts-ignore\r\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\r\n        });\r\n    });\r\n};\r\nexports.default = applyMixins;\r\n//# sourceMappingURL=applyMixins.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass DefaultMaterial {\r\n    constructor() {\r\n        this._defaultMaterial = new index_1.MeshLambertMaterial({ color: 0xcccccc });\r\n    }\r\n    get() {\r\n        return this._defaultMaterial;\r\n    }\r\n}\r\nexports.default = DefaultMaterial;\r\n//# sourceMappingURL=defaultMaterial.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExtendedGroup = void 0;\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass ExtendedGroup extends index_1.Group {\r\n    constructor() {\r\n        super();\r\n        this.isMesh = false;\r\n        this.hasBody = false;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n}\r\nexports.ExtendedGroup = ExtendedGroup;\r\n//# sourceMappingURL=extendedGroup.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExtendedMesh = void 0;\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass ExtendedMesh extends index_1.Mesh {\r\n    constructor(geometry, material) {\r\n        super(geometry, material);\r\n        this.vector3 = new index_1.Vector3();\r\n        this.isGroup = false;\r\n        this.hasBody = false;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n}\r\nexports.ExtendedMesh = ExtendedMesh;\r\n//# sourceMappingURL=extendedMesh.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExtendedObject3D = void 0;\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\n/**\r\n * Extends the Object3D class from THREE.js and implements properties from Line, Mesh and Points.\r\n */\r\nclass ExtendedObject3D extends index_1.Object3D {\r\n    constructor() {\r\n        super();\r\n        this.vector3 = new index_1.Vector3();\r\n        this.isGroup = false;\r\n        this.hasBody = false;\r\n        this.anims = {}; // deprecated\r\n        this._currentAnimation = '';\r\n        this._animationActions = new Map();\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** setAction(name) is deprecated. Use animation.play(name) instead! */\r\n    setAction(name) {\r\n        console.warn('[enable3d] setAction(name) is deprecated. Use animation.play(name) instead!');\r\n        this.animationPlay(name);\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n    get animation() {\r\n        return {\r\n            current: this._currentAnimation,\r\n            add: (key, animation) => this.animationAdd(key, animation),\r\n            play: (name, transitionDuration = 500, loop = true) => this.animationPlay(name, transitionDuration, loop),\r\n            mixer: this.animationMixer\r\n        };\r\n    }\r\n    set animationMixer(animationMixer) {\r\n        this._animationMixer = animationMixer;\r\n    }\r\n    get animationMixer() {\r\n        if (!this._animationMixer)\r\n            this._animationMixer = new index_1.AnimationMixer(this);\r\n        return this._animationMixer;\r\n    }\r\n    animationAdd(key, animation) {\r\n        this._animationActions.set(key, this.animationMixer.clipAction(animation));\r\n    }\r\n    animationPlay(name, transitionDuration = 500, loop = true) {\r\n        const next = this._animationActions.get(name);\r\n        const current = this._animationActions.get(this._currentAnimation);\r\n        if (next) {\r\n            next.reset();\r\n            if (current) {\r\n                next.crossFadeFrom(current, transitionDuration / 1000, true);\r\n                next.clampWhenFinished = true;\r\n            }\r\n            if (!loop)\r\n                next.setLoop(index_1.LoopOnce, 0);\r\n            next.play();\r\n        }\r\n        this._currentAnimation = name;\r\n    }\r\n}\r\nexports.ExtendedObject3D = ExtendedObject3D;\r\nexports.default = ExtendedObject3D;\r\n//# sourceMappingURL=extendedObject3D.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nconst extendedMesh_1 = require(\"./extendedMesh\");\r\nconst logger_1 = require(\"./logger\");\r\nconst defaultMaterial_1 = require(\"./defaultMaterial\");\r\nclass Factories {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.isHeadless = scene === 'headless' ? true : false;\r\n        this.defaultMaterial = new defaultMaterial_1.default();\r\n    }\r\n    get make() {\r\n        return {\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.makePlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.makeBox(boxConfig, materialConfig),\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.makeSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.makeCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.makeCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.makeTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.makeExtrude(extrudeConfig, materialConfig)\r\n        };\r\n    }\r\n    get add() {\r\n        return {\r\n            // effectComposer: () => this.addEffectComposer(),\r\n            mesh: (mesh) => this.addMesh(mesh),\r\n            // group: (...children) => this.addGroup(children),\r\n            existing: (object) => this.addExisting(object),\r\n            //  Geometry\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.addPlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.addBox(boxConfig, materialConfig),\r\n            ground: (groundConfig, materialConfig = {}) => this.addGround(groundConfig, materialConfig),\r\n            //...\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.addSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.addCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.addCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.addTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.addExtrude(extrudeConfig, materialConfig),\r\n            //...\r\n            material: (materialConfig = {}) => this.addMaterial(materialConfig)\r\n        };\r\n    }\r\n    addExisting(...object) {\r\n        if (this.scene === 'headless')\r\n            return;\r\n        this.scene.add(...object);\r\n    }\r\n    addMesh(mesh) {\r\n        if (Array.isArray(mesh)) {\r\n            for (let i = 0; i < mesh.length; i++) {\r\n                this.addExisting(mesh[i]);\r\n            }\r\n        }\r\n        else {\r\n            this.addExisting(mesh);\r\n        }\r\n        return this;\r\n    }\r\n    createMesh(geometry, material, position) {\r\n        const { x = 0, y = 0, z = 0 } = position;\r\n        let obj;\r\n        switch (!Array.isArray(material) && material.type) {\r\n            case 'LineBasicMaterial':\r\n                obj = new index_1.Line(geometry, material);\r\n                break;\r\n            case 'PointsMaterial':\r\n                obj = new index_1.Points(geometry, material);\r\n                break;\r\n            default:\r\n                obj = new extendedMesh_1.ExtendedMesh(geometry, material);\r\n                break;\r\n        }\r\n        obj.position.set(x, y, z);\r\n        obj.castShadow = obj.receiveShadow = true;\r\n        return obj;\r\n    }\r\n    makeExtrude(extrudeConfig, materialConfig) {\r\n        const { x, y, z, name, shape, autoCenter = true, breakable = false } = extrudeConfig, rest = __rest(extrudeConfig\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        , [\"x\", \"y\", \"z\", \"name\", \"shape\", \"autoCenter\", \"breakable\"]);\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        const { depth = 1, bevelEnabled = false } = rest;\r\n        const geometry = new index_1.ExtrudeBufferGeometry(shape, Object.assign({ depth, bevelEnabled }, rest));\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        // auto adjust the center for custom shapes\r\n        if (autoCenter)\r\n            mesh.geometry.center();\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'extrude';\r\n        return mesh;\r\n    }\r\n    addExtrude(extrudeConfig, materialConfig = {}) {\r\n        const obj = this.makeExtrude(extrudeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makePlane(planeConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = planeConfig, rest = __rest(planeConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new index_1.PlaneBufferGeometry(rest.width || 1, rest.height || 1, rest.widthSegments || 1, rest.heightSegments || 1);\r\n        const material = this.addMaterial(materialConfig);\r\n        material.side = index_1.DoubleSide;\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'plane';\r\n        return mesh;\r\n    }\r\n    addPlane(planeConfig, materialConfig) {\r\n        const obj = this.makePlane(planeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeSphere(sphereConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = sphereConfig, rest = __rest(sphereConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new index_1.SphereBufferGeometry(rest.radius || 1, rest.widthSegments || 16, rest.heightSegments || 12, rest.phiStart || undefined, rest.phiLength || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'sphere';\r\n        return mesh;\r\n    }\r\n    addSphere(sphereConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeSphere(sphereConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeBox(boxConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = boxConfig, rest = __rest(boxConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new index_1.BoxBufferGeometry(rest.width || 1, rest.height || 1, rest.depth || 1, rest.widthSegments || undefined, rest.heightSegments || undefined, rest.depthSegments || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'box';\r\n        return mesh;\r\n    }\r\n    addBox(boxConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeBox(boxConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addGround(groundConfig, materialConfig = {}) {\r\n        const obj = this.makeBox(groundConfig, materialConfig);\r\n        obj.rotateX(index_1.MathUtils.degToRad(90));\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = cylinderConfig, rest = __rest(cylinderConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new index_1.CylinderBufferGeometry(rest.radiusTop || 1, rest.radiusBottom || 1, rest.height || 1, rest.radiusSegments || undefined, rest.heightSegments || undefined, rest.openEnded || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cylinder';\r\n        return mesh;\r\n    }\r\n    addCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCylinder(cylinderConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCone(coneConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = coneConfig, rest = __rest(coneConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new index_1.ConeBufferGeometry(rest.radius || 1, rest.height || 1, rest.radiusSegments || 8, rest.heightSegments || 1, rest.openEnded || false, rest.thetaStart || 0, rest.thetaLength || 2 * Math.PI);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cone';\r\n        return mesh;\r\n    }\r\n    addCone(coneConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCone(coneConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    // https://threejs.org/docs/index.html#api/en/geometries/TorusBufferGeometry\r\n    makeTorus(torusConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = torusConfig, rest = __rest(torusConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new index_1.TorusBufferGeometry(rest.radius || undefined, rest.tube || undefined, rest.radialSegments || undefined, rest.tubularSegments || undefined, rest.arc || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'torus';\r\n        return mesh;\r\n    }\r\n    addTorus(torusConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeTorus(torusConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addMaterial(materialConfig = {}) {\r\n        const type = Object.keys(materialConfig)[0];\r\n        let material;\r\n        // if (type) {\r\n        //   const { map } = materialConfig[type]\r\n        //   if (typeof map === 'string') materialConfig[type].map = this.loadTexture(map)\r\n        // }\r\n        // always share the same material in headless mode to save memory\r\n        if (this.scene === 'headless')\r\n            return this.defaultMaterial.get();\r\n        switch (type) {\r\n            case 'basic':\r\n                material = new index_1.MeshBasicMaterial(materialConfig.basic);\r\n                break;\r\n            case 'normal':\r\n                material = new index_1.MeshNormalMaterial(materialConfig.normal);\r\n                break;\r\n            case 'standard':\r\n                material = new index_1.MeshStandardMaterial(materialConfig.standard);\r\n                break;\r\n            case 'lambert':\r\n                material = new index_1.MeshLambertMaterial(materialConfig.lambert);\r\n                break;\r\n            case 'phong':\r\n                material = new index_1.MeshPhongMaterial(materialConfig.phong);\r\n                break;\r\n            case 'physical':\r\n                if (typeof materialConfig.physical !== 'undefined') {\r\n                    material = new index_1.MeshPhysicalMaterial(materialConfig.physical);\r\n                }\r\n                else {\r\n                    logger_1.default('You need to pass parameters to the physical material. (Fallback to default material)');\r\n                    material = this.defaultMaterial.get();\r\n                }\r\n                break;\r\n            case 'toon':\r\n                material = new index_1.MeshToonMaterial(materialConfig.toon);\r\n                break;\r\n            case 'line':\r\n                material = new index_1.LineBasicMaterial(materialConfig.line);\r\n                break;\r\n            case 'points':\r\n                material = new index_1.PointsMaterial(materialConfig.points);\r\n                break;\r\n            case 'custom':\r\n                material = materialConfig.custom || this.defaultMaterial.get();\r\n                break;\r\n            default:\r\n                material = this.defaultMaterial.get();\r\n                break;\r\n        }\r\n        return material;\r\n    }\r\n}\r\nexports.default = Factories;\r\n//# sourceMappingURL=factories.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst logger = (msg) => {\r\n    console.error(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\r\n};\r\nexports.default = logger;\r\n//# sourceMappingURL=logger.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst eventemitter3_1 = require(\"eventemitter3\");\r\nconst index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nclass PhysicsBody {\r\n    constructor(physics, ammo) {\r\n        this.physics = physics;\r\n        this.ammo = ammo;\r\n        this.ignoreScale = false;\r\n        this.isSoftBody = false;\r\n        this.offset = { x: 0, y: 0, z: 0 };\r\n        this.errors = [];\r\n        this.checkCollisions = false;\r\n        this.breakable = false;\r\n        this.didUpdate = false;\r\n        /** Skip syncing the mesh to the physics body. */\r\n        this.skipUpdate = false;\r\n        this._emitUpdateEvents = false;\r\n        this._needUpdate = false;\r\n        this.tmpEuler = new index_1.Euler();\r\n        this.tmpQuaternion = new index_1.Quaternion();\r\n        this.tmpBtVector3 = new Ammo.btVector3();\r\n        this.tmpBtVector3_1 = new Ammo.btVector3();\r\n        this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1);\r\n        this.eventEmitter = new eventemitter3_1.EventEmitter();\r\n        // @ts-ignore\r\n        this.name = ammo.name;\r\n    }\r\n    /**\r\n     * Don't call this manually! Do physics.destroy() instead.\r\n     */\r\n    destructor() {\r\n        // remove events\r\n        if (this.eventEmitter)\r\n            this.eventEmitter.removeAllListeners();\r\n        // destroy tmp ammo values\r\n        Ammo.destroy(this.tmpBtVector3);\r\n        Ammo.destroy(this.tmpBtVector3_1);\r\n        Ammo.destroy(this.tmpBtQuaternion);\r\n        // destory collision shape\r\n        Ammo.destroy(this.ammo.getCollisionShape());\r\n        // destroy body\r\n        Ammo.destroy(this.ammo);\r\n    }\r\n    setupEventEmitter() {\r\n        if (typeof this.eventEmitter === 'undefined')\r\n            this.eventEmitter = new eventemitter3_1.EventEmitter();\r\n    }\r\n    get needUpdate() {\r\n        return this._needUpdate;\r\n    }\r\n    set needUpdate(need) {\r\n        if (!need && this._needUpdate)\r\n            this.didUpdate = true;\r\n        this._needUpdate = need;\r\n    }\r\n    onUpdateEvent(updateCallback, once = false) {\r\n        this.setupEventEmitter();\r\n        this._emitUpdateEvents = true;\r\n        if (once)\r\n            this.eventEmitter.once('update', () => {\r\n                updateCallback();\r\n            });\r\n        else\r\n            this.eventEmitter.on('update', () => {\r\n                updateCallback();\r\n            });\r\n    }\r\n    get on() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback),\r\n            collision: (collisionCallback) => this.onCollision(collisionCallback)\r\n        };\r\n    }\r\n    get once() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback, true)\r\n        };\r\n    }\r\n    onCollision(collisionCallback) {\r\n        this.checkCollisions = true;\r\n        this.physics.collisionEvents.on('collision', (data) => {\r\n            const { bodies, event } = data;\r\n            if (bodies[0].name === this.name)\r\n                collisionCallback(bodies[1], event);\r\n            else if (bodies[1].name === this.name)\r\n                collisionCallback(bodies[0], event);\r\n        });\r\n    }\r\n    /** You have to call transform() before you can get or set the body's position or rotation. (for headless mode only) */\r\n    transform() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().getWorldTransform(t);\r\n    }\r\n    /** You have to call refresh() after you set the position or rotation of the body. (for headless mode only) */\r\n    refresh() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().setWorldTransform(t);\r\n    }\r\n    /** Set the rotation in radians. (for headless mode only) */\r\n    setRotation(x, y, z) {\r\n        const e = this.tmpEuler.set(x, y, z);\r\n        const q = this.tmpQuaternion.set(0, 0, 0, 1);\r\n        q.setFromEuler(e);\r\n        this.tmpBtQuaternion.setValue(0, 0, 0, 1);\r\n        const ammoQuat = this.tmpBtQuaternion;\r\n        ammoQuat.setValue(q.x, q.y, q.z, q.w);\r\n        const t = this.physics.worldTransform;\r\n        t.setRotation(ammoQuat);\r\n    }\r\n    /** Get the rotation in radians. (for headless mode only) */\r\n    get rotation() {\r\n        // https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n        let x, y, z;\r\n        const t = this.physics.worldTransform;\r\n        const ammoQuat = t.getRotation();\r\n        let q1 = this.tmpQuaternion.set(ammoQuat.x(), ammoQuat.y(), ammoQuat.z(), ammoQuat.w());\r\n        if (q1.w > 1)\r\n            q1 = q1.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalized\r\n        const angle = 2 * Math.acos(q1.w);\r\n        const s = Math.sqrt(1 - q1.w * q1.w); // assuming quaternion normalized then w is less than 1, so term always positive.\r\n        if (s < 0.001) {\r\n            // test to avoid divide by zero, s is always positive due to sqrt\r\n            // if s close to zero then direction of axis not important\r\n            x = q1.x; // if it is important that axis is normalized then replace with x=1; y=z=0;\r\n            y = q1.y;\r\n            z = q1.z;\r\n        }\r\n        else {\r\n            x = q1.x / s; // normalized axis\r\n            y = q1.y / s;\r\n            z = q1.z / s;\r\n        }\r\n        return { x: x * angle, y: y * angle, z: z * angle };\r\n    }\r\n    /** Get the quaternion. (for headless mode only) */\r\n    get quaternion() {\r\n        const t = this.physics.worldTransform;\r\n        const q = t.getRotation();\r\n        return { x: q.x(), y: q.y(), z: q.z(), w: q.w() };\r\n    }\r\n    /** Set position. (for headless mode only) */\r\n    setPosition(x, y, z) {\r\n        const t = this.physics.worldTransform;\r\n        t.getOrigin().setValue(x, y, z);\r\n    }\r\n    /** Get position. (for headless mode only) */\r\n    get position() {\r\n        const t = this.physics.worldTransform;\r\n        return { x: t.getOrigin().x(), y: t.getOrigin().y(), z: t.getOrigin().z() };\r\n    }\r\n    get velocity() {\r\n        return {\r\n            x: this.ammo.getLinearVelocity().x(),\r\n            y: this.ammo.getLinearVelocity().y(),\r\n            z: this.ammo.getLinearVelocity().z()\r\n        };\r\n    }\r\n    get angularVelocity() {\r\n        return {\r\n            x: this.ammo.getAngularVelocity().x(),\r\n            y: this.ammo.getAngularVelocity().y(),\r\n            z: this.ammo.getAngularVelocity().z()\r\n        };\r\n    }\r\n    setVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.velocity.y, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, value, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, this.velocity.y, value);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.angularVelocity.y, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, value, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, this.angularVelocity.y, value);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    // Apply Force methods\r\n    applyForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceX(value) {\r\n        this.tmpBtVector3.setValue(value, 0, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceY(value) {\r\n        this.tmpBtVector3.setValue(0, value, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceZ(value) {\r\n        this.tmpBtVector3.setValue(0, 0, value);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    // Apply \"Something\" Methods\r\n    applyCentralForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralForce(this.tmpBtVector3);\r\n    }\r\n    applyCentralImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyCentralLocalForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralLocalForce(this.tmpBtVector3);\r\n    }\r\n    applyImpulse(impulse, relativePosition) {\r\n        this.tmpBtVector3.setValue(impulse.x || 0, impulse.y || 0, impulse.z || 0);\r\n        this.tmpBtVector3_1.setValue(relativePosition.x || 0, relativePosition.y || 0, relativePosition.z || 0);\r\n        this.ammo.applyImpulse(this.tmpBtVector3, this.tmpBtVector3_1);\r\n    }\r\n    applyLocalTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyLocalTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorqueImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorqueImpulse(this.tmpBtVector3);\r\n    }\r\n    /**\r\n     * Add the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    // https://github.com/bulletphysics/bullet3/blob/aae8048722f2596f7e2bdd52d2a1dcb52a218f2b/src/BulletCollision/CollisionDispatch/btCollisionObject.h#L128\r\n    setCollisionFlags(value) {\r\n        this.ammo.setCollisionFlags(value);\r\n    }\r\n    /**\r\n     * Get the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    getCollisionFlags() {\r\n        return this.ammo.getCollisionFlags();\r\n    }\r\n    /**\r\n     * Set the restitution (same as bounciness)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setRestitution(value) {\r\n        this.ammo.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the bounciness (same as restitution)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setBounciness(value) {\r\n        this.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the friction\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setFriction(value) {\r\n        this.ammo.setFriction(value);\r\n    }\r\n    /**\r\n     * Set the linear and angular damping\r\n     * @param linear A number from 0 to 1.\r\n     * @param angular A number from 0 to 1.\r\n     */\r\n    setDamping(linear, angular) {\r\n        this.ammo.setDamping(linear, angular);\r\n    }\r\n    /** Set per body gravity */\r\n    setGravity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setGravity(this.tmpBtVector3);\r\n    }\r\n    setLinearFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearFactor(this.tmpBtVector3);\r\n    }\r\n    setAngularFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularFactor(this.tmpBtVector3);\r\n    }\r\n    setCcdMotionThreshold(threshold) {\r\n        this.ammo.setCcdMotionThreshold(threshold);\r\n    }\r\n    setCcdSweptSphereRadius(radius) {\r\n        this.ammo.setCcdSweptSphereRadius(radius);\r\n    }\r\n}\r\nexports.default = PhysicsBody;\r\n//# sourceMappingURL=physicsBody.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PhysicsLoader = void 0;\r\nconst wasmLoader_1 = require(\"./wasmLoader\");\r\nconst PhysicsLoader = (path, callback) => {\r\n    if (typeof window !== 'undefined')\r\n        window.__loadPhysics = true;\r\n    wasmLoader_1.default(path, () => {\r\n        Ammo().then(() => {\r\n            callback();\r\n        });\r\n    });\r\n};\r\nexports.PhysicsLoader = PhysicsLoader;\r\n//# sourceMappingURL=physicsLoader.js.map","\"use strict\";\r\n/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Group = exports.Points = exports.Line = exports.Material = exports.Mesh = exports.Object3D = exports.AnimationAction = exports.AnimationClip = exports.AnimationMixer = exports.ExtendedMesh = exports.ExtendedObject3D = void 0;\r\nconst extendedObject3D_1 = require(\"./extendedObject3D\");\r\nObject.defineProperty(exports, \"ExtendedObject3D\", { enumerable: true, get: function () { return extendedObject3D_1.ExtendedObject3D; } });\r\nconst extendedMesh_1 = require(\"./extendedMesh\");\r\nObject.defineProperty(exports, \"ExtendedMesh\", { enumerable: true, get: function () { return extendedMesh_1.ExtendedMesh; } });\r\n// TODO fix this export\r\n// export { ThirdPersonControls } from '../misc/thirdPersonControls'\r\nvar index_1 = require(\"@enable3d/three-wrapper/dist/index\");\r\nObject.defineProperty(exports, \"AnimationMixer\", { enumerable: true, get: function () { return index_1.AnimationMixer; } });\r\nObject.defineProperty(exports, \"AnimationClip\", { enumerable: true, get: function () { return index_1.AnimationClip; } });\r\nObject.defineProperty(exports, \"AnimationAction\", { enumerable: true, get: function () { return index_1.AnimationAction; } });\r\nObject.defineProperty(exports, \"Object3D\", { enumerable: true, get: function () { return index_1.Object3D; } });\r\nObject.defineProperty(exports, \"Mesh\", { enumerable: true, get: function () { return index_1.Mesh; } });\r\nObject.defineProperty(exports, \"Material\", { enumerable: true, get: function () { return index_1.Material; } });\r\nObject.defineProperty(exports, \"Line\", { enumerable: true, get: function () { return index_1.Line; } });\r\nObject.defineProperty(exports, \"Points\", { enumerable: true, get: function () { return index_1.Points; } });\r\nObject.defineProperty(exports, \"Group\", { enumerable: true, get: function () { return index_1.Group; } });\r\n//# sourceMappingURL=types.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Inspired by https://github.com/playcanvas/engine/blob/master/examples/wasm-loader.js\r\nconst wasmSupported = (() => {\r\n    try {\r\n        if (typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function') {\r\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\r\n            if (module instanceof WebAssembly.Module)\r\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\r\n        }\r\n    }\r\n    catch (e) { }\r\n    return false;\r\n})();\r\nconst loadScriptAsync = (url, doneCallback) => {\r\n    var tag = document.createElement('script');\r\n    tag.onload = () => {\r\n        doneCallback();\r\n    };\r\n    tag.onerror = () => {\r\n        throw new Error('failed to load ' + url);\r\n    };\r\n    tag.async = true;\r\n    tag.src = url;\r\n    document.head.appendChild(tag);\r\n};\r\nconst loadAmmoModule = (path, doneCallback) => {\r\n    // console.log(wasmSupported ? 'WebAssembly is supported' : 'WebAssembly is not supported')\r\n    if (wasmSupported)\r\n        loadScriptAsync(`${path}/ammo.wasm.js`, () => doneCallback());\r\n    else\r\n        loadScriptAsync(`${path}/ammo.js`, () => doneCallback());\r\n};\r\nexports.default = loadAmmoModule;\r\n//# sourceMappingURL=wasmLoader.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE__428__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\n// Inspired by https://github.com/donmccurdy/aframe-physics-system/blob/master/src/components/ammo-constraint.js\r\n\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\nimport { XYZ } from '@enable3d/common/dist/types'\r\n\r\nexport default class Constraints {\r\n  public tmpBtVector3 = new Ammo.btVector3()\r\n\r\n  constructor(public worldTransform: Ammo.btTransform, public physicsWorld: Ammo.btDiscreteDynamicsWorld) {}\r\n\r\n  private toAmmoV3(v?: XYZ, d: number = 0) {\r\n    return new Ammo.btVector3(\r\n      typeof v?.x !== 'undefined' ? v.x : d,\r\n      typeof v?.y !== 'undefined' ? v.y : d,\r\n      typeof v?.z !== 'undefined' ? v.z : d\r\n    )\r\n  }\r\n\r\n  public get addConstraints() {\r\n    return {\r\n      lock: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.lock(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      fixed: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.fixed(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      pointToPoint: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.pointToPoint(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      hinge: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n          axisA?: XYZ\r\n          axisB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.hinge(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      slider: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA?: XYZ\r\n          frameB?: XYZ\r\n          linearLowerLimit?: number\r\n          linearUpperLimit?: number\r\n          angularLowerLimit?: number\r\n          angularUpperLimit?: number\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.slider(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      spring: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          stiffness?: number\r\n          damping?: number\r\n          angularLock?: boolean\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n          enableSpring?: boolean\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.spring(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      coneTwist: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA: XYZ\r\n          frameB: XYZ\r\n        } = { frameA: {}, frameB: {} },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.coneTwist(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      dof: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config?: {\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.dof(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies)\r\n    }\r\n  }\r\n\r\n  private getTransform(\r\n    bodyA: Ammo.btRigidBody,\r\n    bodyB: Ammo.btRigidBody,\r\n    offset: { x: number; y: number; z: number } = { x: 0, y: 0, z: 0 },\r\n    center: boolean = false\r\n  ) {\r\n    // @ts-ignore\r\n    offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const centerVector = (v1: Ammo.btVector3, v2: Ammo.btVector3) => {\r\n      var dx = (v1.x() - v2.x()) / 2 + offset.x\r\n      var dy = (v1.y() - v2.y()) / 2 + offset.y\r\n      var dz = (v1.z() - v2.z()) / 2 + offset.z\r\n      return new Ammo.btVector3(dx, dy, dz)\r\n    }\r\n\r\n    const transformB = new Ammo.btTransform()\r\n    transformB.setIdentity()\r\n\r\n    if (!center) {\r\n      // offset\r\n      transformB.setOrigin(new Ammo.btVector3(offset.x, offset.y, offset.z))\r\n\r\n      const transformA = bodyA\r\n        .getCenterOfMassTransform()\r\n        .inverse()\r\n        .op_mul(bodyB.getWorldTransform())\r\n        .op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    } else {\r\n      const center = centerVector(bodyA.getWorldTransform().getOrigin(), bodyB.getWorldTransform().getOrigin())\r\n\r\n      const transformB = new Ammo.btTransform()\r\n      transformB.setIdentity()\r\n      transformB.setOrigin(center)\r\n\r\n      const transformA = bodyA\r\n        .getCenterOfMassTransform()\r\n        .inverse()\r\n        .op_mul(bodyB.getWorldTransform())\r\n\r\n      transformA.op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    }\r\n  }\r\n\r\n  private lock(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const zero = { x: 0, y: 0, z: 0 }\r\n    return this.dof(\r\n      bodyA,\r\n      bodyB,\r\n      { angularLowerLimit: zero, angularUpperLimit: zero },\r\n      disableCollisionsBetweenLinkedBodies\r\n    )\r\n  }\r\n\r\n  private fixed(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n    transform.transformA.setRotation(bodyA.ammo.getWorldTransform().getRotation())\r\n    transform.transformB.setRotation(bodyB.ammo.getWorldTransform().getRotation())\r\n    const constraint = new Ammo.btFixedConstraint(bodyA.ammo, bodyB.ammo, transform.transformA, transform.transformB)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private pointToPoint(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const constraint = new Ammo.btPoint2PointConstraint(bodyA.ammo, bodyB.ammo, pivotV3, targetPivotV3)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private hinge(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n      axisA?: XYZ\r\n      axisB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB, axisA, axisB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const axisV3 = new Ammo.btVector3(axisA?.x || 0, axisA?.y || 0, axisA?.z || 0)\r\n    const targetAxisV3 = new Ammo.btVector3(axisB?.x || 0, axisB?.y || 0, axisB?.z || 0)\r\n    const constraint = new Ammo.btHingeConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      pivotV3,\r\n      targetPivotV3,\r\n      axisV3,\r\n      targetAxisV3,\r\n      true\r\n    )\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  // https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=9&t=12690&p=42152&hilit=btSliderConstraint#p42152\r\n  private slider(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      frameA?: XYZ\r\n      frameB?: XYZ\r\n      linearLowerLimit?: number\r\n      linearUpperLimit?: number\r\n      angularLowerLimit?: number\r\n      angularUpperLimit?: number\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const {\r\n      frameA = {},\r\n      frameB = {},\r\n      linearLowerLimit: lll = 0,\r\n      linearUpperLimit: lul = 0,\r\n      angularLowerLimit: all = 0,\r\n      angularUpperLimit: aul = 0\r\n    } = config\r\n\r\n    const rotationA = transform.transformA.getRotation()\r\n    rotationA.setEulerZYX(frameA.x || 0, frameA.y || 0, frameA.z || 0)\r\n    transform.transformA.setRotation(rotationA)\r\n\r\n    const rotationB = transform.transformB.getRotation()\r\n    rotationB.setEulerZYX(frameB.x || 0, frameB.y || 0, frameB.z || 0)\r\n    transform.transformB.setRotation(rotationB)\r\n\r\n    const constraint = new Ammo.btSliderConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    constraint.setLowerLinLimit(lll)\r\n    constraint.setUpperLinLimit(lul)\r\n    constraint.setLowerAngLimit(all)\r\n    constraint.setUpperAngLimit(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private spring(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      stiffness?: number\r\n      damping?: number\r\n      angularLock?: boolean\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n      enableSpring?: boolean\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const {\r\n      stiffness = 50,\r\n      damping = 0.01,\r\n      angularLock = false,\r\n      linearLowerLimit: lll = {},\r\n      linearUpperLimit: lul = {},\r\n      angularLowerLimit: all = {},\r\n      angularUpperLimit: aul = {},\r\n      offset = {},\r\n      center = false,\r\n      enableSpring = true\r\n    } = config\r\n\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    this.tmpBtVector3.setValue(lll.x || 0, lll.y || 0, lll.z || 0)\r\n    constraint.setLinearLowerLimit(this.tmpBtVector3)\r\n\r\n    this.tmpBtVector3.setValue(lul.x || 0, lul.y || 0, lul.z || 0)\r\n    constraint.setLinearUpperLimit(this.tmpBtVector3)\r\n\r\n    if (angularLock) {\r\n      this.tmpBtVector3.setValue(0, 0, 0)\r\n      constraint.setAngularLowerLimit(this.tmpBtVector3)\r\n      constraint.setAngularUpperLimit(this.tmpBtVector3)\r\n    } else {\r\n      console.log(all, aul)\r\n      constraint.setAngularLowerLimit(this.toAmmoV3(all, -Math.PI))\r\n      constraint.setAngularUpperLimit(this.toAmmoV3(aul, Math.PI))\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      constraint.enableSpring(i, enableSpring)\r\n      constraint.setStiffness(i, stiffness)\r\n      constraint.setDamping(i, damping)\r\n    }\r\n\r\n    // I have no idea what setEquilibriumPoint does :/\r\n    // constraint.setEquilibriumPoint()\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private coneTwist(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: { frameA: XYZ; frameB: XYZ },\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { frameA, frameB } = config\r\n\r\n    const rbAFrame = new Ammo.btTransform()\r\n    rbAFrame.setIdentity()\r\n    rbAFrame.getOrigin().setValue(frameA?.x || 0, frameA?.y || 0, frameA?.z || 0)\r\n\r\n    const rbBFrame = new Ammo.btTransform()\r\n    rbBFrame.setIdentity()\r\n    rbBFrame.getOrigin().setValue(frameB?.x || 0, frameB?.y || 0, frameB?.z || 0)\r\n\r\n    const t = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const constraint = new Ammo.btConeTwistConstraint(bodyB.ammo, bodyA.ammo, rbAFrame, rbBFrame)\r\n\r\n    // does not work at all :/\r\n    // constraint.setLimit(-Math.PI / 50, Math.PI / 50)\r\n\r\n    constraint.setAngularOnly(true)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private dof(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { offset, center = false } = config\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n\r\n    const constraint = new Ammo.btGeneric6DofConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    const { linearLowerLimit, linearUpperLimit, angularLowerLimit, angularUpperLimit } = config\r\n\r\n    const lll = this.toAmmoV3(linearLowerLimit)\r\n    const lul = this.toAmmoV3(linearUpperLimit)\r\n    const all = this.toAmmoV3(angularLowerLimit, -Math.PI)\r\n    const aul = this.toAmmoV3(angularUpperLimit, Math.PI)\r\n\r\n    constraint.setLinearLowerLimit(lll)\r\n    constraint.setLinearUpperLimit(lul)\r\n    constraint.setAngularLowerLimit(all)\r\n    constraint.setAngularUpperLimit(aul)\r\n\r\n    Ammo.destroy(lll)\r\n    Ammo.destroy(lul)\r\n    Ammo.destroy(all)\r\n    Ammo.destroy(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n * (Includes latest three-to-ammo commit from August 6, 2020)\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2020 Kevin Lee; Project Url: https://github.com/InfiniteLee/three-to-ammo\r\n * @license      {@link https://github.com/InfiniteLee/three-to-ammo/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion, Box3, REVISION } from '@enable3d/three-wrapper/dist/index'\r\n;('use strict')\r\n/* global Ammo */\r\n\r\nexport const TYPE = {\r\n  BOX: 'box',\r\n  CYLINDER: 'cylinder',\r\n  SPHERE: 'sphere',\r\n  CAPSULE: 'capsule',\r\n  CONE: 'cone',\r\n  HULL: 'hull',\r\n  HACD: 'hacd', //Hierarchical Approximate Convex Decomposition\r\n  VHACD: 'vhacd', //Volumetric Hierarchical Approximate Convex Decomposition\r\n  MESH: 'mesh',\r\n  HEIGHTFIELD: 'heightfield'\r\n}\r\n\r\nexport const FIT = {\r\n  ALL: 'all', //A single shape is automatically sized to bound all meshes within the entity.\r\n  MANUAL: 'manual' //A single shape is sized manually. Requires halfExtents or sphereRadius.\r\n}\r\n\r\nexport const HEIGHTFIELD_DATA_TYPE = {\r\n  short: 'short',\r\n  float: 'float'\r\n}\r\n\r\nexport const createCollisionShapes = function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n  switch (options.type) {\r\n    case TYPE.BOX:\r\n      return [createBoxShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CYLINDER:\r\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CAPSULE:\r\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CONE:\r\n      return [createConeShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.SPHERE:\r\n      return [createSphereShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HULL:\r\n      return [createHullShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HACD:\r\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.VHACD:\r\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.MESH:\r\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)]\r\n    case TYPE.HEIGHTFIELD:\r\n      return [createHeightfieldTerrainShape(options)]\r\n    default:\r\n      console.warn(options.type + ' is not currently supported')\r\n      return []\r\n  }\r\n}\r\n\r\n//TODO: support gimpact (dynamic trimesh) and heightmap\r\n\r\nexport const createBoxShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.BOX\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCylinderShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CYLINDER\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCylinderShape(btHalfExtents)\r\n      case 'x':\r\n        return new Ammo.btCylinderShapeX(btHalfExtents)\r\n      case 'z':\r\n        return new Ammo.btCylinderShapeZ(btHalfExtents)\r\n    }\r\n    return null\r\n  })()\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCapsuleShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CAPSULE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createConeShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CONE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btConeShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createSphereShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.SPHERE\r\n  _setOptions(options)\r\n\r\n  let radius\r\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\r\n    radius = options.sphereRadius\r\n  } else {\r\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices))\r\n  }\r\n\r\n  const collisionShape = new Ammo.btSphereShape(radius)\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n\r\n  return collisionShape\r\n}\r\n\r\nexport const createHullShape = (function () {\r\n  const vertex = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, matrixWorld, options = {}) {\r\n    options.type = TYPE.HULL\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hull')\r\n      return null\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n\r\n    const btVertex = new Ammo.btVector3()\r\n    const originalHull = new Ammo.btConvexHullShape()\r\n    originalHull.setMargin(options.margin)\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    let vertexCount = 0\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n    }\r\n\r\n    const maxVertices = options.hullMaxVertices || 100000\r\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\r\n    if (vertexCount > maxVertices) {\r\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`)\r\n    }\r\n    const p = Math.min(1, maxVertices / vertexCount)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3\r\n        if (Math.random() <= p || isLastVertex) {\r\n          // always include the last vertex\r\n          vertex\r\n            .set(components[j], components[j + 1], components[j + 2])\r\n            .applyMatrix4(matrix)\r\n            .sub(center)\r\n          btVertex.setValue(vertex.x, vertex.y, vertex.z)\r\n          originalHull.addPoint(btVertex, isLastVertex) // recalc AABB only on last geometry\r\n        }\r\n      }\r\n    }\r\n\r\n    let collisionShape = originalHull\r\n    if (originalHull.getNumVertices() >= 100) {\r\n      //Bullet documentation says don't use convexHulls with 100 verts or more\r\n      const shapeHull = new Ammo.btShapeHull(originalHull)\r\n      shapeHull.buildHull(options.margin)\r\n      Ammo.destroy(originalHull)\r\n      collisionShape = new Ammo.btConvexHullShape(\r\n        Ammo.getPointer(shapeHull.getVertexPointer()),\r\n        shapeHull.numVertices()\r\n      )\r\n      Ammo.destroy(shapeHull) // btConvexHullShape makes a copy\r\n    }\r\n\r\n    Ammo.destroy(btVertex)\r\n\r\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.HACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('HACD')) {\r\n      console.warn(\r\n        'HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const hacd = new Ammo.HACD()\r\n    if (options.hasOwnProperty('compacityWeight')) hacd.SetCompacityWeight(options.compacityWeight)\r\n    if (options.hasOwnProperty('volumeWeight')) hacd.SetVolumeWeight(options.volumeWeight)\r\n    if (options.hasOwnProperty('nClusters')) hacd.SetNClusters(options.nClusters)\r\n    if (options.hasOwnProperty('nVerticesPerCH')) hacd.SetNVerticesPerCH(options.nVerticesPerCH)\r\n    if (options.hasOwnProperty('concavity')) hacd.SetConcavity(options.concavity)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n    hacd.SetPoints(points)\r\n    hacd.SetTriangles(triangles)\r\n    hacd.SetNPoints(vertexCount)\r\n    hacd.SetNTriangles(triCount)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n\r\n    hacd.Compute()\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nClusters = hacd.GetNClusters()\r\n\r\n    const shapes = []\r\n    for (let i = 0; i < nClusters; i++) {\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n      const nPoints = hacd.GetNPointsCH(i)\r\n      const nTriangles = hacd.GetNTrianglesCH(i)\r\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8)\r\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4)\r\n      hacd.GetCH(i, hullPoints, hullTriangles)\r\n\r\n      const pptr = hullPoints / 8\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0]\r\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1]\r\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2]\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createVHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.VHACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: vhacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('VHACD')) {\r\n      console.warn(\r\n        'VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const vhacd = new Ammo.VHACD()\r\n    const params = new Ammo.Parameters()\r\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\r\n    if (options.hasOwnProperty('resolution')) params.set_m_resolution(options.resolution)\r\n    if (options.hasOwnProperty('depth')) params.set_m_depth(options.depth)\r\n    if (options.hasOwnProperty('concavity')) params.set_m_concavity(options.concavity)\r\n    if (options.hasOwnProperty('planeDownsampling')) params.set_m_planeDownsampling(options.planeDownsampling)\r\n    if (options.hasOwnProperty('convexhullDownsampling'))\r\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling)\r\n    if (options.hasOwnProperty('alpha')) params.set_m_alpha(options.alpha)\r\n    if (options.hasOwnProperty('beta')) params.set_m_beta(options.beta)\r\n    if (options.hasOwnProperty('gamma')) params.set_m_gamma(options.gamma)\r\n    if (options.hasOwnProperty('pca')) params.set_m_pca(options.pca)\r\n    if (options.hasOwnProperty('mode')) params.set_m_mode(options.mode)\r\n    if (options.hasOwnProperty('maxNumVerticesPerCH')) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH)\r\n    if (options.hasOwnProperty('minVolumePerCH')) params.set_m_minVolumePerCH(options.minVolumePerCH)\r\n    if (options.hasOwnProperty('convexhullApproximation'))\r\n      params.set_m_convexhullApproximation(options.convexhullApproximation)\r\n    if (options.hasOwnProperty('oclAcceleration')) params.set_m_oclAcceleration(options.oclAcceleration)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params)\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nHulls = vhacd.GetNConvexHulls()\r\n\r\n    const shapes = []\r\n    const ch = new Ammo.ConvexHull()\r\n    for (let i = 0; i < nHulls; i++) {\r\n      vhacd.GetConvexHull(i, ch)\r\n      const nPoints = ch.get_m_nPoints()\r\n      const hullPoints = ch.get_m_points()\r\n\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = ch.get_m_points(pi * 3 + 0)\r\n        const py = ch.get_m_points(pi * 3 + 1)\r\n        const pz = ch.get_m_points(pi * 3 + 2)\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n    Ammo.destroy(ch)\r\n    Ammo.destroy(vhacd)\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createTriMeshShape = (function () {\r\n  const va = new Vector3()\r\n  const vb = new Vector3()\r\n  const vc = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.MESH\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: mesh')\r\n      return null\r\n    }\r\n\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    const bta = new Ammo.btVector3()\r\n    const btb = new Ammo.btVector3()\r\n    const btc = new Ammo.btVector3()\r\n    const triMesh = new Ammo.btTriangleMesh(true, false)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      const index = indexes[i] ? indexes[i] : null\r\n      matrix.fromArray(matrices[i])\r\n      if (index) {\r\n        for (let j = 0; j < index.length; j += 3) {\r\n          const ai = index[j] * 3\r\n          const bi = index[j + 1] * 3\r\n          const ci = index[j + 2] * 3\r\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix)\r\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix)\r\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length; j += 9) {\r\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix)\r\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix)\r\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    triMesh.setScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    // MOD (yandeu): Use btConvexTriangleMeshShape for concave shapes\r\n    let collisionShape\r\n    if (options.concave) collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n    else collisionShape = new Ammo.btConvexTriangleMeshShape(triMesh, true)\r\n\r\n    // const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n\r\n    collisionShape.resources = [triMesh]\r\n\r\n    Ammo.destroy(bta)\r\n    Ammo.destroy(btb)\r\n    Ammo.destroy(btc)\r\n\r\n    _finishCollisionShape(collisionShape, options)\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHeightfieldTerrainShape = function (options = {}) {\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    console.warn('cannot use fit: all with type: heightfield')\r\n    return null\r\n  }\r\n  const heightfieldDistance = options.heightfieldDistance || 1\r\n  const heightfieldData = options.heightfieldData || []\r\n  const heightScale = options.heightScale || 0\r\n  const upAxis = options.hasOwnProperty('upAxis') ? options.upAxis : 1 // x = 0; y = 1; z = 2\r\n  const hdt = (() => {\r\n    switch (options.heightDataType) {\r\n      case 'short':\r\n        return Ammo.PHY_SHORT\r\n      case 'float':\r\n        return Ammo.PHY_FLOAT\r\n      default:\r\n        return Ammo.PHY_FLOAT\r\n    }\r\n  })()\r\n  const flipQuadEdges = options.hasOwnProperty('flipQuadEdges') ? options.flipQuadEdges : true\r\n\r\n  const heightStickLength = heightfieldData.length\r\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0\r\n\r\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4)\r\n  const ptr = data / 4\r\n\r\n  let minHeight = Number.POSITIVE_INFINITY\r\n  let maxHeight = Number.NEGATIVE_INFINITY\r\n  let index = 0\r\n  for (let l = 0; l < heightStickLength; l++) {\r\n    for (let w = 0; w < heightStickWidth; w++) {\r\n      const height = heightfieldData[l][w]\r\n      Ammo.HEAPF32[ptr + index] = height\r\n      index++\r\n      minHeight = Math.min(minHeight, height)\r\n      maxHeight = Math.max(maxHeight, height)\r\n    }\r\n  }\r\n\r\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\r\n    heightStickWidth,\r\n    heightStickLength,\r\n    data,\r\n    heightScale,\r\n    minHeight,\r\n    maxHeight,\r\n    upAxis,\r\n    hdt,\r\n    flipQuadEdges\r\n  )\r\n\r\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance)\r\n  collisionShape.setLocalScaling(scale)\r\n  Ammo.destroy(scale)\r\n\r\n  collisionShape.heightfieldData = data\r\n\r\n  _finishCollisionShape(collisionShape, options)\r\n  return collisionShape\r\n}\r\n\r\nfunction _setOptions(options) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  // we only keep type and margin\r\n  options.type = options.type || TYPE.HULL\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  return\r\n\r\n  options.fit = options.hasOwnProperty('fit') ? options.fit : FIT.ALL\r\n  options.type = options.type || TYPE.HULL\r\n  options.minHalfExtent = options.hasOwnProperty('minHalfExtent') ? options.minHalfExtent : 0\r\n  options.maxHalfExtent = options.hasOwnProperty('maxHalfExtent') ? options.maxHalfExtent : Number.POSITIVE_INFINITY\r\n  options.cylinderAxis = options.cylinderAxis || 'y'\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  options.includeInvisible = options.hasOwnProperty('includeInvisible') ? options.includeInvisible : false\r\n\r\n  if (!options.offset) {\r\n    options.offset = new Vector3()\r\n  }\r\n\r\n  if (!options.orientation) {\r\n    options.orientation = new Quaternion()\r\n  }\r\n}\r\n\r\nconst _finishCollisionShape = function (collisionShape, options, scale) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  return\r\n\r\n  collisionShape.type = options.type\r\n  collisionShape.setMargin(options.margin)\r\n  collisionShape.destroy = () => {\r\n    for (let res of collisionShape.resources || []) {\r\n      Ammo.destroy(res)\r\n    }\r\n    if (collisionShape.heightfieldData) {\r\n      Ammo._free(collisionShape.heightfieldData)\r\n    }\r\n    Ammo.destroy(collisionShape)\r\n  }\r\n\r\n  const localTransform = new Ammo.btTransform()\r\n  const rotation = new Ammo.btQuaternion()\r\n  localTransform.setIdentity()\r\n\r\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z)\r\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w)\r\n\r\n  localTransform.setRotation(rotation)\r\n  Ammo.destroy(rotation)\r\n\r\n  if (scale) {\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n  }\r\n\r\n  collisionShape.localTransform = localTransform\r\n}\r\n\r\nexport const iterateGeometries = (function () {\r\n  const inverse = new Matrix4()\r\n  return function (root, options, cb) {\r\n    // MOD (yandeu): Update to three.js r123\r\n    // compatibility fix for three.js >= r123 (Dezember 2020)\r\n    if (parseInt(REVISION) >= 123) inverse.copy(root.matrixWorld).invert()\r\n    else inverse.getInverse(root.matrixWorld)\r\n\r\n    const scale = new Vector3()\r\n    scale.setFromMatrixScale(root.matrixWorld)\r\n    root.traverse(mesh => {\r\n      const transform = new Matrix4()\r\n      if (\r\n        mesh.isMesh &&\r\n        // MOD (yandeu): No need to check if name is 'Sky'\r\n        // mesh.name !== 'Sky' &&\r\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\r\n      ) {\r\n        if (mesh === root) {\r\n          transform.identity()\r\n        } else {\r\n          mesh.updateWorldMatrix(true)\r\n          transform.multiplyMatrices(inverse, mesh.matrixWorld)\r\n        }\r\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\r\n        // things by the identity matrix\r\n        cb(\r\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\r\n          transform.elements,\r\n          mesh.geometry.index ? mesh.geometry.index.array : null\r\n        )\r\n      }\r\n    })\r\n  }\r\n})()\r\n\r\nconst _computeScale = (function () {\r\n  const matrix = new Matrix4()\r\n  return function (matrixWorld, options = {}) {\r\n    const scale = new Vector3(1, 1, 1)\r\n    if (options.fit === FIT.ALL) {\r\n      matrix.fromArray(matrixWorld)\r\n      scale.setFromMatrixScale(matrix)\r\n    }\r\n    return scale\r\n  }\r\n})()\r\n\r\nconst _computeRadius = (function () {\r\n  const center = new Vector3()\r\n  return function (vertices, matrices, bounds) {\r\n    let maxRadiusSq = 0\r\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center)\r\n\r\n    _iterateVertices(vertices, matrices, v => {\r\n      const dx = cx - v.x\r\n      const dy = cy - v.y\r\n      const dz = cz - v.z\r\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz)\r\n    })\r\n    return Math.sqrt(maxRadiusSq)\r\n  }\r\n})()\r\n\r\nconst _computeHalfExtents = function (bounds, minHalfExtent, maxHalfExtent) {\r\n  const halfExtents = new Vector3()\r\n  return halfExtents.subVectors(bounds.max, bounds.min).multiplyScalar(0.5).clampScalar(minHalfExtent, maxHalfExtent)\r\n}\r\n\r\nconst _computeLocalOffset = function (matrix, bounds, target) {\r\n  target.addVectors(bounds.max, bounds.min).multiplyScalar(0.5).applyMatrix4(matrix)\r\n  return target\r\n}\r\n\r\n// returns the bounding box for the geometries underneath `root`.\r\nconst _computeBounds = function (vertices, matrices) {\r\n  const bounds = new Box3()\r\n  let minX = +Infinity\r\n  let minY = +Infinity\r\n  let minZ = +Infinity\r\n  let maxX = -Infinity\r\n  let maxY = -Infinity\r\n  let maxZ = -Infinity\r\n  bounds.min.set(0, 0, 0)\r\n  bounds.max.set(0, 0, 0)\r\n\r\n  _iterateVertices(vertices, matrices, v => {\r\n    if (v.x < minX) minX = v.x\r\n    if (v.y < minY) minY = v.y\r\n    if (v.z < minZ) minZ = v.z\r\n    if (v.x > maxX) maxX = v.x\r\n    if (v.y > maxY) maxY = v.y\r\n    if (v.z > maxZ) maxZ = v.z\r\n  })\r\n\r\n  bounds.min.set(minX, minY, minZ)\r\n  bounds.max.set(maxX, maxY, maxZ)\r\n  return bounds\r\n}\r\n\r\nconst _iterateVertices = (function () {\r\n  const vertex = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, cb) {\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < vertices[i].length; j += 3) {\r\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix)\r\n        cb(vertex)\r\n      }\r\n    }\r\n  }\r\n})()\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { EventEmitter } from 'eventemitter3'\r\nimport { ExtendedObject3D, CollisionEvent } from '@enable3d/common/dist/types'\r\nimport { Types } from './physics'\r\n\r\nexport class CollisionEvents extends EventEmitter {\r\n  public worldTransform: Ammo.btTransform\r\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\r\n\r\n  public addCollider(\r\n    object1: ExtendedObject3D,\r\n    object2: ExtendedObject3D,\r\n    eventCallback: (event: CollisionEvent) => void\r\n  ) {\r\n    if (!object1.body || !object2.body) return\r\n\r\n    object1.body.checkCollisions = true\r\n    object2.body.checkCollisions = true\r\n\r\n    this.on('collision', (data: { bodies: ExtendedObject3D[]; event: CollisionEvent }) => {\r\n      const { bodies, event } = data\r\n      if (bodies[0]?.name && bodies[1]?.name && object1?.name && object2?.name) {\r\n        if (bodies[0].name === object1.name && bodies[1].name === object2.name) eventCallback(event)\r\n        else if (bodies[1].name === object1.name && bodies[0].name === object2.name) eventCallback(event)\r\n      }\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/ammo-debug-drawer\r\n * @license      {@link https://github.com/InfiniteLee/ammo-debug-drawer/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport {\r\n  Scene,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  LineBasicMaterial,\r\n  LineSegments,\r\n  StaticDrawUsage\r\n} from '@enable3d/three-wrapper/dist/index'\r\n\r\nconst AmmoDebugConstants = {\r\n  NoDebug: 0,\r\n  DrawWireframe: 1,\r\n  DrawAabb: 2,\r\n  DrawFeaturesText: 4,\r\n  DrawContactPoints: 8,\r\n  NoDeactivation: 16,\r\n  NoHelpText: 32,\r\n  DrawText: 64,\r\n  ProfileTimings: 128,\r\n  EnableSatComparison: 256,\r\n  DisableBulletLCP: 512,\r\n  EnableCCD: 1024,\r\n  DrawConstraints: 1 << 11, //2048\r\n  DrawConstraintLimits: 1 << 12, //4096\r\n  FastWireframe: 1 << 13, //8192\r\n  DrawNormals: 1 << 14, //16384\r\n  DrawOnTop: 1 << 15, //32768\r\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\r\n}\r\n\r\n/**\r\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\r\n */\r\nclass DebugDrawer {\r\n  debugDrawMode: number\r\n  geometry: BufferGeometry\r\n  index: number\r\n  mesh: LineSegments\r\n  enabled: boolean\r\n  debugDrawer: Ammo.DebugDrawer\r\n  warnedOnce: boolean\r\n  constructor(public scene: Scene, public world: Ammo.btCollisionWorld, public options: any = {}) {\r\n    this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe\r\n    const drawOnTop = this.debugDrawMode & AmmoDebugConstants.DrawOnTop || false\r\n    const maxBufferSize = options.maxBufferSize || 1000000\r\n\r\n    this.geometry = new BufferGeometry()\r\n    const vertices = new Float32Array(maxBufferSize * 3)\r\n    const colors = new Float32Array(maxBufferSize * 3)\r\n\r\n    /*\r\n    I do not know the difference, just using the first one.\r\n    export const StaticDrawUsage: Usage;\r\n    export const DynamicDrawUsage: Usage;\r\n    export const StreamDrawUsage: Usage;\r\n    export const StaticReadUsage: Usage;\r\n    export const DynamicReadUsage: Usage;\r\n    export const StreamReadUsage: Usage;\r\n    export const StaticCopyUsage: Usage;\r\n    export const DynamicCopyUsage: Usage;\r\n    export const StreamCopyUsage: Usage;\r\n     */\r\n    this.geometry.setAttribute('position', new BufferAttribute(vertices, 3).setUsage(StaticDrawUsage))\r\n    this.geometry.setAttribute('color', new BufferAttribute(colors, 3).setUsage(StaticDrawUsage))\r\n\r\n    this.index = 0\r\n\r\n    const material = new LineBasicMaterial({\r\n      vertexColors: true,\r\n      depthTest: !drawOnTop\r\n    })\r\n\r\n    this.mesh = new LineSegments(this.geometry, material)\r\n    if (drawOnTop) this.mesh.renderOrder = 999\r\n    this.mesh.frustumCulled = false\r\n\r\n    this.enabled = false\r\n\r\n    this.debugDrawer = new Ammo.DebugDrawer()\r\n    this.debugDrawer.drawLine = this.drawLine.bind(this)\r\n    this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this)\r\n    this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this)\r\n    this.debugDrawer.draw3dText = this.draw3dText.bind(this)\r\n    this.debugDrawer.setDebugMode = this.setDebugMode.bind(this)\r\n    this.debugDrawer.getDebugMode = this.getDebugMode.bind(this)\r\n\r\n    this.world.setDebugDrawer(this.debugDrawer)\r\n  }\r\n\r\n  enable() {\r\n    this.enabled = true\r\n    this.scene.add(this.mesh)\r\n  }\r\n\r\n  disable() {\r\n    this.enabled = false\r\n    this.scene.remove(this.mesh)\r\n  }\r\n\r\n  update() {\r\n    if (!this.enabled) {\r\n      return\r\n    }\r\n\r\n    if (this.index != 0) {\r\n      // @ts-ignore\r\n      this.geometry.attributes.position.needsUpdate = true\r\n      // @ts-ignore\r\n      this.geometry.attributes.color.needsUpdate = true\r\n    }\r\n\r\n    this.index = 0\r\n    this.world.debugDrawWorld()\r\n    this.geometry.setDrawRange(0, this.index)\r\n  }\r\n\r\n  drawLine(from: any, to: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const fromX = heap[(from + 0) / 4]\r\n    const fromY = heap[(from + 4) / 4]\r\n    const fromZ = heap[(from + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, fromX, fromY, fromZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const toX = heap[(to + 0) / 4]\r\n    const toY = heap[(to + 4) / 4]\r\n    const toZ = heap[(to + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, toX, toY, toZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  //TODO: figure out how to make lifeTime work\r\n  drawContactPoint(pointOnB: any, normalOnB: any, distance: any, _lifeTime: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const x = heap[(pointOnB + 0) / 4]\r\n    const y = heap[(pointOnB + 4) / 4]\r\n    const z = heap[(pointOnB + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, x, y, z)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const dx = heap[(normalOnB + 0) / 4] * distance\r\n    const dy = heap[(normalOnB + 4) / 4] * distance\r\n    const dz = heap[(normalOnB + 8) / 4] * distance\r\n    this.geometry.attributes.position.setXYZ(this.index, x + dx, y + dy, z + dz)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  reportErrorWarning(warningString: string) {\r\n    if (Ammo.hasOwnProperty('Pointer_stringify')) {\r\n      // @ts-ignore\r\n      console.warn(Ammo.Pointer_stringify(warningString))\r\n    } else if (!this.warnedOnce) {\r\n      this.warnedOnce = true\r\n      console.warn(\"Cannot print warningString, please rebuild Ammo.js using 'debug' flag\")\r\n    }\r\n  }\r\n\r\n  draw3dText(_location: any, _textString: any) {\r\n    //TODO\r\n    console.warn('TODO: draw3dText')\r\n  }\r\n\r\n  setDebugMode(debugMode: any) {\r\n    this.debugDrawMode = debugMode\r\n  }\r\n\r\n  getDebugMode() {\r\n    return this.debugDrawMode\r\n  }\r\n}\r\n\r\nexport default DebugDrawer\r\n","/**\r\n * Copied from three.js examples and added a fix\r\n */\r\n\r\n/**\r\n * @author yomboprime https://github.com/yomboprime\r\n *\r\n * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.\r\n *\r\n * Usage:\r\n *\r\n * Use the function prepareBreakableObject to prepare a Mesh object to be broken.\r\n *\r\n * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)\r\n *\r\n * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.\r\n *\r\n * Requisites for the object:\r\n *\r\n *  - Mesh object must have a BufferGeometry (not Geometry) and a Material\r\n *\r\n *  - Vertex normals must be planar (not smoothed)\r\n *\r\n *  - The geometry must be convex (this is not checked in the library). You can create convex\r\n *  geometries with ConvexBufferGeometry. The BoxBufferGeometry, SphereBufferGeometry and other convex primitives\r\n *  can also be used.\r\n *\r\n * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)\r\n * Use with caution and read the code when using with other libs.\r\n *\r\n * @param {double} minSizeForBreak Min size a debris can have to break.\r\n * @param {double} smallDelta Max distance to consider that a point belongs to a plane.\r\n *\r\n */\r\n\r\nimport { Line3, Mesh, Plane, Vector3 } from '@enable3d/three-wrapper/dist/index'\r\nimport { ConvexGeometry } from '@enable3d/three-wrapper/dist/index'\r\nimport logger from '@enable3d/common/dist/logger'\r\n\r\nconst ConvexObjectBreaker = function (minSizeForBreak?: number, smallDelta?: number) {\r\n  // @ts-ignore\r\n  this.minSizeForBreak = minSizeForBreak || 1.4\r\n  // @ts-ignore\r\n  this.smallDelta = smallDelta || 0.0001\r\n\r\n  // @ts-ignore\r\n  this.tempLine1 = new Line3()\r\n  // @ts-ignore\r\n  this.tempPlane1 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane2 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane_Cut = new Plane()\r\n  // @ts-ignore\r\n  this.tempCM1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempCM2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_AB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_CB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempResultObjects = { object1: null, object2: null }\r\n\r\n  // @ts-ignore\r\n  this.segments = []\r\n  var n = 30 * 30\r\n  // @ts-ignore\r\n  for (var i = 0; i < n; i++) this.segments[i] = false\r\n}\r\n\r\nConvexObjectBreaker.prototype = {\r\n  constructor: ConvexObjectBreaker,\r\n\r\n  prepareBreakableObject: function (object: any, mass: any, velocity: any, angularVelocity: any, breakable: any) {\r\n    // object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.\r\n    // Its material property is propagated to its children (sub-pieces)\r\n    // mass must be > 0\r\n\r\n    if (!object.geometry.isBufferGeometry) {\r\n      console.error('THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.')\r\n    }\r\n\r\n    object.userData.ammoPhysicsData = {} // initialise our new data container - would be best to move this to ExtendedObject and not rely on userData at all for best compatibility\r\n    var ammoPhysicsData = object.userData.ammoPhysicsData // get reference to it\r\n    ammoPhysicsData.mass = mass\r\n    ammoPhysicsData.velocity = velocity.clone()\r\n    ammoPhysicsData.angularVelocity = angularVelocity.clone()\r\n    ammoPhysicsData.breakable = breakable\r\n  },\r\n\r\n  /*\r\n   * @param {int} maxRadialIterations Iterations for radial cuts.\r\n   * @param {int} maxRandomIterations Max random iterations for not-radial cuts\r\n   *\r\n   * Returns the array of pieces\r\n   */\r\n  subdivideByImpact: function (\r\n    object: any,\r\n    pointOfImpact: any,\r\n    normal: any,\r\n    maxRadialIterations: any,\r\n    maxRandomIterations: any\r\n  ) {\r\n    var debris: any = []\r\n\r\n    var tempPlane1 = this.tempPlane1\r\n    var tempPlane2 = this.tempPlane2\r\n\r\n    this.tempVector3.addVectors(pointOfImpact, normal)\r\n    tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3)\r\n\r\n    var maxTotalIterations = maxRandomIterations + maxRadialIterations\r\n\r\n    var scope = this\r\n\r\n    function subdivideRadial(subObject: any, startAngle: any, endAngle: any, numIterations: any) {\r\n      if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\r\n        debris.push(subObject)\r\n\r\n        return\r\n      }\r\n\r\n      var angle = Math.PI\r\n\r\n      if (numIterations === 0) {\r\n        tempPlane2.normal.copy(tempPlane1.normal)\r\n        tempPlane2.constant = tempPlane1.constant\r\n      } else {\r\n        if (numIterations <= maxRadialIterations) {\r\n          angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle\r\n\r\n          // Rotate tempPlane2 at impact point around normal axis and the angle\r\n          scope.tempVector3_2.copy(object.position).sub(pointOfImpact).applyAxisAngle(normal, angle).add(pointOfImpact)\r\n          tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2)\r\n        } else {\r\n          angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI\r\n\r\n          // Rotate tempPlane2 at object position around normal axis and the angle\r\n          scope.tempVector3_2\r\n            .copy(pointOfImpact)\r\n            .sub(subObject.position)\r\n            .applyAxisAngle(normal, angle)\r\n            .add(subObject.position)\r\n          scope.tempVector3_3.copy(normal).add(subObject.position)\r\n          tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2)\r\n        }\r\n      }\r\n\r\n      // Perform the cut\r\n      scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects)\r\n\r\n      var obj1 = scope.tempResultObjects.object1\r\n      var obj2 = scope.tempResultObjects.object2\r\n\r\n      if (obj1) {\r\n        subdivideRadial(obj1, startAngle, angle, numIterations + 1)\r\n      }\r\n\r\n      if (obj2) {\r\n        subdivideRadial(obj2, angle, endAngle, numIterations + 1)\r\n      }\r\n    }\r\n\r\n    subdivideRadial(object, 0, 2 * Math.PI, 0)\r\n\r\n    return debris\r\n  },\r\n\r\n  cutByPlane: function (object: any, plane: any, output: any) {\r\n    // Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.\r\n    // object2 can be null if the plane doesn't cut the object.\r\n    // object1 can be null only in case of internal error\r\n    // Returned value is number of pieces, 0 for error.\r\n\r\n    var geometry = object.geometry\r\n    var coords = geometry.attributes.position.array\r\n    var normals = geometry.attributes.normal.array\r\n\r\n    var numPoints = coords.length / 3\r\n    var numFaces = numPoints / 3\r\n\r\n    var indices = geometry.getIndex()\r\n\r\n    if (indices) {\r\n      indices = indices.array\r\n      numFaces = indices.length / 3\r\n    }\r\n\r\n    function getVertexIndex(faceIdx: any, vert: any) {\r\n      // vert = 0, 1 or 2.\r\n\r\n      var idx = faceIdx * 3 + vert\r\n\r\n      return indices ? indices[idx] : idx\r\n    }\r\n\r\n    var points1 = []\r\n    var points2 = []\r\n\r\n    var delta = this.smallDelta\r\n\r\n    // Reset segments mark\r\n    var numPointPairs = numPoints * numPoints\r\n    for (var i = 0; i < numPointPairs; i++) this.segments[i] = false\r\n\r\n    var p0 = this.tempVector3_P0\r\n    var p1 = this.tempVector3_P1\r\n    var n0 = this.tempVector3_N0\r\n    var n1 = this.tempVector3_N1\r\n\r\n    // Iterate through the faces to mark edges shared by coplanar faces\r\n    for (var i = 0; i < numFaces - 1; i++) {\r\n      var a1 = getVertexIndex(i, 0)\r\n      var b1 = getVertexIndex(i, 1)\r\n      var c1 = getVertexIndex(i, 2)\r\n\r\n      // Assuming all 3 vertices have the same normal\r\n      n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2)\r\n\r\n      for (var j = i + 1; j < numFaces; j++) {\r\n        var a2 = getVertexIndex(j, 0)\r\n        var b2 = getVertexIndex(j, 1)\r\n        var c2 = getVertexIndex(j, 2)\r\n\r\n        // Assuming all 3 vertices have the same normal\r\n        n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2)\r\n\r\n        var coplanar = 1 - n0.dot(n1) < delta\r\n\r\n        if (coplanar) {\r\n          if (a1 === a2 || a1 === b2 || a1 === c2) {\r\n            if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n              this.segments[a1 * numPoints + b1] = true\r\n              this.segments[b1 * numPoints + a1] = true\r\n            } else {\r\n              this.segments[c1 * numPoints + a1] = true\r\n              this.segments[a1 * numPoints + c1] = true\r\n            }\r\n          } else if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n            this.segments[c1 * numPoints + b1] = true\r\n            this.segments[b1 * numPoints + c1] = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Transform the plane to object local space\r\n    var localPlane = this.tempPlane_Cut\r\n    object.updateMatrix()\r\n    ConvexObjectBreaker.transformPlaneToLocalSpace(plane, object.matrix, localPlane)\r\n\r\n    // Iterate through the faces adding points to both pieces\r\n    for (var i = 0; i < numFaces; i++) {\r\n      var va = getVertexIndex(i, 0)\r\n      var vb = getVertexIndex(i, 1)\r\n      var vc = getVertexIndex(i, 2)\r\n\r\n      for (var segment = 0; segment < 3; segment++) {\r\n        var i0 = segment === 0 ? va : segment === 1 ? vb : vc\r\n        var i1 = segment === 0 ? vb : segment === 1 ? vc : va\r\n\r\n        var segmentState = this.segments[i0 * numPoints + i1]\r\n\r\n        if (segmentState) continue // The segment already has been processed in another face\r\n\r\n        // Mark segment as processed (also inverted segment)\r\n        this.segments[i0 * numPoints + i1] = true\r\n        this.segments[i1 * numPoints + i0] = true\r\n\r\n        p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2])\r\n        p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2])\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark0 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p0)\r\n\r\n        if (d > delta) {\r\n          mark0 = 2\r\n          points2.push(p0.clone())\r\n        } else if (d < -delta) {\r\n          mark0 = 1\r\n          points1.push(p0.clone())\r\n        } else {\r\n          mark0 = 3\r\n          points1.push(p0.clone())\r\n          points2.push(p0.clone())\r\n        }\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark1 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p1)\r\n\r\n        if (d > delta) {\r\n          mark1 = 2\r\n          points2.push(p1.clone())\r\n        } else if (d < -delta) {\r\n          mark1 = 1\r\n          points1.push(p1.clone())\r\n        } else {\r\n          mark1 = 3\r\n          points1.push(p1.clone())\r\n          points2.push(p1.clone())\r\n        }\r\n\r\n        if ((mark0 === 1 && mark1 === 2) || (mark0 === 2 && mark1 === 1)) {\r\n          // Intersection of segment with the plane\r\n\r\n          this.tempLine1.start.copy(p0)\r\n          this.tempLine1.end.copy(p1)\r\n\r\n          var intersection = new Vector3()\r\n          intersection = localPlane.intersectLine(this.tempLine1, intersection)\r\n\r\n          if (intersection === undefined) {\r\n            // Shouldn't happen\r\n            console.error('Internal error: segment does not intersect plane.')\r\n            output.segmentedObject1 = null\r\n            output.segmentedObject2 = null\r\n            return 0\r\n          }\r\n\r\n          points1.push(intersection)\r\n          points2.push(intersection.clone())\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate debris mass (very fast and imprecise):\r\n    var newMass = object.userData.ammoPhysicsData.mass * 0.5\r\n\r\n    // Calculate debris Center of Mass (again fast and imprecise)\r\n    this.tempCM1.set(0, 0, 0)\r\n    var radius1 = 0\r\n    var numPoints1 = points1.length\r\n\r\n    if (numPoints1 > 0) {\r\n      for (var i = 0; i < numPoints1; i++) this.tempCM1.add(points1[i])\r\n\r\n      this.tempCM1.divideScalar(numPoints1)\r\n      for (var i = 0; i < numPoints1; i++) {\r\n        var p = points1[i]\r\n        p.sub(this.tempCM1)\r\n        radius1 = Math.max(radius1, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM1.add(object.position)\r\n    }\r\n\r\n    this.tempCM2.set(0, 0, 0)\r\n    var radius2 = 0\r\n    var numPoints2 = points2.length\r\n    if (numPoints2 > 0) {\r\n      for (var i = 0; i < numPoints2; i++) this.tempCM2.add(points2[i])\r\n\r\n      this.tempCM2.divideScalar(numPoints2)\r\n      for (var i = 0; i < numPoints2; i++) {\r\n        var p = points2[i]\r\n        p.sub(this.tempCM2)\r\n        radius2 = Math.max(radius2, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM2.add(object.position)\r\n    }\r\n\r\n    var object1 = null\r\n    var object2 = null\r\n\r\n    var numObjects = 0\r\n\r\n    /**\r\n     * MOD: Wrapped in try catch block to avoid errors\r\n     */\r\n    if (numPoints1 > 4) {\r\n      try {\r\n        object1 = new Mesh(new ConvexGeometry(points1), object.material)\r\n        object1.position.copy(this.tempCM1)\r\n        object1.quaternion.copy(object.quaternion)\r\n        object1.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object1,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius1 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts')\r\n        logger(error)\r\n      }\r\n    }\r\n\r\n    if (numPoints2 > 4) {\r\n      try {\r\n        object2 = new Mesh(new ConvexGeometry(points2), object.material)\r\n        object2.position.copy(this.tempCM2)\r\n        object2.quaternion.copy(object.quaternion)\r\n        object2.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object2,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius2 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts')\r\n        logger(error)\r\n      }\r\n    }\r\n\r\n    output.object1 = object1\r\n    output.object2 = object2\r\n\r\n    return numObjects\r\n  }\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVector = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[4] * y + e[8] * z\r\n  v.y = e[1] * x + e[5] * y + e[9] * z\r\n  v.z = e[2] * x + e[6] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z\r\n  v.y = e[4] * x + e[5] * y + e[6] * z\r\n  v.z = e[8] * x + e[9] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformTiedVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a tied (ordinary) vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z - e[12]\r\n  v.y = e[4] * x + e[5] * y + e[6] * z - e[13]\r\n  v.z = e[8] * x + e[9] * y + e[10] * z - e[14]\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformPlaneToLocalSpace = (function () {\r\n  var v1 = new Vector3()\r\n\r\n  return function transformPlaneToLocalSpace(plane: any, m: any, resultPlane: any) {\r\n    resultPlane.normal.copy(plane.normal)\r\n    resultPlane.constant = plane.constant\r\n\r\n    var referencePoint = ConvexObjectBreaker.transformTiedVectorInverse(plane.coplanarPoint(v1), m)\r\n\r\n    ConvexObjectBreaker.transformFreeVectorInverse(resultPlane.normal, m)\r\n\r\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n    resultPlane.constant = -referencePoint.dot(resultPlane.normal)\r\n  }\r\n})()\r\n\r\nexport { ConvexObjectBreaker }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport applyMixins from '@enable3d/common/dist/applyMixins'\r\nimport ClosestRayResultCallback from './closestRayResultCallback'\r\nimport AllHitsRayResultCallback from './allHitsRayResultCallback'\r\nimport { AmmoPhysics } from '../physics'\r\n\r\nclass Raycaster {\r\n  public readonly type: string\r\n  protected _btRayFrom: Ammo.btVector3\r\n  protected _btRayTo: Ammo.btVector3\r\n  protected _btRayCallback: Ammo.RayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  setRayFromWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayFrom.setValue(x, y, z)\r\n  }\r\n\r\n  setRayToWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayTo.setValue(x, y, z)\r\n  }\r\n\r\n  hasHit() {\r\n    return this._btRayCallback.hasHit()\r\n  }\r\n\r\n  rayTest() {\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n\r\n    this._btRayCallback =\r\n      this.type === 'closest'\r\n        ? new Ammo.ClosestRayResultCallback(this._btRayFrom, this._btRayTo)\r\n        : new Ammo.AllHitsRayResultCallback(this._btRayFrom, this._btRayTo)\r\n\r\n    this.physics.physicsWorld.rayTest(this._btRayFrom, this._btRayTo, this._btRayCallback)\r\n  }\r\n\r\n  destroy() {\r\n    if (typeof this._btRayFrom !== 'undefined') Ammo.destroy(this._btRayFrom)\r\n    if (typeof this._btRayTo !== 'undefined') Ammo.destroy(this._btRayTo)\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n  }\r\n}\r\n\r\ninterface ClosestRaycaster extends Raycaster, ClosestRayResultCallback {}\r\ninterface AllHitsRaycaster extends Raycaster, AllHitsRayResultCallback {}\r\n\r\nclass ClosestRaycaster implements Raycaster, ClosestRayResultCallback {\r\n  public readonly type = 'closest'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\nclass AllHitsRaycaster implements Raycaster, AllHitsRayResultCallback {\r\n  public readonly type = 'allHits'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\napplyMixins(ClosestRaycaster, [Raycaster, ClosestRayResultCallback])\r\napplyMixins(AllHitsRaycaster, [Raycaster, AllHitsRayResultCallback])\r\n\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\n\r\nexport default class ClosestRayResultCallback {\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointWorld(): { x: number; y: number; z: number } {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3\r\n\r\n    const point = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return point\r\n  }\r\n\r\n  getHitNormalWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normal = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return normal\r\n  }\r\n\r\n  getCollisionObject(): ExtendedObject3D {\r\n    // @ts-ignore\r\n    const rb = Ammo.castObject(this._btRayCallback.get_m_collisionObject(), Ammo.btRigidBody)\r\n    // @ts-ignore\r\n    return rb.threeObject\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\n\r\nexport default class AllHitsRayResultCallback {\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointsWorld() {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3Array\r\n\r\n    const points = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      points.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // TODO: Remove this in future versions!\r\n  getHitPointWorld() {\r\n    console.warn('[enable3d] Use getHitPointsWorld() instead of getHitPointWorld() for the AllHitsRayCaster!')\r\n    return this.getHitPointsWorld()\r\n  }\r\n\r\n  getHitNormalsWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normals = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      normals.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return normals\r\n  }\r\n\r\n  getCollisionObjects() {\r\n    const threeObjects: ExtendedObject3D[] = []\r\n    const objects = this._btRayCallback.get_m_collisionObjects()\r\n\r\n    for (let i = objects.size() - 1; i >= 0; i--) {\r\n      // @ts-ignore\r\n      const rb = Ammo.castObject(objects.at(i), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      threeObjects.push(rb.threeObject)\r\n    }\r\n    return threeObjects\r\n  }\r\n}\r\n","/**\r\n * @author yandeu\r\n * @description Ported to TypeScript\r\n */\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\n/**\r\n * This is the Clock class THREE provides.\r\n */\r\nclass Clock {\r\n  autoStart: boolean\r\n  startTime: number\r\n  oldTime: number\r\n  elapsedTime: number\r\n  running: boolean\r\n\r\n  constructor(autoStart = true) {\r\n    this.autoStart = autoStart !== undefined ? autoStart : true\r\n    this.startTime = 0\r\n    this.oldTime = 0\r\n    this.elapsedTime = 0\r\n    this.running = false\r\n  }\r\n\r\n  start() {\r\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now() // see #10732\r\n\r\n    this.oldTime = this.startTime\r\n    this.elapsedTime = 0\r\n    this.running = true\r\n  }\r\n\r\n  stop() {\r\n    this.getElapsedTime()\r\n    this.running = false\r\n    this.autoStart = false\r\n  }\r\n\r\n  getElapsedTime() {\r\n    this.getDelta()\r\n    return this.elapsedTime\r\n  }\r\n\r\n  getDelta() {\r\n    let diff = 0\r\n\r\n    if (this.autoStart && !this.running) {\r\n      this.start()\r\n      return 0\r\n    }\r\n\r\n    if (this.running) {\r\n      let newTime = (typeof performance === 'undefined' ? Date : performance).now()\r\n\r\n      diff = (newTime - this.oldTime) / 1000\r\n      this.oldTime = newTime\r\n\r\n      this.elapsedTime += diff\r\n    }\r\n\r\n    return diff\r\n  }\r\n}\r\n\r\nexport { Clock }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport logger from '@enable3d/common/dist/logger'\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\n\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/extendedObject3D'\r\nexport { ExtendedObject3D }\r\n\r\nimport { ExtendedMesh } from '@enable3d/common/dist/extendedMesh'\r\nexport { ExtendedMesh }\r\n\r\nimport { ExtendedGroup } from '@enable3d/common/dist/extendedGroup'\r\nexport { ExtendedGroup }\r\n\r\nimport Shapes from './shapes'\r\nimport Constraints from './constraints'\r\nimport { EventEmitter } from 'eventemitter3'\r\nimport {\r\n  Vector3,\r\n  Quaternion,\r\n  Scene,\r\n  Euler,\r\n  Matrix4,\r\n  Geometry,\r\n  BufferGeometry,\r\n  REVISION\r\n} from '@enable3d/three-wrapper/dist/index'\r\nimport {\r\n  iterateGeometries,\r\n  createHullShape,\r\n  createHACDShapes,\r\n  createVHACDShapes,\r\n  createTriMeshShape\r\n} from './three-to-ammo'\r\nimport { createTorusShape } from './torusShape'\r\nimport Factories from '@enable3d/common/dist/factories'\r\nimport { CollisionEvents } from './collisionEvents'\r\n\r\nimport DebugDrawer from './debugDrawer'\r\nimport { ConvexObjectBreaker } from './convexObjectBreaker'\r\n\r\nimport { PhysicsLoader } from '@enable3d/common/dist/physicsLoader'\r\nimport DefaultMaterial from '@enable3d/common/dist/defaultMaterial'\r\nexport { PhysicsLoader }\r\n\r\nimport * as Types from '@enable3d/common/dist/types'\r\nimport { ClosestRaycaster, AllHitsRaycaster } from './raycaster/raycaster'\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\nexport { Types }\r\n\r\n// Export THREE.Clock\r\nexport { Clock } from './lib/Clock'\r\n\r\nclass AmmoPhysics extends EventEmitter {\r\n  public worldTransform: Ammo.btTransform\r\n  public factory: Factories\r\n  public isHeadless: boolean\r\n\r\n  public rigidBodies: ExtendedObject3D[] = []\r\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n  protected gravity: { x: number; y: number; z: number }\r\n\r\n  protected tmpEuler: Euler\r\n  protected tmpQuaternion: Quaternion\r\n  protected tmpVector3: Vector3\r\n  protected tmpVector3a: Vector3\r\n  protected tmpMatrix4: Matrix4\r\n  protected tmpMatrix4a: Matrix4\r\n  protected tmpBtVector3: Ammo.btVector3\r\n  protected tmpBtQuaternion: Ammo.btQuaternion\r\n\r\n  public physicsWorld: Ammo.btSoftRigidDynamicsWorld\r\n  protected debugDrawer: DebugDrawer\r\n  private convexBreaker: any\r\n  protected addRigidBody: (threeObject: ExtendedObject3D, physicsShape: any, mass: any, pos: any, quat: any) => void\r\n  private objectsToRemove: any[]\r\n  private numObjectsToRemove: number\r\n\r\n  protected emptyV3: Vector3\r\n  protected impactPoint: Vector3\r\n  protected impactNormal: Vector3\r\n\r\n  protected defaultMaterial: DefaultMaterial\r\n\r\n  private shapes: Shapes\r\n  private constraints: Constraints\r\n  public collisionEvents: CollisionEvents\r\n\r\n  private readonly complexShapes = ['plane', 'hull', 'hacd', 'vhacd', 'convexMesh', 'concaveMesh']\r\n\r\n  constructor(public scene: Scene | 'headless', public config: Types.ThreeGraphicsConfig = {}) {\r\n    super()\r\n\r\n    this.gravity = config.gravity || { x: 0, y: -9.81, z: 0 }\r\n    this.isHeadless = scene === 'headless' ? true : false\r\n\r\n    this.tmpEuler = new Euler()\r\n    this.tmpQuaternion = new Quaternion()\r\n    this.tmpVector3 = new Vector3()\r\n    this.tmpVector3a = new Vector3()\r\n    this.tmpMatrix4 = new Matrix4()\r\n    this.tmpMatrix4a = new Matrix4()\r\n    this.tmpBtVector3 = new Ammo.btVector3()\r\n    this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    this.emptyV3 = new Vector3()\r\n    this.impactPoint = new Vector3()\r\n    this.impactNormal = new Vector3()\r\n\r\n    if (scene !== 'headless') {\r\n      this.defaultMaterial = new DefaultMaterial()\r\n\r\n      // const info = `Ammo.js physics provided by enable3d`\r\n      // console.log(\r\n      //   `%c %c %c %c %c ${info} %c https://enable3d.io/`,\r\n      //   'background: #ff0000',\r\n      //   'background: #ffff00',\r\n      //   'background: #00ff00',\r\n      //   'background: #00ffff',\r\n      //   'color: #fff; background: #000000;',\r\n      //   'background: none'\r\n      // )\r\n    }\r\n\r\n    this.start()\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  get tmpTrans() {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    return this.worldTransform\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  set tmpTrans(transform: Ammo.btTransform) {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    this.worldTransform = transform\r\n  }\r\n\r\n  /** Destroys a physics body. */\r\n  public destroy(body: PhysicsBody | ExtendedObject3D | ExtendedMesh) {\r\n    // @ts-ignore\r\n    const b: PhysicsBody = Object.keys(body).includes('body') ? body.body : body\r\n\r\n    if (typeof b?.ammo === 'undefined') return\r\n\r\n    // @ts-ignore\r\n    const name = b.ammo.name\r\n    // @ts-ignore\r\n    let obj: ExtendedObject3D | null = b.ammo.threeObject as ExtendedObject3D\r\n\r\n    if (name && obj) {\r\n      if (obj?.body?.ammo) {\r\n        // remove from physics world\r\n        !obj.body.isSoftBody\r\n          ? this.physicsWorld.removeRigidBody(obj.body.ammo)\r\n          : this.physicsWorld.removeSoftBody(obj.body.ammo as any)\r\n\r\n        // call destructor on body\r\n        obj.body.destructor()\r\n\r\n        // reset properties\r\n        // @ts-ignore\r\n        obj.body = undefined\r\n        obj.hasBody = false\r\n\r\n        // remove from this.objectAmmo\r\n        // @ts-ignore\r\n        delete b.ammo.threeObject\r\n        // remove from this.rigidBodies\r\n        for (let i = 0; i < this.rigidBodies.length; i++) {\r\n          if (this.rigidBodies[i].name === name) {\r\n            this.rigidBodies.splice(i, 1)\r\n            i--\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.scene === 'headless' && obj) obj = null\r\n  }\r\n\r\n  protected setup() {\r\n    // add worldTransform\r\n    this.worldTransform = new Ammo.btTransform()\r\n\r\n    // setup ammo physics\r\n    if (typeof this.config.setupPhysicsWorld === 'function') this.physicsWorld = this.config.setupPhysicsWorld() as any\r\n    else this.physicsWorld = this.setupPhysicsWorld()\r\n\r\n    if (this.scene !== 'headless') {\r\n      // Initialize convexBreaker\r\n      // @ts-ignore\r\n      this.convexBreaker = new ConvexObjectBreaker()\r\n\r\n      this.objectsToRemove = []\r\n      this.numObjectsToRemove = 0\r\n      for (let i = 0; i < 500; i++) {\r\n        this.objectsToRemove[i] = null\r\n      }\r\n    }\r\n\r\n    this.collisionEvents = new CollisionEvents()\r\n    this.factory = new Factories(this.scene)\r\n    this.shapes = new Shapes(this.factory, (object: ExtendedObject3D, config?: Types.AddExistingConfig) =>\r\n      this.addExisting(object, config)\r\n    )\r\n    this.constraints = new Constraints(this.worldTransform, this.physicsWorld)\r\n\r\n    if (this.scene !== 'headless') this.debugDrawer = new DebugDrawer(this.scene, this.physicsWorld, {})\r\n  }\r\n\r\n  public updateDebugger() {\r\n    if (this.scene === 'headless') return\r\n\r\n    if (this.debugDrawer && this.debugDrawer.enabled) this.debugDrawer.update()\r\n  }\r\n\r\n  protected setupPhysicsWorld() {\r\n    const g = this.gravity\r\n    const { softBodies = false } = this.config\r\n\r\n    let physicsWorld: any\r\n\r\n    if (!softBodies) {\r\n      const collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver()\r\n      physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration)\r\n    }\r\n\r\n    if (softBodies) {\r\n      const collisionConfiguration = new Ammo.btSoftBodyRigidBodyCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver(),\r\n        softBodySolver = new Ammo.btDefaultSoftBodySolver()\r\n      physicsWorld = new Ammo.btSoftRigidDynamicsWorld(\r\n        dispatcher,\r\n        broadphase,\r\n        solver,\r\n        collisionConfiguration,\r\n        softBodySolver\r\n      )\r\n    }\r\n\r\n    physicsWorld.setGravity(new Ammo.btVector3(g.x, g.y, g.z))\r\n    return physicsWorld\r\n  }\r\n\r\n  private createDebrisFromBreakableObject(object: ExtendedObject3D, parent: ExtendedObject3D) {\r\n    if (this.scene === 'headless') return\r\n\r\n    object.material = this.defaultMaterial.get()\r\n    object.shape = 'hull'\r\n    object.fragmentDepth = parent.fragmentDepth + 1\r\n\r\n    // Add the object to the scene\r\n    this.scene.add(object)\r\n\r\n    // Add physics to the object\r\n    // @ts-ignore\r\n    this.addExisting(object)\r\n\r\n    object.body.breakable = false\r\n    // make this fragment breakable in 2.5seconds\r\n    setTimeout(() => {\r\n      object.body.breakable = true\r\n    }, 2500)\r\n  }\r\n\r\n  private removeDebris(object: any) {\r\n    if (this.scene === 'headless') return\r\n\r\n    this.scene.remove(object)\r\n    this.destroy(object)\r\n  }\r\n\r\n  public update(delta: number) {\r\n    this.updatePhysics(delta)\r\n    this.detectCollisions()\r\n  }\r\n\r\n  private updatePhysics(delta: number) {\r\n    // step world\r\n    const deltaTime = delta / 1000\r\n\r\n    // must always satisfy the equation timeStep < maxSubSteps * fixedTimeStep\r\n    this.physicsWorld.stepSimulation(deltaTime, this.config.maxSubSteps || 4, this.config.fixedTimeStep || 1 / 60)\r\n\r\n    // update rigid bodies\r\n    for (let i = 0; i < this.rigidBodies.length; i++) {\r\n      const objThree = this.rigidBodies[i]\r\n      const objPhys = objThree.body.ammo\r\n      const ms = objPhys.getMotionState()\r\n\r\n      if (ms) {\r\n        ms.getWorldTransform(this.worldTransform)\r\n\r\n        // check if object did an update since last call\r\n        if (objThree.body.didUpdate) {\r\n          // @ts-ignore\r\n          if (objThree.body._emitUpdateEvents) objThree.body.eventEmitter.emit('update')\r\n          objThree.body.didUpdate = false\r\n        }\r\n\r\n        // update positions\r\n        if (objThree.body.ammo.isKinematicObject() && objThree.body.needUpdate) {\r\n          // get position and rotation\r\n          objThree.getWorldQuaternion(this.tmpQuaternion)\r\n          objThree.getWorldPosition(this.tmpVector3)\r\n          // adjust tmp variables\r\n          this.tmpBtVector3.setValue(this.tmpVector3.x, this.tmpVector3.y, this.tmpVector3.z)\r\n          this.tmpBtQuaternion.setValue(\r\n            this.tmpQuaternion.x,\r\n            this.tmpQuaternion.y,\r\n            this.tmpQuaternion.z,\r\n            this.tmpQuaternion.w\r\n          )\r\n          // set position and rotation\r\n          this.worldTransform.setOrigin(this.tmpBtVector3)\r\n          this.worldTransform.setRotation(this.tmpBtQuaternion)\r\n          // set transform\r\n          ms.setWorldTransform(this.worldTransform)\r\n          // reset needsUpdate\r\n          objThree.body.needUpdate = false\r\n        } else if (objThree.body.skipUpdate) {\r\n          // do nothing ...\r\n        } else if (!objThree.body.ammo.isStaticObject()) {\r\n          // get position and rotation\r\n          let p = this.worldTransform.getOrigin()\r\n          let q = this.worldTransform.getRotation()\r\n          // body offset\r\n          let o = objThree.body.offset\r\n          // set position and rotation\r\n          if (objThree.body.ignoreScale) {\r\n            this.tmpVector3a.set(objThree.scale.x, objThree.scale.y, objThree.scale.z)\r\n          } else {\r\n            const scale = objThree.body.ammo.getCollisionShape().getLocalScaling()\r\n            this.tmpVector3a.set(scale.x(), scale.y(), scale.z())\r\n          }\r\n          this.tmpVector3.set(p.x() + o.x, p.y() + o.y, p.z() + o.z)\r\n          this.tmpQuaternion.set(q.x(), q.y(), q.z(), q.w())\r\n          this.tmpMatrix4.compose(this.tmpVector3, this.tmpQuaternion, this.tmpVector3a)\r\n          if (objThree.parent) {\r\n            // compatibility fix for three.js >= r123 (Dezember 2020)\r\n            // @ts-ignore\r\n            if (parseInt(REVISION) >= 123) this.tmpMatrix4a.copy(objThree.parent.matrixWorld).invert()\r\n            else this.tmpMatrix4a.getInverse(objThree.parent.matrixWorld)\r\n          } else {\r\n            this.tmpMatrix4a.identity()\r\n          }\r\n          this.tmpMatrix4a.multiply(this.tmpMatrix4)\r\n          this.tmpMatrix4a.decompose(objThree.position, objThree.quaternion, objThree.scale)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private detectCollisions() {\r\n    const detectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n\r\n    // reset these vectors\r\n    this.impactPoint.set(0, 0, 0)\r\n    this.impactNormal.set(0, 0, 0)\r\n\r\n    const dispatcher = this.physicsWorld.getDispatcher()\r\n    const numManifolds = dispatcher.getNumManifolds()\r\n\r\n    // check collisions\r\n    for (let i = 0; i < numManifolds; i++) {\r\n      let contactManifold = dispatcher.getManifoldByIndexInternal(i)\r\n      let numContacts = contactManifold.getNumContacts()\r\n\r\n      // @ts-ignore\r\n      const rb0 = Ammo.castObject(contactManifold.getBody0(), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      const rb1 = Ammo.castObject(contactManifold.getBody1(), Ammo.btRigidBody)\r\n\r\n      let threeObject0 = rb0.threeObject as ExtendedObject3D\r\n      let threeObject1 = rb1.threeObject as ExtendedObject3D\r\n\r\n      if (!threeObject0 || !threeObject1) {\r\n        continue\r\n      }\r\n\r\n      // do not check collision between 2 unnamed objects\r\n      // (fragments do not have a name, for example)\r\n      if (rb0.name === '' && rb1.name === '') continue\r\n\r\n      /**\r\n       * Get some information\r\n       */\r\n\r\n      const checkCollisions0 = threeObject0.body?.checkCollisions\r\n      const checkCollisions1 = threeObject1.body?.checkCollisions\r\n\r\n      const breakable0 = threeObject0.body.breakable\r\n      const breakable1 = threeObject1.body.breakable\r\n\r\n      const checkCollisions = checkCollisions0 || checkCollisions1\r\n      const checkBreakable = breakable0 || breakable1\r\n\r\n      if (!checkCollisions && !checkBreakable) continue\r\n\r\n      let contact = false\r\n      let maxImpulse = 0\r\n\r\n      let event: Types.CollisionEvent = 'start'\r\n\r\n      for (let j = 0; j < numContacts; j++) {\r\n        const contactPoint = contactManifold.getContactPoint(j)\r\n        const distance = contactPoint.getDistance()\r\n\r\n        // Distance definition: when the distance between objects is positive, they are separated. When the distance is negative, they are penetrating. Zero distance means exactly touching.\r\n        // https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5831\r\n        if (distance <= 0) {\r\n          contact = true\r\n          const impulse = contactPoint.getAppliedImpulse()\r\n          const impactPoint = contactPoint.get_m_positionWorldOnB()\r\n          const impactNormal = contactPoint.get_m_normalWorldOnB()\r\n\r\n          // handle collision events\r\n          if (checkCollisions0 || checkCollisions1) {\r\n            const names = [threeObject0.name, threeObject1.name].sort()\r\n            const combinedName = `${names[0]}__${names[1]}`\r\n\r\n            if (this.earlierDetectedCollisions.find(el => el.combinedName === combinedName)) event = 'collision'\r\n\r\n            if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n              detectedCollisions.push({ combinedName, collision: true })\r\n              this.collisionEvents.emit('collision', { bodies: [threeObject0, threeObject1], event })\r\n            }\r\n          }\r\n\r\n          // get impactPoint and impactNormal of the hight impulse point (for breakable objects)\r\n          if (impulse >= maxImpulse) {\r\n            maxImpulse = impulse\r\n            // get what ween need for the convex breaking\r\n            if (breakable0 || breakable1) {\r\n              this.impactPoint.set(impactPoint.x(), impactPoint.y(), impactPoint.z())\r\n              this.impactNormal.set(impactNormal.x(), impactNormal.y(), impactNormal.z())\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n\r\n      // if no point has contact, abort\r\n      if (!contact) continue\r\n\r\n      // if no objects are breakable, abort\r\n      if (!checkBreakable) continue\r\n\r\n      /**\r\n       * check for breakable objects (subdivision)\r\n       */\r\n      const fractureImpulse = 5 //250\r\n      const MAX_FRAGMENT_DEPTH = 2\r\n\r\n      // since the library convexBreaker makes use of three's userData.ammoPhysicsData\r\n      // we have to clone the necessary params to threeObjectX.userData.ammoPhysicsData\r\n      // TODO improve this\r\n\r\n      this.emptyV3.set(0, 0, 0)\r\n      threeObject0.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable0,\r\n        physicsBody: rb0\r\n      }\r\n      threeObject1.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable1,\r\n        physicsBody: rb1\r\n      }\r\n      if (typeof threeObject0.fragmentDepth === 'undefined') threeObject0.fragmentDepth = 0\r\n      if (typeof threeObject1.fragmentDepth === 'undefined') threeObject1.fragmentDepth = 0\r\n\r\n      // threeObject0\r\n      if (breakable0 && maxImpulse > fractureImpulse && threeObject0.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb0.getLinearVelocity()\r\n          const angVel = rb0.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject0)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject0\r\n      }\r\n\r\n      // threeObject1\r\n      if (breakable1 && maxImpulse > fractureImpulse && threeObject1.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb1.getLinearVelocity()\r\n          const angVel = rb1.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject1)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject1\r\n      }\r\n    }\r\n\r\n    // remove objects\r\n    for (let i = 0; i < this.numObjectsToRemove; i++) {\r\n      this.removeDebris(this.objectsToRemove[i])\r\n    }\r\n    this.numObjectsToRemove = 0\r\n\r\n    // handle collision end events\r\n    this.earlierDetectedCollisions.forEach(el => {\r\n      const { combinedName } = el\r\n      if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n        const split = combinedName.split('__')\r\n        const obj0 = this.rigidBodies.find(obj => obj.name === split[0])\r\n        const obj1 = this.rigidBodies.find(obj => obj.name === split[1])\r\n        const event = 'end'\r\n        if (obj0 && obj1) this.collisionEvents.emit('collision', { bodies: [obj0, obj1], event })\r\n      }\r\n    })\r\n    this.earlierDetectedCollisions = [...detectedCollisions]\r\n  }\r\n\r\n  public setGravity(x = 0, y = -9.8, z = 0) {\r\n    this.tmpBtVector3.setValue(x, y, z)\r\n    this.physicsWorld.setGravity(this.tmpBtVector3)\r\n  }\r\n\r\n  public get debug() {\r\n    if (this.isHeadless) return null\r\n\r\n    return {\r\n      enable: () => {\r\n        this.debugDrawer.enable()\r\n      },\r\n      mode: (debugMode: number = 1) => {\r\n        this.debugDrawer.setDebugMode(debugMode)\r\n      },\r\n      disable: () => {\r\n        this.debugDrawer.disable()\r\n      }\r\n    }\r\n  }\r\n\r\n  private start() {\r\n    if (typeof Ammo === 'undefined') {\r\n      logger('Are you sure you included ammo.js?')\r\n      return\r\n    }\r\n\r\n    if (typeof Ammo === 'function')\r\n      Ammo().then(() => {\r\n        this.setup()\r\n      })\r\n    else this.setup()\r\n  }\r\n\r\n  public get add() {\r\n    return {\r\n      collider: (\r\n        object1: ExtendedObject3D,\r\n        object2: ExtendedObject3D,\r\n        eventCallback: (event: Types.CollisionEvent) => void\r\n      ) => this.collisionEvents.addCollider(object1, object2, eventCallback),\r\n      constraints: this.constraints.addConstraints,\r\n      existing: (object: ExtendedObject3D, config?: Types.AddExistingConfig) => this.addExisting(object, config),\r\n      plane: (planeConfig: Types.PlaneConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addPlane(planeConfig, materialConfig),\r\n      sphere: (sphereConfig: Types.SphereConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addSphere(sphereConfig, materialConfig),\r\n      ground: (groundConfig: Types.GroundConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addGround(groundConfig, materialConfig),\r\n      box: (boxConfig: Types.BoxConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addBox(boxConfig, materialConfig),\r\n      cylinder: (cylinderConfig: Types.CylinderConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCylinder(cylinderConfig, materialConfig),\r\n      cone: (coneConfig: Types.ConeConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCone(coneConfig, materialConfig),\r\n      torus: (torusConfig: Types.TorusConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addTorus(torusConfig, materialConfig),\r\n      extrude: (extrudeConfig: Types.ExtrudeConfig, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addExtrude(extrudeConfig, materialConfig),\r\n      /**\r\n       * Creates a new Raycaster\r\n       * @param type Returns only the closes body by default. Can be 'closest' or 'allHits'.\r\n       */\r\n      raycaster: (type = 'closest') => {\r\n        if (type === 'closest') return new ClosestRaycaster(this) as ClosestRaycaster\r\n        else return new AllHitsRaycaster(this) as AllHitsRaycaster\r\n      }\r\n    }\r\n  }\r\n\r\n  private prepareThreeObjectForCollisionShape(object: ExtendedObject3D, config: Types.AddExistingConfig = {}) {\r\n    const { autoCenter = false } = config\r\n\r\n    // set default params\r\n    const defaultParams = {\r\n      width: 1,\r\n      height: 1,\r\n      depth: 1,\r\n      radius: 1,\r\n      radiusTop: 1, // for the cylinder\r\n      radiusBottom: 1, // for the cylinder\r\n      tube: 0.4, // for the torus\r\n      tubularSegments: 6 // for the torus\r\n    }\r\n\r\n    // determine the shape (fallback to hacd)\r\n    let shape: string = 'unknown'\r\n    // retrieve the shape from the geometry\r\n    const type = object.geometry?.type || 'unknown'\r\n    if (/box/i.test(type)) shape = 'box'\r\n    else if (/cone/i.test(type)) shape = 'cone'\r\n    else if (/cylinder/i.test(type)) shape = 'cylinder'\r\n    else if (/extrude/i.test(type)) shape = 'extrude'\r\n    else if (/plane/i.test(type)) shape = 'plane'\r\n    else if (/sphere/i.test(type)) shape = 'sphere'\r\n    else if (/torus/i.test(type)) shape = 'torus'\r\n\r\n    // @ts-ignore\r\n    let params = { ...defaultParams, ...object?.geometry?.parameters }\r\n\r\n    if (config.shape) {\r\n      params = { ...defaultParams, ...config }\r\n      shape = config.shape\r\n    } else if (object.shape) {\r\n      shape = object.shape\r\n    }\r\n\r\n    // Add all default params if undefined\r\n    Object.keys(params).forEach(key => {\r\n      // @ts-ignore\r\n      if (typeof params[key] === 'undefined' && defaultParams[key]) {\r\n        // @ts-ignore\r\n        params[key] = defaultParams[key]\r\n      }\r\n    })\r\n\r\n    // auto adjust the center for custom shapes\r\n    if (autoCenter) object.geometry.center()\r\n\r\n    // adjust the cylinder radius for its physcis body\r\n    if (shape === 'cylinder') params.radius = config.radius || params.radiusTop\r\n\r\n    // some aliases\r\n    if (shape === 'extrude') shape = 'hacd'\r\n    if (shape === 'mesh' || shape === 'convex') shape = 'convexMesh'\r\n    if (shape === 'concave') shape = 'concaveMesh'\r\n\r\n    // if we have not found a shape until here, we fallback to 'box'\r\n    if (shape === 'unknown') {\r\n      logger(`Shape for ${object?.name} not recognized! Will fallback to box.`)\r\n      shape = 'box'\r\n    }\r\n\r\n    return { shape, params, object }\r\n  }\r\n\r\n  public createCollisionShape(shape: string, params: any, object?: ExtendedObject3D): Ammo.btCollisionShape {\r\n    const quat = object?.quaternion ? object?.quaternion : new Quaternion(0, 0, 0, 1)\r\n    const { axis = 'y' } = params\r\n\r\n    const btHalfExtents = new Ammo.btVector3()\r\n\r\n    // transform geometry to bufferGeometry (because three-to-ammo works only with bufferGeometry)\r\n    // @ts-expect-error\r\n    const geometry = object?.geometry as Geometry\r\n    if (object && geometry?.isGeometry) {\r\n      // @ts-expect-error\r\n      object.geometry = new BufferGeometry().fromGeometry(geometry)\r\n    }\r\n\r\n    // prepare data to pass to three-to-ammo.js\r\n    const extractData = (object: any) => {\r\n      const matrixWorld = new Matrix4().elements\r\n      const vertices: any[] = []\r\n      const matrices: any[] = []\r\n      const indexes: any[] = []\r\n      iterateGeometries(object, {}, (vertexArray: any, matrixArray: any, indexArray: any) => {\r\n        vertices.push(vertexArray)\r\n        matrices.push(matrixArray)\r\n        indexes.push(indexArray)\r\n      })\r\n\r\n      return { vertices, matrices, indexes, matrixWorld }\r\n    }\r\n\r\n    let d = {} as any\r\n    // extract data for complex shapes generated with three-to-ammo.js\r\n    if (this.complexShapes.indexOf(shape) !== -1) d = extractData(object)\r\n\r\n    let collisionShape\r\n    switch (shape) {\r\n      case 'box':\r\n        btHalfExtents.setValue(params.width / 2, params.height / 2, params.depth / 2)\r\n        collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n        break\r\n      case 'sphere':\r\n        collisionShape = new Ammo.btSphereShape(params.radius)\r\n        break\r\n      case 'cylinder':\r\n        switch (axis) {\r\n          case 'y':\r\n            btHalfExtents.setValue(params.radius, params.height / 2, params.radius)\r\n            collisionShape = new Ammo.btCylinderShape(btHalfExtents)\r\n            break\r\n          case 'x':\r\n            btHalfExtents.setValue(params.height / 2, params.radius, params.radius)\r\n            collisionShape = new Ammo.btCylinderShapeX(btHalfExtents)\r\n            break\r\n          case 'z':\r\n            btHalfExtents.setValue(params.radius, params.radius, params.height / 2)\r\n            collisionShape = new Ammo.btCylinderShapeZ(btHalfExtents)\r\n            break\r\n        }\r\n        break\r\n      case 'cone':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btConeShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btConeShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btConeShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'capsule':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btCapsuleShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btCapsuleShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btCapsuleShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'torus':\r\n        collisionShape = createTorusShape(params, quat)\r\n        break\r\n      case 'plane':\r\n        // uses a triMeshShape for the plane\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'hull':\r\n        collisionShape = createHullShape(d.vertices, d.matrices, d.matrixWorld, params)\r\n        break\r\n      case 'hacd':\r\n        collisionShape = createHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'vhacd':\r\n        collisionShape = createVHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'convexMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'concaveMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: true\r\n        })\r\n        break\r\n    }\r\n\r\n    Ammo.destroy(btHalfExtents)\r\n\r\n    // if there is a x, y or z, take is as temporary offset parameter\r\n    const { x, y, z } = params\r\n    if (x || y || z) {\r\n      // @ts-ignore\r\n      collisionShape.offset = { x: x || 0, y: y || 0, z: z || 0 }\r\n    }\r\n\r\n    // in some cases, like hacd, it will be an array of shapes\r\n    // so we merge them\r\n    if (Array.isArray(collisionShape)) collisionShape = this.mergeCollisionShapesToCompoundShape(collisionShape)\r\n\r\n    return collisionShape as Ammo.btCollisionShape\r\n  }\r\n\r\n  public mergeCollisionShapesToCompoundShape(collisionShapes: Ammo.btCollisionShape[]): Ammo.btCompoundShape {\r\n    const compoundShape = new Ammo.btCompoundShape()\r\n    collisionShapes.forEach(shape => {\r\n      // @ts-ignore\r\n      const { offset } = shape // offset is a custom parameter\r\n\r\n      const transform = new Ammo.btTransform()\r\n      transform.setIdentity()\r\n      if (offset) transform.getOrigin().setValue(offset.x || 0, offset.y || 0, offset.z || 0)\r\n      compoundShape.addChildShape(transform, shape)\r\n    })\r\n    return compoundShape\r\n  }\r\n\r\n  protected addExisting(object: ExtendedObject3D, config: Types.AddExistingConfig = {}): any {\r\n    const { hasBody } = object\r\n    if (hasBody) {\r\n      console.warn(`[Enable3d]: Object \"${object.name}\" already has a physical body!`)\r\n      return\r\n    }\r\n\r\n    const pos = new Vector3()\r\n    const quat = new Quaternion()\r\n    const scale = new Vector3()\r\n    object.getWorldPosition(pos)\r\n    object.getWorldQuaternion(quat)\r\n    object.getWorldScale(scale)\r\n\r\n    const isStaticObject = (config.collisionFlags || 0).toString(2).slice(-1) === '1'\r\n    const isKinematicObject = (config.collisionFlags || 0).toString(2).slice(-2, -1) === '1'\r\n\r\n    const {\r\n      shape = 'unknown',\r\n      compound = [],\r\n      mass = isStaticObject || isKinematicObject ? 0 : 1, // set default mass of 0 for static objects, and 1 for all other objects\r\n      collisionFlags = 0,\r\n      collisionGroup = 1,\r\n      collisionMask = -1,\r\n      offset = undefined,\r\n      breakable = false,\r\n      addChildren = true,\r\n      margin = 0.01,\r\n      ignoreScale = false\r\n    } = config\r\n\r\n    if (ignoreScale) scale.set(1, 1, 1)\r\n\r\n    if (compound.length >= 1) {\r\n      // if we want a custom compound shape, we simply do\r\n      const collisionShapes = compound.map((s: any) => this.createCollisionShape(s.shape, s))\r\n      const compoundShape = this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n      const localTransform = this.finishCollisionShape(compoundShape, pos, quat, scale, margin)\r\n      const rigidBody = this.collisionShapeToRigidBody(compoundShape, localTransform, mass, isKinematicObject)\r\n      this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, breakable, offset)\r\n      object.body.ignoreScale = ignoreScale\r\n      return\r\n    }\r\n\r\n    const collisionShapes: Ammo.btCollisionShape[] = []\r\n\r\n    // if object is a THREE.Group, object does not have a mesh\r\n    if (shape !== 'unknown' || object.isMesh) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    // check if the object has children\r\n    if (shape === 'unknown' && addChildren && object.children.length >= 1) {\r\n      object.children.forEach((child: any) => {\r\n        if (child.isMesh) {\r\n          const p = this.prepareThreeObjectForCollisionShape(child)\r\n          const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n          // @ts-ignore\r\n          cs.offset = child.position.clone() // this is relative position to its parent\r\n          collisionShapes.push(cs)\r\n        }\r\n      })\r\n    }\r\n\r\n    // FALLBACK: if we do not have any collisionShapes yet, add a simple box as a fallback\r\n    if (collisionShapes.length === 0) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    const collisionShape =\r\n      collisionShapes.length === 1 ? collisionShapes[0] : this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n\r\n    // add rigid body\r\n    // object.position.copy(pos)\r\n    // object.quaternion.copy(quat)\r\n\r\n    const localTransform = this.finishCollisionShape(collisionShape, pos, quat, scale, margin)\r\n    const rigidBody = this.collisionShapeToRigidBody(collisionShape, localTransform, mass, isKinematicObject)\r\n\r\n    this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, breakable, offset)\r\n    object.body.ignoreScale = ignoreScale\r\n  }\r\n\r\n  public addRigidBodyToWorld(\r\n    object: ExtendedObject3D,\r\n    rigidBody: Ammo.btRigidBody,\r\n    collisionFlags: number,\r\n    collisionGroup: number,\r\n    collisionMask: number,\r\n    breakable: boolean,\r\n    offset?: { x?: number; y?: number; z?: number }\r\n  ) {\r\n    this.rigidBodies.push(object)\r\n    this.physicsWorld.addRigidBody(rigidBody, collisionGroup, collisionMask)\r\n\r\n    const ptr = Object.values(rigidBody)[0]\r\n    // @ts-ignore\r\n    rigidBody.name = object.name\r\n    object.body = new PhysicsBody(this, rigidBody)\r\n    object.hasBody = true\r\n    // @ts-ignore\r\n    object.ptr = ptr\r\n    // @ts-ignore\r\n    rigidBody.threeObject = object\r\n\r\n    if (breakable) object.body.breakable = true\r\n    if (offset) object.body.offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    object.body.setCollisionFlags(collisionFlags)\r\n  }\r\n\r\n  public finishCollisionShape(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    pos: Vector3,\r\n    quat: Quaternion,\r\n    scale: Vector3,\r\n    margin: number\r\n  ) {\r\n    collisionShape.setMargin(margin)\r\n\r\n    const rotation = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    rotation.setValue(quat.x, quat.y, quat.z, quat.w)\r\n\r\n    const localTransform = new Ammo.btTransform()\r\n    localTransform.setIdentity()\r\n    localTransform.getOrigin().setValue(pos.x, pos.y, pos.z)\r\n    localTransform.setRotation(rotation)\r\n\r\n    Ammo.destroy(rotation)\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    return localTransform\r\n  }\r\n\r\n  public collisionShapeToRigidBody(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    localTransform: Ammo.btTransform,\r\n    mass: number,\r\n    disableDeactivation: boolean\r\n  ) {\r\n    const motionState = new Ammo.btDefaultMotionState(localTransform)\r\n    const localInertia = new Ammo.btVector3(0, 0, 0)\r\n    if (mass > 0) collisionShape.calculateLocalInertia(mass, localInertia)\r\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, collisionShape, localInertia)\r\n    const rigidBody = new Ammo.btRigidBody(rbInfo)\r\n    if (mass > 0 || disableDeactivation) rigidBody.setActivationState(4) // Disable deactivation\r\n    return rigidBody\r\n  }\r\n}\r\n\r\nexport { AmmoPhysics }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport {\r\n  SphereConfig,\r\n  MaterialConfig,\r\n  BoxConfig,\r\n  GroundConfig,\r\n  CylinderConfig,\r\n  ExtendedObject3D,\r\n  ExtrudeConfig,\r\n  TorusConfig,\r\n  AddExistingConfig,\r\n  PlaneConfig,\r\n  ConeConfig\r\n} from '@enable3d/common/dist/types'\r\nimport Factories from '@enable3d/common/dist/factories'\r\n\r\nclass Shapes {\r\n  constructor(\r\n    private factory: Factories,\r\n    private addExisting: (object: ExtendedObject3D, config?: AddExistingConfig) => void\r\n  ) {}\r\n\r\n  public addPlane(planeConfig: PlaneConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const plane = this.factory.add.plane(planeConfig, materialConfig)\r\n    this.addExisting(plane, planeConfig)\r\n    return plane\r\n  }\r\n\r\n  public addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const sphere = this.factory.add.sphere(sphereConfig, materialConfig)\r\n    this.addExisting(sphere, sphereConfig)\r\n    return sphere\r\n  }\r\n\r\n  public addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const box = this.factory.add.box(boxConfig, materialConfig)\r\n    this.addExisting(box, boxConfig)\r\n    return box\r\n  }\r\n\r\n  public addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) {\r\n    const ground = this.factory.add.ground(groundConfig, materialConfig)\r\n    const config = { ...groundConfig, mass: 0, collisionFlags: 1 }\r\n    this.addExisting(ground, config)\r\n    return ground\r\n  }\r\n\r\n  public addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cylinder = this.factory.add.cylinder(cylinderConfig, materialConfig)\r\n    this.addExisting(cylinder, cylinderConfig)\r\n    return cylinder\r\n  }\r\n\r\n  public addCone(coneConfig: ConeConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cone = this.factory.add.cone(coneConfig, materialConfig)\r\n    this.addExisting(cone, coneConfig)\r\n    return cone\r\n  }\r\n\r\n  public addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const torus = this.factory.add.torus(torusConfig, materialConfig)\r\n    this.addExisting(torus, torusConfig)\r\n    return torus\r\n  }\r\n\r\n  public addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) {\r\n    const object = this.factory.add.extrude(extrudeConfig, materialConfig)\r\n    object.translateX(1)\r\n    this.addExisting(object)\r\n    return object\r\n  }\r\n}\r\n\r\nexport default Shapes\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { Quaternion } from '@enable3d/three-wrapper/dist/index'\r\n\r\n// https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7228\r\nexport const createTorusShape = (\r\n  config: { radius: number; tube: number; tubularSegments: number },\r\n  quat: Quaternion\r\n) => {\r\n  const { radius = 1, tube = 0.4, tubularSegments = 8 } = config\r\n\r\n  const SIMD_PI = Math.PI\r\n  const subdivisions = tubularSegments\r\n  const gap = Math.sqrt(2.0 * tube * tube - 2.0 * tube * tube * Math.cos((2.0 * SIMD_PI) / subdivisions))\r\n\r\n  const btHalfExtents = new Ammo.btVector3(tube, SIMD_PI / subdivisions + 0.5 * gap, tube)\r\n  const cylinderShape = new Ammo.btCylinderShape(btHalfExtents)\r\n  cylinderShape.setMargin(0.05)\r\n\r\n  const compoundShape = new Ammo.btCompoundShape()\r\n\r\n  const forward = new Ammo.btVector3(0, 0, 1)\r\n  const side = new Ammo.btVector3(0, radius, 0)\r\n  const rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w)\r\n\r\n  for (let x = 0; x < subdivisions; x++) {\r\n    const angle = (x * 2.0 * SIMD_PI) / subdivisions\r\n    const position = side.rotate(forward, angle)\r\n    const transform = new Ammo.btTransform()\r\n    rotation.setRotation(forward, angle + Math.PI / 2)\r\n    transform.setIdentity()\r\n    transform.setOrigin(position)\r\n    transform.setRotation(rotation)\r\n    compoundShape.addChildShape(transform, cylinderShape)\r\n  }\r\n\r\n  return compoundShape\r\n}\r\n"],"sourceRoot":""}